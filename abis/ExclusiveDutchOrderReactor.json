{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPermit2",
          "name": "_permit2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DeadlineBeforeEndTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "duplicateToken",
          "type": "address"
        }
      ],
      "name": "DuplicateFeeOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EndTimeBeforeStartTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "FeeTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectAmounts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InputAndOutputDecay",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientEth",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "actualBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedBalance",
          "type": "uint256"
        }
      ],
      "name": "InsufficientOutput",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeToken",
          "type": "address"
        }
      ],
      "name": "InvalidFeeToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReactor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoExclusiveOverride",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderEndTimeBeforeStartTime",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "Fill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldFeeController",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFeeController",
          "type": "address"
        }
      ],
      "name": "ProtocolFeeControllerSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DIRECT_FILL",
      "outputs": [
        {
          "internalType": "contract IReactorCallback",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "contract IReactorCallback",
          "name": "fillContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "fillData",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IReactorCallback",
          "name": "fillContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "fillData",
          "type": "bytes"
        }
      ],
      "name": "executeBatch",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeController",
      "outputs": [
        {
          "internalType": "contract IProtocolFeeController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "contract IPermit2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newFeeController",
          "type": "address"
        }
      ],
      "name": "setProtocolFeeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162003518380380620035188339810160408190526200003491620000b8565b600080546001600160a01b0319166001600160a01b03831690811782556040518492849283928392907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350506001600255506001600160a01b031660805250620000f79050565b6001600160a01b0381168114620000b557600080fd5b50565b60008060408385031215620000cc57600080fd5b8251620000d9816200009f565b6020840151909250620000ec816200009f565b809150509250929050565b6080516133f8620001206000396000818160a7015281816115c601526119c201526133f86000f3fe60806040526004361061007b5760003560e01c80636f1d5f511161004e5780636f1d5f511461013f5780638da5cb5b14610152578063f2fde38b1461017f578063fccbcaaf1461019f57600080fd5b806305afc9771461008057806312261ee7146100955780632d771389146100f25780636999b37714610112575b600080fd5b61009361008e366004612674565b6101b4565b005b3480156100a157600080fd5b506100c97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100fe57600080fd5b5061009361010d3660046126f7565b6102b6565b34801561011e57600080fd5b506001546100c99073ffffffffffffffffffffffffffffffffffffffff1681565b61009361014d36600461271b565b6103c2565b34801561015e57600080fd5b506000546100c99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561018b57600080fd5b5061009361019a3660046126f7565b61051e565b3480156101ab57600080fd5b506100c9600181565b6101bc61060f565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816101d357905050905061027b85610680565b8160008151811061028e5761028e6127fc565b60200260200101819052506102a5818585856107ec565b506102b06001600255565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527fb904ae9529e373e48bc82df4326cceaf1b4c472babf37f5b7dec46fecc6b53e0910160405180910390a15050565b6103ca61060f565b60008467ffffffffffffffff8111156103e5576103e56127cd565b6040519080825280602002602001820160405280156104a057816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104035790505b50905060005b858110156104ff576104da8787838181106104c3576104c36127fc565b90506020028101906104d5919061282b565b610680565b8282815181106104ec576104ec6127fc565b60209081029190910101526001016104a6565b5061050c818585856107ec565b506105176001600255565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610333565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b600280540361067a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610333565b60028055565b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101829052906106f98380612869565b8101906107069190612bf2565b9050610711816109b4565b6040518060a0016040528082600001518152602001610747836020015184604001518560a00151610ae69092919063ffffffff16565b815260200161076d836020015184604001518560c00151610bb89092919063ffffffff16565b81526020018480602001906107829190612869565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016107c583610c9f565b90526060820151602083015160808401519294506107e69285929190610f71565b50919050565b73ffffffffffffffffffffffffffffffffffffffff831660011460005b85518110156108f6576000868281518110610826576108266127fc565b6020026020010151905061083981611012565b610843813361148c565b610858818461085257876115c4565b336115c4565b80600001516020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168884815181106108a0576108a06127fc565b6020026020010151608001517f78ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd668460000151604001516040516108e591815260200190565b60405180910390a450600101610809565b50801561090b5761090685611957565b610517565b600061091686611a32565b6040517f9943fa8900000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff861690639943fa8990610971908990339089908990600401612e99565b600060405180830381600087803b15801561098b57600080fd5b505af115801561099f573d6000803e3d6000fd5b505050506109ac81611cf8565b505050505050565b604081015181516060015110156109f7576040517f773a618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806020015181604001511015610a39576040517f48fee69c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a0810151604081015160209091015114610ae35760005b8160c0015151811015610ae1578160c001518181518110610a7457610a746127fc565b6020026020010151604001518260c001518281518110610a9657610a966127fc565b60200260200101516020015114610ad9576040517fd303758b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101610a51565b505b50565b610b206040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b836040015184602001511115610b62576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b78856020015186604001518686611dbb565b60408051606081018252875173ffffffffffffffffffffffffffffffffffffffff1681526020810192909252958601519581019590955250929392505050565b82516060908067ffffffffffffffff811115610bd657610bd66127cd565b604051908082528060200260200182016040528015610c3f57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610bf45790505b50915060005b81811015610c9657610c71868281518110610c6257610c626127fc565b60200260200101518686611e55565b838281518110610c8357610c836127fc565b6020908102919091010152600101610c45565b50509392505050565b6040517f4578636c757369766544757463684f726465722800000000000000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060348201527f75696e74323536206465636179537461727454696d652c00000000000000000060438201527f75696e74323536206465636179456e6454696d652c0000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606f8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060878201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a68201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b98201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060d28201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e982015260009060ff01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181526080830190915260528083529091906132b660208301396040518060c00160405280608d8152602001613336608d9139604051602001610e9193929190612f7c565b60405160208183030381529060405280519060200120610eb48360000151611f25565b83602001518460400151856060015186608001518760a00151600001518860a00151602001518960a0015160400151610ef08b60c00151611fbf565b60408051602081019b909b528a01989098526060890196909652608088019490945273ffffffffffffffffffffffffffffffffffffffff92831660a088015260c08701919091521660e0850152610100840152610120830152610140820152610160015b604051602081830303815290604052805190602001209050919050565b610f7b838361205d565b6102b05780610fb6576040517fb9ec1e9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604084015160005b81518110156109ac576000828281518110610fdb57610fdb6127fc565b6020026020010151905061100484612710610ff69190612fee565b6020830151906127106120aa565b602090910152600101610fbe565b60015473ffffffffffffffffffffffffffffffffffffffff166110325750565b6001546040517f8aa6cf0300000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690638aa6cf0390611089908590600401613001565b600060405180830381865afa1580156110a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110ec9190810190613014565b60408301515181519192509060006111048284612fee565b67ffffffffffffffff81111561111c5761111c6127cd565b60405190808252806020026020018201604052801561118557816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161113a5790505b50905060005b838110156111d657856040015181815181106111a9576111a96127fc565b60200260200101518282815181106111c3576111c36127fc565b602090810291909101015260010161118b565b5060005b8281101561147d5760008582815181106111f6576111f66127fc565b6020026020010151905060005b828110156112b45786818151811061121d5761121d6127fc565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16036112ac5781516040517ffff0830300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610333565b600101611203565b506000805b86811015611339576000896040015182815181106112d9576112d96127fc565b60200260200101519050836000015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361133057602081015161132d9084612fee565b92505b506001016112b9565b50815160208901515173ffffffffffffffffffffffffffffffffffffffff9182169116036113765760208089015101516113739082612fee565b90505b806000036113cb5781516040517feddf07f500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610333565b6113d98160056127106120aa565b8260200151111561144c578151602083015160408085015190517f82e7565600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841660048201526024810192909252919091166044820152606401610333565b81846114588589612fee565b81518110611468576114686127fc565b602090810291909101015250506001016111da565b50604090940193909352505050565b81515173ffffffffffffffffffffffffffffffffffffffff1630146114dd576040517f4ddf4a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516060015142111561151c576040517f70f65caa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516080015173ffffffffffffffffffffffffffffffffffffffff1615610ae1578151608001516040517f6e84ba2b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636e84ba2b9061159890849086906004016130e4565b60006040518083038186803b1580156115b057600080fd5b505afa1580156109ac573d6000803e3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe611684846040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a081018252602080840180515173ffffffffffffffffffffffffffffffffffffffff1660608085019182529151850151608085015283528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830190925273ffffffffffffffffffffffffffffffffffffffff86168252808701518101519082015285600001516020015186608001516040518060800160405280605281526020016132b660529139604080517f4578636c757369766544757463684f726465722800000000000000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060348201527f75696e74323536206465636179537461727454696d652c00000000000000000060438201527f75696e74323536206465636179456e6454696d652c0000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606f8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060878201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a68201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b98201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060d28201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e9820152815160df8183030181526101bf8201909252608d60ff8201818152916133369061011f01396040518060600160405280602e8152602001613308602e91396040516020016118bc9493929190613113565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260608a01517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b168352611929969594939260040161319c565b600060405180830381600087803b15801561194357600080fd5b505af11580156109ac573d6000803e3d6000fd5b60005b8151811015611a1f576000828281518110611977576119776127fc565b6020026020010151905060005b816040015151811015611a15576000826040015182815181106119a9576119a96127fc565b60200260200101519050611a0c816040015182602001517f0000000000000000000000000000000000000000000000000000000000000000846000015173ffffffffffffffffffffffffffffffffffffffff166120e6909392919063ffffffff16565b50600101611984565b505060010161195a565b504715610ae357610ae360003347612263565b60606000805b8351811015611a7157838181518110611a5357611a536127fc565b60200260200101516040015151820191508080600101915050611a38565b508067ffffffffffffffff811115611a8b57611a8b6127cd565b604051908082528060200260200182016040528015611af457816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181611aa95790505b509150506000805b8351811015611cf0576000848281518110611b1957611b196127fc565b6020026020010151905060005b816040015151811015611ce657600082604001518281518110611b4b57611b4b6127fc565b602002602001015190506000805b86811015611c27576000888281518110611b7557611b756127fc565b60200260200101519050836040015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16148015611bf55750836000015173ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15611c1e5760019250836020015181604001818151611c149190612fee565b905250611c279050565b50600101611b59565b5080611cdc5760408201518251600091611c579173ffffffffffffffffffffffffffffffffffffffff169061233e565b90506040518060600160405280846040015173ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015183611cb49190612fee565b815250888881518110611cc957611cc96127fc565b6020908102919091010152506001909501945b5050600101611b26565b5050600101611afc565b508152919050565b60005b8151811015610ae1576000828281518110611d1857611d186127fc565b602002602001015190506000611d558260000151836020015173ffffffffffffffffffffffffffffffffffffffff1661233e90919063ffffffff16565b90508160400151811015611da6578082604001516040517f2c19b8b8000000000000000000000000000000000000000000000000000000008152600401610333929190918252602082015260400190565b50508080611db390613264565b915050611cfb565b600082821015611df7576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428211611e05575082611e4d565b428310611e13575083611e4d565b4283900383830386861015611e3857611e2f86880383836120aa565b87039250611e4a565b611e4587870383836120aa565b870192505b50505b949350505050565b6040805160608101825260008082526020820181905291810191909152836040015184602001511015611eb4576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611eca856020015186604001518686611dbb565b90506040518060600160405280866000015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001866060015173ffffffffffffffffffffffffffffffffffffffff168152509150509392505050565b60006040518060c00160405280608d8152602001613336608d913980516020918201208351848301516040808701516060880151608089015160a08a01518051908901209351610f5498939492939192910196875273ffffffffffffffffffffffffffffffffffffffff958616602088015293851660408701526060860192909252608085015290911660a083015260c082015260e00190565b600080825160200267ffffffffffffffff811115611fdf57611fdf6127cd565b6040519080825280601f01601f191660200182016040528015612009576020820181803683370190505b50905060005b835181101561204e57600061203c85838151811061202f5761202f6127fc565b6020026020010151612409565b6020838102850101525060010161200f565b50805160209091012092915050565b600073ffffffffffffffffffffffffffffffffffffffff8316158061208157508142115b806120a1575073ffffffffffffffffffffffffffffffffffffffff831633145b90505b92915050565b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04841183021582026120df57600080fd5b5091020490565b73ffffffffffffffffffffffffffffffffffffffff84166121a15760008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d806000811461215b576040519150601f19603f3d011682016040523d82523d6000602084013e612160565b606091505b505090508061219b576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506102b0565b8073ffffffffffffffffffffffffffffffffffffffff166336c7851633856121c886612480565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529183166024830152821660448201529087166064820152608401600060405180830381600087803b15801561224557600080fd5b505af1158015612259573d6000803e3d6000fd5b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166123185760008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146122d8576040519150601f19603f3d011682016040523d82523d6000602084013e6122dd565b606091505b50509050806102b0576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61233973ffffffffffffffffffffffffffffffffffffffff8416838361252a565b505050565b600073ffffffffffffffffffffffffffffffffffffffff8316612379575073ffffffffffffffffffffffffffffffffffffffff8116316120a4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301528416906370a0823190602401602060405180830381865afa1580156123e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a1919061329c565b60006040518060800160405280605281526020016132b660529139805160209182012083518483015160408087015160608801519151610f54969192910194855273ffffffffffffffffffffffffffffffffffffffff93841660208601526040850192909252606084015216608082015260a00190565b600073ffffffffffffffffffffffffffffffffffffffff821115612526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f36302062697473000000000000000000000000000000000000000000000000006064820152608401610333565b5090565b60006040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610333565b73ffffffffffffffffffffffffffffffffffffffff81168114610ae357600080fd5b8035612626816125f9565b919050565b60008083601f84011261263d57600080fd5b50813567ffffffffffffffff81111561265557600080fd5b60208301915083602082850101111561266d57600080fd5b9250929050565b6000806000806060858703121561268a57600080fd5b843567ffffffffffffffff808211156126a257600080fd5b90860190604082890312156126b657600080fd5b9094506020860135906126c8826125f9565b909350604086013590808211156126de57600080fd5b506126eb8782880161262b565b95989497509550505050565b60006020828403121561270957600080fd5b8135612714816125f9565b9392505050565b60008060008060006060868803121561273357600080fd5b853567ffffffffffffffff8082111561274b57600080fd5b818801915088601f83011261275f57600080fd5b81358181111561276e57600080fd5b8960208260051b850101111561278357600080fd5b602083019750809650506127996020890161261b565b945060408801359150808211156127af57600080fd5b506127bc8882890161262b565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261285f57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261289e57600080fd5b83018035915067ffffffffffffffff8211156128b957600080fd5b60200191503681900382131561266d57600080fd5b6040516060810167ffffffffffffffff811182821017156128f1576128f16127cd565b60405290565b6040516080810167ffffffffffffffff811182821017156128f1576128f16127cd565b60405160e0810167ffffffffffffffff811182821017156128f1576128f16127cd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612984576129846127cd565b604052919050565b600082601f83011261299d57600080fd5b813567ffffffffffffffff8111156129b7576129b76127cd565b6129e860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161293d565b8181528460208386010111156129fd57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c08284031215612a2c57600080fd5b60405160c0810167ffffffffffffffff8282108183111715612a5057612a506127cd565b8160405282935084359150612a64826125f9565b908252602084013590612a76826125f9565b816020840152604085013560408401526060850135606084015260808501359150612aa0826125f9565b81608084015260a0850135915080821115612aba57600080fd5b50612ac78582860161298c565b60a0830152505092915050565b600060608284031215612ae657600080fd5b612aee6128ce565b90508135612afb816125f9565b80825250602082013560208201526040820135604082015292915050565b600067ffffffffffffffff821115612b3357612b336127cd565b5060051b60200190565b600082601f830112612b4e57600080fd5b81356020612b63612b5e83612b19565b61293d565b82815260079290921b84018101918181019086841115612b8257600080fd5b8286015b84811015612be75760808189031215612b9f5760008081fd5b612ba76128f7565b8135612bb2816125f9565b8152818501358582015260408083013590820152606080830135612bd5816125f9565b90820152835291830191608001612b86565b509695505050505050565b600060208284031215612c0457600080fd5b813567ffffffffffffffff80821115612c1c57600080fd5b908301906101208286031215612c3157600080fd5b612c3961291a565b823582811115612c4857600080fd5b612c5487828601612a1a565b8252506020830135602082015260408301356040820152612c776060840161261b565b606082015260808301356080820152612c938660a08501612ad4565b60a082015261010083013582811115612cab57600080fd5b612cb787828601612b3d565b60c08301525095945050505050565b60005b83811015612ce1578181015183820152602001612cc9565b50506000910152565b60008151808452612d02816020860160208601612cc6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015612d93578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101612d48565b509495945050505050565b6000815160e0845273ffffffffffffffffffffffffffffffffffffffff8082511660e08601528060208301511661010086015260408201516101208601526060820151610140860152806080830151166101608601525060a0810151905060c0610180850152612e126101a0850182612cea565b90506020830151612e506020860182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408301518482036080860152612e688282612d34565b915050606083015184820360a0860152612e828282612cea565b915050608083015160c08501528091505092915050565b6000606082016060835280875180835260808501915060808160051b86010192506020808a0160005b83811015612f0e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888703018552612efc868351612d9e565b95509382019390820190600101612ec2565b505073ffffffffffffffffffffffffffffffffffffffff89168187015285840360408701528684528688828601376000848801820152601f9096017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909201909401979650505050505050565b60008451612f8e818460208901612cc6565b845190830190612fa2818360208901612cc6565b8451910190612fb5818360208801612cc6565b0195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156120a4576120a4612fbf565b6020815260006120a16020830184612d9e565b6000602080838503121561302757600080fd5b825167ffffffffffffffff81111561303e57600080fd5b8301601f8101851361304f57600080fd5b805161305d612b5e82612b19565b8181526060918202830184019184820191908884111561307c57600080fd5b938501935b838510156130d85780858a0312156130995760008081fd5b6130a16128ce565b85516130ac816125f9565b815285870151878201526040808701516130c5816125f9565b9082015283529384019391850191613081565b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000611e4d6040830184612d9e565b7f4578636c757369766544757463684f72646572207769746e657373290000000081526000855161314b81601c850160208a01612cc6565b85519083019061316281601c840160208a01612cc6565b855191019061317881601c840160208901612cc6565b845191019061318e81601c840160208801612cc6565b01601c019695505050505050565b60006101406131cc838a51805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b602089015160408401526040890151606084015261320d6080840189805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b73ffffffffffffffffffffffffffffffffffffffff871660c08401528560e08401528061010084015261324281840186612cea565b90508281036101208401526132578185612cea565b9998505050505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361329557613295612fbf565b5060010190565b6000602082840312156132ae57600080fd5b505191905056fe44757463684f7574707574286164647265737320746f6b656e2c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e7429546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f28616464726573732072656163746f722c6164647265737320737761707065722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c61646472657373206164646974696f6e616c56616c69646174696f6e436f6e74726163742c6279746573206164646974696f6e616c56616c69646174696f6e4461746129a2646970667358221220903251d00e78287b8da3d960daa9f776c1faec5ca86f1d9052f5efa102c9533064736f6c63430008130033",
    "sourceMap": "634:2679:63:-:0;;;1035:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1045:5:34;:14;;-1:-1:-1;;;;;;1045:14:34;-1:-1:-1;;;;;1045:14:34;;;;;;;1075:40;;1105:8:63;;1045:14:34;;;;;;:5;1075:40;;1045:5;;1075:40;-1:-1:-1;;1716:1:21;1821:7;:22;-1:-1:-1;;;;;;1837:18:61::1;;::::0;-1:-1:-1;634:2679:63;;-1:-1:-1;634:2679:63;14:141:103;-1:-1:-1;;;;;99:31:103;;89:42;;79:70;;145:1;142;135:12;79:70;14:141;:::o;160:423::-;257:6;265;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;366:9;360:16;385:41;420:5;385:41;:::i;:::-;495:2;480:18;;474:25;445:5;;-1:-1:-1;508:43:103;474:25;508:43;:::i;:::-;570:7;560:17;;;160:423;;;;;:::o;:::-;634:2679:63;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061007b5760003560e01c80636f1d5f511161004e5780636f1d5f511461013f5780638da5cb5b14610152578063f2fde38b1461017f578063fccbcaaf1461019f57600080fd5b806305afc9771461008057806312261ee7146100955780632d771389146100f25780636999b37714610112575b600080fd5b61009361008e366004612674565b6101b4565b005b3480156100a157600080fd5b506100c97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100fe57600080fd5b5061009361010d3660046126f7565b6102b6565b34801561011e57600080fd5b506001546100c99073ffffffffffffffffffffffffffffffffffffffff1681565b61009361014d36600461271b565b6103c2565b34801561015e57600080fd5b506000546100c99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561018b57600080fd5b5061009361019a3660046126f7565b61051e565b3480156101ab57600080fd5b506100c9600181565b6101bc61060f565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816101d357905050905061027b85610680565b8160008151811061028e5761028e6127fc565b60200260200101819052506102a5818585856107ec565b506102b06001600255565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527fb904ae9529e373e48bc82df4326cceaf1b4c472babf37f5b7dec46fecc6b53e0910160405180910390a15050565b6103ca61060f565b60008467ffffffffffffffff8111156103e5576103e56127cd565b6040519080825280602002602001820160405280156104a057816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104035790505b50905060005b858110156104ff576104da8787838181106104c3576104c36127fc565b90506020028101906104d5919061282b565b610680565b8282815181106104ec576104ec6127fc565b60209081029190910101526001016104a6565b5061050c818585856107ec565b506105176001600255565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610333565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b600280540361067a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610333565b60028055565b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101829052906106f98380612869565b8101906107069190612bf2565b9050610711816109b4565b6040518060a0016040528082600001518152602001610747836020015184604001518560a00151610ae69092919063ffffffff16565b815260200161076d836020015184604001518560c00151610bb89092919063ffffffff16565b81526020018480602001906107829190612869565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016107c583610c9f565b90526060820151602083015160808401519294506107e69285929190610f71565b50919050565b73ffffffffffffffffffffffffffffffffffffffff831660011460005b85518110156108f6576000868281518110610826576108266127fc565b6020026020010151905061083981611012565b610843813361148c565b610858818461085257876115c4565b336115c4565b80600001516020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168884815181106108a0576108a06127fc565b6020026020010151608001517f78ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd668460000151604001516040516108e591815260200190565b60405180910390a450600101610809565b50801561090b5761090685611957565b610517565b600061091686611a32565b6040517f9943fa8900000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff861690639943fa8990610971908990339089908990600401612e99565b600060405180830381600087803b15801561098b57600080fd5b505af115801561099f573d6000803e3d6000fd5b505050506109ac81611cf8565b505050505050565b604081015181516060015110156109f7576040517f773a618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806020015181604001511015610a39576040517f48fee69c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a0810151604081015160209091015114610ae35760005b8160c0015151811015610ae1578160c001518181518110610a7457610a746127fc565b6020026020010151604001518260c001518281518110610a9657610a966127fc565b60200260200101516020015114610ad9576040517fd303758b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101610a51565b505b50565b610b206040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b836040015184602001511115610b62576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b78856020015186604001518686611dbb565b60408051606081018252875173ffffffffffffffffffffffffffffffffffffffff1681526020810192909252958601519581019590955250929392505050565b82516060908067ffffffffffffffff811115610bd657610bd66127cd565b604051908082528060200260200182016040528015610c3f57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610bf45790505b50915060005b81811015610c9657610c71868281518110610c6257610c626127fc565b60200260200101518686611e55565b838281518110610c8357610c836127fc565b6020908102919091010152600101610c45565b50509392505050565b6040517f4578636c757369766544757463684f726465722800000000000000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060348201527f75696e74323536206465636179537461727454696d652c00000000000000000060438201527f75696e74323536206465636179456e6454696d652c0000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606f8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060878201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a68201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b98201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060d28201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e982015260009060ff01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181526080830190915260528083529091906132b660208301396040518060c00160405280608d8152602001613336608d9139604051602001610e9193929190612f7c565b60405160208183030381529060405280519060200120610eb48360000151611f25565b83602001518460400151856060015186608001518760a00151600001518860a00151602001518960a0015160400151610ef08b60c00151611fbf565b60408051602081019b909b528a01989098526060890196909652608088019490945273ffffffffffffffffffffffffffffffffffffffff92831660a088015260c08701919091521660e0850152610100840152610120830152610140820152610160015b604051602081830303815290604052805190602001209050919050565b610f7b838361205d565b6102b05780610fb6576040517fb9ec1e9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604084015160005b81518110156109ac576000828281518110610fdb57610fdb6127fc565b6020026020010151905061100484612710610ff69190612fee565b6020830151906127106120aa565b602090910152600101610fbe565b60015473ffffffffffffffffffffffffffffffffffffffff166110325750565b6001546040517f8aa6cf0300000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690638aa6cf0390611089908590600401613001565b600060405180830381865afa1580156110a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110ec9190810190613014565b60408301515181519192509060006111048284612fee565b67ffffffffffffffff81111561111c5761111c6127cd565b60405190808252806020026020018201604052801561118557816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161113a5790505b50905060005b838110156111d657856040015181815181106111a9576111a96127fc565b60200260200101518282815181106111c3576111c36127fc565b602090810291909101015260010161118b565b5060005b8281101561147d5760008582815181106111f6576111f66127fc565b6020026020010151905060005b828110156112b45786818151811061121d5761121d6127fc565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16036112ac5781516040517ffff0830300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610333565b600101611203565b506000805b86811015611339576000896040015182815181106112d9576112d96127fc565b60200260200101519050836000015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361133057602081015161132d9084612fee565b92505b506001016112b9565b50815160208901515173ffffffffffffffffffffffffffffffffffffffff9182169116036113765760208089015101516113739082612fee565b90505b806000036113cb5781516040517feddf07f500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610333565b6113d98160056127106120aa565b8260200151111561144c578151602083015160408085015190517f82e7565600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841660048201526024810192909252919091166044820152606401610333565b81846114588589612fee565b81518110611468576114686127fc565b602090810291909101015250506001016111da565b50604090940193909352505050565b81515173ffffffffffffffffffffffffffffffffffffffff1630146114dd576040517f4ddf4a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516060015142111561151c576040517f70f65caa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516080015173ffffffffffffffffffffffffffffffffffffffff1615610ae1578151608001516040517f6e84ba2b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636e84ba2b9061159890849086906004016130e4565b60006040518083038186803b1580156115b057600080fd5b505afa1580156109ac573d6000803e3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe611684846040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a081018252602080840180515173ffffffffffffffffffffffffffffffffffffffff1660608085019182529151850151608085015283528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830190925273ffffffffffffffffffffffffffffffffffffffff86168252808701518101519082015285600001516020015186608001516040518060800160405280605281526020016132b660529139604080517f4578636c757369766544757463684f726465722800000000000000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060348201527f75696e74323536206465636179537461727454696d652c00000000000000000060438201527f75696e74323536206465636179456e6454696d652c0000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606f8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060878201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a68201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b98201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060d28201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e9820152815160df8183030181526101bf8201909252608d60ff8201818152916133369061011f01396040518060600160405280602e8152602001613308602e91396040516020016118bc9493929190613113565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260608a01517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b168352611929969594939260040161319c565b600060405180830381600087803b15801561194357600080fd5b505af11580156109ac573d6000803e3d6000fd5b60005b8151811015611a1f576000828281518110611977576119776127fc565b6020026020010151905060005b816040015151811015611a15576000826040015182815181106119a9576119a96127fc565b60200260200101519050611a0c816040015182602001517f0000000000000000000000000000000000000000000000000000000000000000846000015173ffffffffffffffffffffffffffffffffffffffff166120e6909392919063ffffffff16565b50600101611984565b505060010161195a565b504715610ae357610ae360003347612263565b60606000805b8351811015611a7157838181518110611a5357611a536127fc565b60200260200101516040015151820191508080600101915050611a38565b508067ffffffffffffffff811115611a8b57611a8b6127cd565b604051908082528060200260200182016040528015611af457816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181611aa95790505b509150506000805b8351811015611cf0576000848281518110611b1957611b196127fc565b6020026020010151905060005b816040015151811015611ce657600082604001518281518110611b4b57611b4b6127fc565b602002602001015190506000805b86811015611c27576000888281518110611b7557611b756127fc565b60200260200101519050836040015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16148015611bf55750836000015173ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15611c1e5760019250836020015181604001818151611c149190612fee565b905250611c279050565b50600101611b59565b5080611cdc5760408201518251600091611c579173ffffffffffffffffffffffffffffffffffffffff169061233e565b90506040518060600160405280846040015173ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015183611cb49190612fee565b815250888881518110611cc957611cc96127fc565b6020908102919091010152506001909501945b5050600101611b26565b5050600101611afc565b508152919050565b60005b8151811015610ae1576000828281518110611d1857611d186127fc565b602002602001015190506000611d558260000151836020015173ffffffffffffffffffffffffffffffffffffffff1661233e90919063ffffffff16565b90508160400151811015611da6578082604001516040517f2c19b8b8000000000000000000000000000000000000000000000000000000008152600401610333929190918252602082015260400190565b50508080611db390613264565b915050611cfb565b600082821015611df7576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428211611e05575082611e4d565b428310611e13575083611e4d565b4283900383830386861015611e3857611e2f86880383836120aa565b87039250611e4a565b611e4587870383836120aa565b870192505b50505b949350505050565b6040805160608101825260008082526020820181905291810191909152836040015184602001511015611eb4576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611eca856020015186604001518686611dbb565b90506040518060600160405280866000015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001866060015173ffffffffffffffffffffffffffffffffffffffff168152509150509392505050565b60006040518060c00160405280608d8152602001613336608d913980516020918201208351848301516040808701516060880151608089015160a08a01518051908901209351610f5498939492939192910196875273ffffffffffffffffffffffffffffffffffffffff958616602088015293851660408701526060860192909252608085015290911660a083015260c082015260e00190565b600080825160200267ffffffffffffffff811115611fdf57611fdf6127cd565b6040519080825280601f01601f191660200182016040528015612009576020820181803683370190505b50905060005b835181101561204e57600061203c85838151811061202f5761202f6127fc565b6020026020010151612409565b6020838102850101525060010161200f565b50805160209091012092915050565b600073ffffffffffffffffffffffffffffffffffffffff8316158061208157508142115b806120a1575073ffffffffffffffffffffffffffffffffffffffff831633145b90505b92915050565b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04841183021582026120df57600080fd5b5091020490565b73ffffffffffffffffffffffffffffffffffffffff84166121a15760008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d806000811461215b576040519150601f19603f3d011682016040523d82523d6000602084013e612160565b606091505b505090508061219b576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506102b0565b8073ffffffffffffffffffffffffffffffffffffffff166336c7851633856121c886612480565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529183166024830152821660448201529087166064820152608401600060405180830381600087803b15801561224557600080fd5b505af1158015612259573d6000803e3d6000fd5b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166123185760008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146122d8576040519150601f19603f3d011682016040523d82523d6000602084013e6122dd565b606091505b50509050806102b0576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61233973ffffffffffffffffffffffffffffffffffffffff8416838361252a565b505050565b600073ffffffffffffffffffffffffffffffffffffffff8316612379575073ffffffffffffffffffffffffffffffffffffffff8116316120a4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301528416906370a0823190602401602060405180830381865afa1580156123e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a1919061329c565b60006040518060800160405280605281526020016132b660529139805160209182012083518483015160408087015160608801519151610f54969192910194855273ffffffffffffffffffffffffffffffffffffffff93841660208601526040850192909252606084015216608082015260a00190565b600073ffffffffffffffffffffffffffffffffffffffff821115612526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f36302062697473000000000000000000000000000000000000000000000000006064820152608401610333565b5090565b60006040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610333565b73ffffffffffffffffffffffffffffffffffffffff81168114610ae357600080fd5b8035612626816125f9565b919050565b60008083601f84011261263d57600080fd5b50813567ffffffffffffffff81111561265557600080fd5b60208301915083602082850101111561266d57600080fd5b9250929050565b6000806000806060858703121561268a57600080fd5b843567ffffffffffffffff808211156126a257600080fd5b90860190604082890312156126b657600080fd5b9094506020860135906126c8826125f9565b909350604086013590808211156126de57600080fd5b506126eb8782880161262b565b95989497509550505050565b60006020828403121561270957600080fd5b8135612714816125f9565b9392505050565b60008060008060006060868803121561273357600080fd5b853567ffffffffffffffff8082111561274b57600080fd5b818801915088601f83011261275f57600080fd5b81358181111561276e57600080fd5b8960208260051b850101111561278357600080fd5b602083019750809650506127996020890161261b565b945060408801359150808211156127af57600080fd5b506127bc8882890161262b565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261285f57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261289e57600080fd5b83018035915067ffffffffffffffff8211156128b957600080fd5b60200191503681900382131561266d57600080fd5b6040516060810167ffffffffffffffff811182821017156128f1576128f16127cd565b60405290565b6040516080810167ffffffffffffffff811182821017156128f1576128f16127cd565b60405160e0810167ffffffffffffffff811182821017156128f1576128f16127cd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612984576129846127cd565b604052919050565b600082601f83011261299d57600080fd5b813567ffffffffffffffff8111156129b7576129b76127cd565b6129e860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161293d565b8181528460208386010111156129fd57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c08284031215612a2c57600080fd5b60405160c0810167ffffffffffffffff8282108183111715612a5057612a506127cd565b8160405282935084359150612a64826125f9565b908252602084013590612a76826125f9565b816020840152604085013560408401526060850135606084015260808501359150612aa0826125f9565b81608084015260a0850135915080821115612aba57600080fd5b50612ac78582860161298c565b60a0830152505092915050565b600060608284031215612ae657600080fd5b612aee6128ce565b90508135612afb816125f9565b80825250602082013560208201526040820135604082015292915050565b600067ffffffffffffffff821115612b3357612b336127cd565b5060051b60200190565b600082601f830112612b4e57600080fd5b81356020612b63612b5e83612b19565b61293d565b82815260079290921b84018101918181019086841115612b8257600080fd5b8286015b84811015612be75760808189031215612b9f5760008081fd5b612ba76128f7565b8135612bb2816125f9565b8152818501358582015260408083013590820152606080830135612bd5816125f9565b90820152835291830191608001612b86565b509695505050505050565b600060208284031215612c0457600080fd5b813567ffffffffffffffff80821115612c1c57600080fd5b908301906101208286031215612c3157600080fd5b612c3961291a565b823582811115612c4857600080fd5b612c5487828601612a1a565b8252506020830135602082015260408301356040820152612c776060840161261b565b606082015260808301356080820152612c938660a08501612ad4565b60a082015261010083013582811115612cab57600080fd5b612cb787828601612b3d565b60c08301525095945050505050565b60005b83811015612ce1578181015183820152602001612cc9565b50506000910152565b60008151808452612d02816020860160208601612cc6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015612d93578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101612d48565b509495945050505050565b6000815160e0845273ffffffffffffffffffffffffffffffffffffffff8082511660e08601528060208301511661010086015260408201516101208601526060820151610140860152806080830151166101608601525060a0810151905060c0610180850152612e126101a0850182612cea565b90506020830151612e506020860182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408301518482036080860152612e688282612d34565b915050606083015184820360a0860152612e828282612cea565b915050608083015160c08501528091505092915050565b6000606082016060835280875180835260808501915060808160051b86010192506020808a0160005b83811015612f0e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888703018552612efc868351612d9e565b95509382019390820190600101612ec2565b505073ffffffffffffffffffffffffffffffffffffffff89168187015285840360408701528684528688828601376000848801820152601f9096017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909201909401979650505050505050565b60008451612f8e818460208901612cc6565b845190830190612fa2818360208901612cc6565b8451910190612fb5818360208801612cc6565b0195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156120a4576120a4612fbf565b6020815260006120a16020830184612d9e565b6000602080838503121561302757600080fd5b825167ffffffffffffffff81111561303e57600080fd5b8301601f8101851361304f57600080fd5b805161305d612b5e82612b19565b8181526060918202830184019184820191908884111561307c57600080fd5b938501935b838510156130d85780858a0312156130995760008081fd5b6130a16128ce565b85516130ac816125f9565b815285870151878201526040808701516130c5816125f9565b9082015283529384019391850191613081565b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000611e4d6040830184612d9e565b7f4578636c757369766544757463684f72646572207769746e657373290000000081526000855161314b81601c850160208a01612cc6565b85519083019061316281601c840160208a01612cc6565b855191019061317881601c840160208901612cc6565b845191019061318e81601c840160208801612cc6565b01601c019695505050505050565b60006101406131cc838a51805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b602089015160408401526040890151606084015261320d6080840189805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b73ffffffffffffffffffffffffffffffffffffffff871660c08401528560e08401528061010084015261324281840186612cea565b90508281036101208401526132578185612cea565b9998505050505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361329557613295612fbf565b5060010190565b6000602082840312156132ae57600080fd5b505191905056fe44757463684f7574707574286164647265737320746f6b656e2c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e7429546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f28616464726573732072656163746f722c6164647265737320737761707065722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c61646472657373206164646974696f6e616c56616c69646174696f6e436f6e74726163742c6279746573206164646974696f6e616c56616c69646174696f6e4461746129a2646970667358221220903251d00e78287b8da3d960daa9f776c1faec5ca86f1d9052f5efa102c9533064736f6c63430008130033",
    "sourceMap": "634:2679:63:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1897:355:61;;;;;;:::i;:::-;;:::i;:::-;;1616:33;;;;;;;;;;;;;;;;;;1795:42:103;1783:55;;;1765:74;;1753:2;1738:18;1616:33:61;;;;;;;3977:289:41;;;;;;;;;;-1:-1:-1;3977:289:41;;;;;:::i;:::-;;:::i;1379:43::-;;;;;;;;;;-1:-1:-1;1379:43:41;;;;;;;;2287:489:61;;;;;;:::i;:::-;;:::i;690:20:34:-;;;;;;;;;;-1:-1:-1;690:20:34;;;;;;;;1312:161;;;;;;;;;;-1:-1:-1;1312:161:34;;;;;:::i;:::-;;:::i;1655:75:61:-;;;;;;;;;;;;1727:1;1655:75;;1897:355;2261:21:21;:19;:21::i;:::-;2123:22:61::1;::::0;;2143:1:::1;2123:22:::0;;;;;::::1;::::0;;;2083:37:::1;::::0;2123:22:::1;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:22:61;;;;;;;::::1;::::0;::::1;;;;;2083:62;;2175:14;2183:5;2175:7;:14::i;:::-;2155;2170:1;2155:17;;;;;;;;:::i;:::-;;;;;;:34;;;;2200:45;2206:14;2222:12;2236:8;;2200:5;:45::i;:::-;2073:179;2303:20:21::0;1716:1;2809:7;:22;2629:209;2303:20;1897:355:61;;;;:::o;3977:289:41:-;778:5:34;;;;764:10;:19;756:44;;;;;;;4514:2:103;756:44:34;;;4496:21:103;4553:2;4533:18;;;4526:30;4592:14;4572:18;;;4565:42;4624:18;;756:44:34;;;;;;;;;4102:13:41::1;::::0;;::::1;4126:57:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;4198:61:::1;::::0;;4102:13;;;::::1;4888:34:103::0;;;4953:2;4938:18;;4931:43;;;;4198:61:41::1;::::0;4800:18:103;4198:61:41::1;;;;;;;4057:209;3977:289:::0;:::o;2287:489:61:-;2261:21:21;:19;:21::i;:::-;2481:37:61::1;2541:6:::0;2521:34:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2521:34:61;;;;;;;::::1;::::0;::::1;;;;;;2481:74;;2595:9;2590:115;2610:17:::0;;::::1;2590:115;;;2672:18;2680:6;;2687:1;2680:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2672:7;:18::i;:::-;2652:14;2667:1;2652:17;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:38;2629:3:::1;;2590:115;;;;2724:45;2730:14;2746:12;2760:8;;2724:5;:45::i;:::-;2471:305;2303:20:21::0;1716:1;2809:7;:22;2629:209;2303:20;2287:489:61;;;;;:::o;1312:161:34:-;778:5;;;;764:10;:19;756:44;;;;;;;4514:2:103;756:44:34;;;4496:21:103;4553:2;4533:18;;;4526:30;4592:14;4572:18;;;4565:42;4624:18;;756:44:34;4312:336:103;756:44:34;1392:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;1424:42:::1;::::0;1392:16;;1445:10:::1;::::0;1424:42:::1;::::0;1392:5;1424:42:::1;1312:161:::0;:::o;2336:287:21:-;1759:1;2468:7;;:19;2460:63;;;;;;;5580:2:103;2460:63:21;;;5562:21:103;5619:2;5599:18;;;5592:30;5658:33;5638:18;;;5631:61;5709:18;;2460:63:21;5378:355:103;2460:63:21;1759:1;2598:18;;2336:287::o;1174:731:63:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:17:63;:11;;:17;:::i;:::-;1390:52;;;;;;;:::i;:::-;1355:87;;1452:21;1467:5;1452:14;:21::i;:::-;1500:285;;;;;;;;1534:5;:10;;;1500:285;;;;1565:59;1583:5;:20;;;1605:5;:18;;;1565:5;:11;;;:17;;:59;;;;;:::i;:::-;1500:285;;;;1647:61;1667:5;:20;;;1689:5;:18;;;1647:5;:13;;;:19;;:61;;;;;:::i;:::-;1500:285;;;;1727:11;:15;;;;;;;;:::i;:::-;1500:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1500:285:63;;;-1:-1:-1;1500:285:63;;1762:12;:5;:10;:12::i;:::-;1500:285;;1824:21;;;;1847:20;;;;1869:28;;;;1484:301;;-1:-1:-1;1795:103:63;;1484:301;;1824:21;1847:20;1795:28;:103::i;:::-;1345:560;1174:731;;;:::o;2857:977:61:-;2996:27;;;1727:1;2996:27;2978:15;3057:471;3081:6;:13;3077:1;:17;3057:471;;;3119:26;3148:6;3155:1;3148:9;;;;;;;;:::i;:::-;;;;;;;3119:38;;3175:18;3187:5;3175:11;:18::i;:::-;3211:26;:5;3226:10;3211:14;:26::i;:::-;3255:75;3275:5;3282:10;:47;;3316:12;3255:19;:75::i;3282:47::-;3295:10;3255:19;:75::i;:::-;3476:5;:10;;;:18;;;3443:70;;3464:10;3443:70;;3448:6;3455:1;3448:9;;;;;;;;:::i;:::-;;;;;;;:14;;;3443:70;3496:5;:10;;;:16;;;3443:70;;;;12489:25:103;;12477:2;12462:18;;12343:177;3443:70:61;;;;;;;;-1:-1:-1;3096:3:61;;3057:471;;;;3552:10;3548:280;;;3578:26;3597:6;3578:18;:26::i;:::-;3548:280;;;3635:41;3679:28;:6;:26;:28::i;:::-;3721:58;;;;;3635:72;;-1:-1:-1;3721:28:61;;;;;;:58;;3750:6;;3758:10;;3770:8;;;;3721:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3793:24;:16;:22;:24::i;:::-;3621:207;2968:866;2857:977;;;;:::o;2642:669:63:-;2750:18;;;;2728:10;;:19;;;:40;2724:101;;;2791:23;;;;;;;;;;;;;;2724:101;2860:5;:20;;;2839:5;:18;;;:41;2835:108;;;2903:29;;;;;;;;;;;;;;2835:108;2984:11;;;;:21;;;;2957:23;;;;;:48;2953:352;;3054:9;3049:232;3073:5;:13;;;:20;3069:1;:24;3049:232;;;3158:5;:13;;;3172:1;3158:16;;;;;;;;:::i;:::-;;;;;;;:26;;;3126:5;:13;;;3140:1;3126:16;;;;;;;;:::i;:::-;;;;;;;:28;;;:58;3122:141;;3219:21;;;;;;;;;;;;;;3122:141;3095:3;;3049:232;;;;2953:352;2642:669;:::o;3946:462:52:-;4079:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;4079:24:52;4143:5;:15;;;4123:5;:17;;;:35;4119:91;;;4181:18;;;;;;;;;;;;;;4119:91;4220:20;4243:85;4263:5;:17;;;4282:5;:15;;;4299:14;4315:12;4243:19;:85::i;:::-;4347:54;;;;;;;;4358:11;;4347:54;;;;;;;;;;;4385:15;;;;4347:54;;;;;;;-1:-1:-1;4347:54:52;;3946:462;-1:-1:-1;;;3946:462:52:o;3221:453::-;3425:14;;3359:27;;3425:14;3458:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;3458:31:52;;;;;;;;;;;;;;;3449:40;;3528:9;3523:135;3547:12;3543:1;:16;3523:135;;;3596:47;3602:7;3610:1;3602:10;;;;;;;;:::i;:::-;;;;;;;3614:14;3630:12;3596:5;:47::i;:::-;3584:6;3591:1;3584:9;;;;;;;;:::i;:::-;;;;;;;;;;:59;3561:3;;3523:135;;;;3392:282;3221:453;;;;;:::o;2315:541:54:-;1162:365;;17845:22:103;1162:365:54;;;17833:35:103;17898:17;17884:12;;;17877:39;17946:25;17932:12;;;17925:47;18002:23;17988:12;;;17981:45;18056:26;18042:12;;;18035:48;18114:33;18099:13;;;18092:56;18179:21;18164:13;;;18157:44;18232:27;18217:13;;;18210:50;18291:25;18276:13;;;18269:48;18348:24;18333:13;;;18326:47;2386:7:54;;18389:13:103;;1162:365:54;;;;;;;;;;1631:31;;;;;;;;;;1162:365;;;1631:31;1162:365;1631:31;;;1664:28;;;;;;;;;;;;;;;;;1571:127;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1748:21;;;;;;2496:17;:5;:10;;;:15;:17::i;:::-;2531:5;:20;;;2569:5;:18;;;2605:5;:21;;;2644:5;:28;;;2690:5;:11;;;:17;;;2725:5;:11;;;:23;;;2766:5;:11;;;:21;;;2805:20;:5;:13;;;:18;:20::i;:::-;2435:404;;;;;;19529:25:103;;;;19570:18;;19563:34;;;;19613:18;;;19606:34;;;;19656:18;;;19649:34;;;;19702:42;19781:15;;;19760:19;;;19753:44;19813:19;;;19806:35;;;;19878:15;19857:19;;;19850:44;19910:19;;;19903:35;19954:19;;;19947:35;19998:19;;;19991:35;19501:19;;2435:404:54;;;;;;;;;;;;;2412:437;;;;;;2405:444;;2315:541;;;:::o;1081:920:55:-;1351:47;1368:9;1379:18;1351:16;:47::i;:::-;1414:7;1347:84;1535:22;1531:103;;1602:21;;;;;;;;;;;;;;1531:103;1719:13;;;;1688:28;1742:253;1766:7;:14;1762:1;:18;1742:253;;;1797:25;1825:7;1833:1;1825:10;;;;;;;;:::i;:::-;;;;;;;1797:38;;1865:59;1896:22;751:6;1890:28;;;;:::i;:::-;1865:13;;;;;751:6;1865:24;:59::i;:::-;1849:13;;;;:75;1967:3;;1742:253;;1725:2101:41;1810:13;;1802:36;1810:13;1798:73;;1725:2101;:::o;1798:73::-;1915:13;;:34;;;;;1881:31;;1915:13;;;:27;;:34;;1943:5;;1915:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1983:13;;;;:20;2040:17;;1881:68;;-1:-1:-1;1983:20:41;1959:21;2207:32;2040:17;1983:20;2207:32;:::i;:::-;2176:73;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;2176:73:41;;;;;;;;;;;;;;;2142:107;;2289:9;2284:109;2308:13;2304:1;:17;2284:109;;;2362:5;:13;;;2376:1;2362:16;;;;;;;;:::i;:::-;;;;;;;2346:10;2357:1;2346:13;;;;;;;;:::i;:::-;;;;;;;;;;:32;2323:3;;2284:109;;;;2418:9;2413:1370;2437:16;2433:1;:20;2413:1370;;;2470:28;2501:10;2512:1;2501:13;;;;;;;;:::i;:::-;;;;;;;2470:44;;2597:9;2592:207;2616:1;2612;:5;2592:207;;;2669:10;2680:1;2669:13;;;;;;;;:::i;:::-;;;;;;;:19;;;2650:38;;:9;:15;;;:38;;;2646:135;;2742:15;;2723:35;;;;;1795:42:103;1783:55;;;2723:35:41;;;1765:74:103;1738:18;;2723:35:41;1601:244:103;2646:135:41;2619:3;;2592:207;;;-1:-1:-1;2878:18:41;;2910:310;2934:13;2930:1;:17;2910:310;;;2968:25;2996:5;:13;;;3010:1;2996:16;;;;;;;;:::i;:::-;;;;;;;2968:44;;3050:9;:15;;;3034:31;;:6;:12;;;:31;;;3030:105;;3103:13;;;;3089:27;;;;:::i;:::-;;;3030:105;-1:-1:-1;3184:3:41;;2910:310;;;-1:-1:-1;3316:15:41;;3294:11;;;;:17;3286:45;;;;;;;3282:116;;3365:11;;;;;:18;;3351:32;;;;:::i;:::-;;;3282:116;3416:10;3430:1;3416:15;3412:60;;3456:15;;3440:32;;;;;1795:42:103;1783:55;;;3440:32:41;;;1765:74:103;1738:18;;3440:32:41;1601:244:103;3412:60:41;3510:39;:10;1324:1;1273:6;3510:21;:39::i;:::-;3491:9;:16;;;:58;3487:171;;;3588:15;;3605:16;;;;3623:19;;;;;3576:67;;;;;22347:42:103;22416:15;;;3576:67:41;;;22398:34:103;22448:18;;;22441:34;;;;22511:15;;;;22491:18;;;22484:43;22310:18;;3576:67:41;22135:398:103;3487:171:41;3703:9;3671:10;3682:17;3698:1;3682:13;:17;:::i;:::-;3671:29;;;;;;;;:::i;:::-;;;;;;;;;;:41;-1:-1:-1;;3755:3:41;;2413:1370;;;-1:-1:-1;3793:13:41;;;;:26;;;;-1:-1:-1;;;1725:2101:41:o;433:505:60:-;556:18;;:26;531:52;;539:4;531:52;527:106;;606:16;;;;;;;;;;;;;;527:106;665:18;;:27;;;647:15;:45;643:99;;;715:16;;;;;;;;;;;;;;643:99;764:18;;:47;;;756:70;;;752:180;;842:18;;:47;;;:79;;;;;:56;;;;;;;:79;;899:6;;842:13;;:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:350:63;2040:7;:33;;;2087:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:303:59;;;624:149;;;;;693:11;;;;;;:17;624:149;;561:303;;;;624:149;;;737:11;;:21;;;624:149;;;;561:303;;794:10;;:16;;;561:303;;;;;;;834:10;;:19;;;;561:303;;;;;401:470;2087:16:63;-1:-1:-1;;;;;;;;;;;;;;;;;1123:90:59;;;;;;;;;;;;;1193:11;;;;:18;;;1123:90;;;;2156:5:63;:10;;;:18;;;2188:5;:10;;;2008:31:54;;;;;;;;;;;;;;;;;1162:365;;;17845:22:103;1162:365:54;;;17833:35:103;17898:17;17884:12;;;17877:39;17946:25;17932:12;;;17925:47;18002:23;17988:12;;;17981:45;18056:26;18042:12;;;18035:48;18114:33;18099:13;;;18092:56;18179:21;18164:13;;;18157:44;18232:27;18217:13;;;18210:50;18291:25;18276:13;;;18269:48;18348:24;18333:13;;;18326:47;1162:365:54;;;;;;;;;2099:28;;;;;;;18389:13:103;;;2099:28:54;;;18389:13:103;2099:28:54;;;;;2141:36;;;;;;;;;;;;;;;;;1934:253;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2267:9:63;;;;2040:246;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:943:61;4167:9;4162:369;4186:6;:13;4182:1;:17;4162:369;;;4224:26;4253:6;4260:1;4253:9;;;;;;;;:::i;:::-;;;;;;;4224:38;;4285:9;4280:237;4304:5;:13;;;:20;4300:1;:24;4280:237;;;4353:25;4381:5;:13;;;4395:1;4381:16;;;;;;;;:::i;:::-;;;;;;;4353:44;;4419:79;4457:6;:16;;;4475:6;:13;;;4490:7;4419:6;:12;;;:37;;;;:79;;;;;;:::i;:::-;-1:-1:-1;4326:3:61;;4280:237;;;-1:-1:-1;;4201:3:61;;4162:369;;;-1:-1:-1;4877:21:61;:25;4873:114;;4922:50;355:42:51;4938:10:61;4950:21;4922:15;:50::i;548:2903:56:-;655:41;1050:19;1092:9;1087:116;1111:6;:13;1107:1;:17;1087:116;;;1164:6;1171:1;1164:9;;;;;;;;:::i;:::-;;;;;;;:17;;;:24;1149:39;;;;1126:3;;;;;;;1087:116;;;;1257:11;1235:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;1235:34:56;;;;;;;;;;;;;;;1216:53;;1026:254;1290:21;1493:9;1488:1545;1512:6;:13;1508:1;:17;1488:1545;;;1542:26;1571:6;1578:1;1571:9;;;;;;;;:::i;:::-;;;;;;;1542:38;;1600:9;1595:1369;1619:5;:13;;;:20;1615:1;:24;1595:1369;;;1660:25;1688:5;:13;;;1702:1;1688:16;;;;;;;;:::i;:::-;;;;;;;1660:44;;1860:10;1901:9;1896:500;1920:13;1916:1;:17;1896:500;;;1958:37;1998:16;2015:1;1998:19;;;;;;;;:::i;:::-;;;;;;;1958:59;;2071:6;:16;;;2043:44;;:14;:24;;;:44;;;:84;;;;;2115:6;:12;;;2091:36;;:14;:20;;;:36;;;2043:84;2039:255;;;2163:4;2155:12;;2227:6;:13;;;2193:14;:30;;:47;;;;;;;:::i;:::-;;;-1:-1:-1;2266:5:56;;-1:-1:-1;2266:5:56;2039:255;-1:-1:-1;2352:3:56;;1896:500;;;;2419:5;2414:465;;2489:16;;;;2466:12;;2448:15;;2466:40;;:22;;;;:40::i;:::-;2448:58;;2562:203;;;;;;;;2615:6;:16;;;2562:203;;;;;;2664:6;:12;;;2562:203;;;;;;2729:6;:13;;;2719:7;:23;;;;:::i;:::-;2562:203;;;2528:16;2545:13;2528:31;;;;;;;;:::i;:::-;;;;;;;;;;:237;-1:-1:-1;2823:15:56;;;;;2414:465;-1:-1:-1;;2928:3:56;;1595:1369;;;-1:-1:-1;;3005:3:56;;1488:1545;;;-1:-1:-1;3396:39:56;;3403:16;548:2903;-1:-1:-1;548:2903:56:o;3513:442::-;3600:9;3595:354;3619:16;:23;3615:1;:27;3595:354;;;3663:31;3697:16;3714:1;3697:19;;;;;;;;:::i;:::-;;;;;;;3663:53;;3730:15;3748:44;3773:8;:18;;;3748:8;:14;;;:24;;;;:44;;;;:::i;:::-;3730:62;;3820:8;:24;;;3810:7;:34;3806:133;;;3890:7;3899:8;:24;;;3871:53;;;;;;;;;;;25499:25:103;;;25555:2;25540:18;;25533:34;25487:2;25472:18;;25325:248;3806:133:56;3649:300;;3644:3;;;;;:::i;:::-;;;;3595:354;;1211:965:52;1359:21;1415:14;1400:12;:29;1396:774;;;1452:24;;;;;;;;;;;;;;1396:774;1513:15;1497:12;:31;1493:677;;-1:-1:-1;1560:9:52;1493:677;;;1608:15;1590:14;:33;1586:584;;-1:-1:-1;1655:11:52;1586:584;;;1743:15;:32;;;1812:29;;;1863:23;;;1859:287;;;1940:55;1941:23;;;1977:7;1986:8;1940:36;:55::i;:::-;1926:11;:69;1910:85;;1859:287;;;2072:55;2073:23;;;2109:7;2118:8;2072:36;:55::i;:::-;2058:11;:69;2042:85;;1859:287;1697:463;;1586:584;1211:965;;;;;;:::o;2452:474::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;2653:6:52;:16;;;2632:6;:18;;;:37;2628:93;;;2692:18;;;;;;;;;;;;;;2628:93;2731:21;2755:87;2775:6;:18;;;2795:6;:16;;;2813:14;2829:12;2755:19;:87::i;:::-;2731:111;;2861:58;;;;;;;;2873:6;:12;;;2861:58;;;;;;2887:13;2861:58;;;;2902:6;:16;;;2861:58;;;;;2852:67;;2618:308;2452:474;;;;;:::o;484:416:58:-;544:7;461:15;;;;;;;;;;;;;;;;;451:26;;;;;;;659:12;;689;;;;719:10;;;;;747:13;;;;778:33;;;;839:29;;;;829:40;;;;;;593:290;;;;719:10;;747:13;;778:33;;829:40;593:290;26140:25:103;;;26184:42;26262:15;;;26257:2;26242:18;;26235:43;26314:15;;;26309:2;26294:18;;26287:43;26361:2;26346:18;;26339:34;;;;26404:3;26389:19;;26382:35;26454:15;;;26448:3;26433:19;;26426:44;26501:3;26486:19;;26479:35;26127:3;26112:19;;25778:742;2849:487:53;2916:7;2959:25;3002:7;:14;2997:2;:19;2987:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2987:30:53;;2959:58;;3037:9;3032:243;3056:7;:14;3052:1;:18;3032:243;;;3095:18;3116:16;3121:7;3129:1;3121:10;;;;;;;;:::i;:::-;;;;;;;3116:4;:16::i;:::-;3224:4;3217:12;;;3188:42;;;3181:62;-1:-1:-1;3072:3:53;;3032:243;;;-1:-1:-1;3296:23:53;;;;;;;;2849:487;-1:-1:-1;;2849:487:53:o;2361:221:55:-;2457:9;2485:23;;;;;:63;;;2530:18;2512:15;:36;2485:63;:90;;;-1:-1:-1;2552:23:55;;;2565:10;2552:23;2485:90;2478:97;;2361:221;;;;;:::o;1564:526:37:-;1680:9;1928:1;1915:11;1911:19;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:37;;2047:27;;1564:526::o;2195:399:51:-;2822:18;;;2319:269;;2358:12;2375:9;:14;;2397:6;2375:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:51;;;2427:7;2422:43;;2443:22;;;;;;;;;;;;;;2422:43;2343:133;2319:269;;;2496:7;:20;;;2517:10;2529:9;2540:26;2559:6;2540:18;:26::i;:::-;2496:81;;;;;;;;;;26976:42:103;27045:15;;;2496:81:51;;;27027:34:103;27097:15;;;27077:18;;;27070:43;27149:15;;27129:18;;;27122:43;27201:15;;;27181:18;;;27174:43;26938:19;;2496:81:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2195:399;;;;:::o;1379:331::-;2822:18;;;1469:235;;1508:12;1525:9;:14;;1547:6;1525:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1507:51;;;1577:7;1572:43;;1593:22;;;;;;;;;;;;;;1469:235;1646:47;:28;;;1675:9;1686:6;1646:28;:47::i;:::-;1379:331;;;:::o;915:250::-;989:15;2822:18;;;1016:143;;-1:-1:-1;1064:12:51;;;;1016:143;;;1117:31;;;;;:25;1783:55:103;;;1117:31:51;;;1765:74:103;1117:25:51;;;;;1738:18:103;;1117:31:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2609:234:53:-;2673:7;1695:17;;;;;;;;;;;;;;;;;1685:28;;;;;;;2757:12;;2771:18;;;;2791:16;;;;;2809;;;;2722:104;;;;2791:16;;2809;2722:104;27676:25:103;;;27720:42;27798:15;;;27793:2;27778:18;;27771:43;27845:2;27830:18;;27823:34;;;;27888:2;27873:18;;27866:34;27937:15;27931:3;27916:19;;27909:44;27663:3;27648:19;;27417:542;7004:192:28;7061:7;7097:17;7088:26;;;7080:78;;;;;;;28166:2:103;7080:78:28;;;28148:21:103;28205:2;28185:18;;;28178:30;28244:34;28224:18;;;28217:62;28315:9;28295:18;;;28288:37;28342:19;;7080:78:28;27964:403:103;7080:78:28;-1:-1:-1;7183:5:28;7004:192::o;3116:1607:38:-;3228:12;3398:4;3392:11;3540:66;3521:17;3514:93;3662:42;3658:2;3654:51;3650:1;3631:17;3627:25;3620:86;3792:6;3787:2;3768:17;3764:26;3757:42;4644:2;4641:1;4637:2;4618:17;4615:1;4608:5;4601;4596:51;4165:16;4158:24;4152:2;4134:16;4131:24;4127:1;4123;4117:8;4114:15;4110:46;4107:76;3907:754;3896:765;;;4689:7;4681:35;;;;;;;28574:2:103;4681:35:38;;;28556:21:103;28613:2;28593:18;;;28586:30;28652:17;28632:18;;;28625:45;28687:18;;4681:35:38;28372:339:103;14:172;118:42;111:5;107:54;100:5;97:65;87:93;;176:1;173;166:12;191:170;277:20;;306:49;277:20;306:49;:::i;:::-;191:170;;;:::o;366:347::-;417:8;427:6;481:3;474:4;466:6;462:17;458:27;448:55;;499:1;496;489:12;448:55;-1:-1:-1;522:20:103;;565:18;554:30;;551:50;;;597:1;594;587:12;551:50;634:4;626:6;622:17;610:29;;686:3;679:4;670:6;662;658:19;654:30;651:39;648:59;;;703:1;700;693:12;648:59;366:347;;;;;:::o;718:878::-;864:6;872;880;888;941:2;929:9;920:7;916:23;912:32;909:52;;;957:1;954;947:12;909:52;997:9;984:23;1026:18;1067:2;1059:6;1056:14;1053:34;;;1083:1;1080;1073:12;1053:34;1106:22;;;;1162:2;1144:16;;;1140:25;1137:45;;;1178:1;1175;1168:12;1137:45;1201:2;;-1:-1:-1;1253:2:103;1238:18;;1225:32;;1266:49;1225:32;1266:49;:::i;:::-;1334:5;;-1:-1:-1;1392:2:103;1377:18;;1364:32;;1408:16;;;1405:36;;;1437:1;1434;1427:12;1405:36;;1476:60;1528:7;1517:8;1506:9;1502:24;1476:60;:::i;:::-;718:878;;;;-1:-1:-1;1555:8:103;-1:-1:-1;;;;718:878:103:o;1850:265::-;1909:6;1962:2;1950:9;1941:7;1937:23;1933:32;1930:52;;;1978:1;1975;1968:12;1930:52;2017:9;2004:23;2036:49;2079:5;2036:49;:::i;:::-;2104:5;1850:265;-1:-1:-1;;;1850:265:103:o;2383:1058::-;2556:6;2564;2572;2580;2588;2641:2;2629:9;2620:7;2616:23;2612:32;2609:52;;;2657:1;2654;2647:12;2609:52;2697:9;2684:23;2726:18;2767:2;2759:6;2756:14;2753:34;;;2783:1;2780;2773:12;2753:34;2821:6;2810:9;2806:22;2796:32;;2866:7;2859:4;2855:2;2851:13;2847:27;2837:55;;2888:1;2885;2878:12;2837:55;2928:2;2915:16;2954:2;2946:6;2943:14;2940:34;;;2970:1;2967;2960:12;2940:34;3025:7;3018:4;3008:6;3005:1;3001:14;2997:2;2993:23;2989:34;2986:47;2983:67;;;3046:1;3043;3036:12;2983:67;3077:4;3073:2;3069:13;3059:23;;3101:6;3091:16;;;3126:58;3178:4;3167:9;3163:20;3126:58;:::i;:::-;3116:68;;3237:2;3226:9;3222:18;3209:32;3193:48;;3266:2;3256:8;3253:16;3250:36;;;3282:1;3279;3272:12;3250:36;;3321:60;3373:7;3362:8;3351:9;3347:24;3321:60;:::i;:::-;2383:1058;;;;-1:-1:-1;2383:1058:103;;-1:-1:-1;3400:8:103;;3295:86;2383:1058;-1:-1:-1;;;2383:1058:103:o;3934:184::-;3986:77;3983:1;3976:88;4083:4;4080:1;4073:15;4107:4;4104:1;4097:15;4123:184;4175:77;4172:1;4165:88;4272:4;4269:1;4262:15;4296:4;4293:1;4286:15;4985:388;5083:4;5141:11;5128:25;5231:66;5220:8;5204:14;5200:29;5196:102;5176:18;5172:127;5162:155;;5313:1;5310;5303:12;5162:155;5334:33;;;;;4985:388;-1:-1:-1;;4985:388:103:o;5738:580::-;5815:4;5821:6;5881:11;5868:25;5971:66;5960:8;5944:14;5940:29;5936:102;5916:18;5912:127;5902:155;;6053:1;6050;6043:12;5902:155;6080:33;;6132:20;;;-1:-1:-1;6175:18:103;6164:30;;6161:50;;;6207:1;6204;6197:12;6161:50;6240:4;6228:17;;-1:-1:-1;6271:14:103;6267:27;;;6257:38;;6254:58;;;6308:1;6305;6298:12;6323:253;6395:2;6389:9;6437:4;6425:17;;6472:18;6457:34;;6493:22;;;6454:62;6451:88;;;6519:18;;:::i;:::-;6555:2;6548:22;6323:253;:::o;6581:::-;6653:2;6647:9;6695:4;6683:17;;6730:18;6715:34;;6751:22;;;6712:62;6709:88;;;6777:18;;:::i;6839:253::-;6911:2;6905:9;6953:4;6941:17;;6988:18;6973:34;;7009:22;;;6970:62;6967:88;;;7035:18;;:::i;7097:334::-;7168:2;7162:9;7224:2;7214:13;;7229:66;7210:86;7198:99;;7327:18;7312:34;;7348:22;;;7309:62;7306:88;;;7374:18;;:::i;:::-;7410:2;7403:22;7097:334;;-1:-1:-1;7097:334:103:o;7436:589::-;7478:5;7531:3;7524:4;7516:6;7512:17;7508:27;7498:55;;7549:1;7546;7539:12;7498:55;7585:6;7572:20;7611:18;7607:2;7604:26;7601:52;;;7633:18;;:::i;:::-;7677:114;7785:4;7716:66;7709:4;7705:2;7701:13;7697:86;7693:97;7677:114;:::i;:::-;7816:2;7807:7;7800:19;7862:3;7855:4;7850:2;7842:6;7838:15;7834:26;7831:35;7828:55;;;7879:1;7876;7869:12;7828:55;7944:2;7937:4;7929:6;7925:17;7918:4;7909:7;7905:18;7892:55;7992:1;7967:16;;;7985:4;7963:27;7956:38;;;;7971:7;7436:589;-1:-1:-1;;;7436:589:103:o;8030:1147::-;8086:5;8134:4;8122:9;8117:3;8113:19;8109:30;8106:50;;;8152:1;8149;8142:12;8106:50;8185:2;8179:9;8227:4;8219:6;8215:17;8251:18;8319:6;8307:10;8304:22;8299:2;8287:10;8284:18;8281:46;8278:72;;;8330:18;;:::i;:::-;8370:10;8366:2;8359:22;8399:6;8390:15;;8442:9;8429:23;8414:38;;8461:51;8504:7;8461:51;:::i;:::-;8521:23;;;8596:2;8581:18;;8568:32;;8609:51;8568:32;8609:51;:::i;:::-;8693:7;8688:2;8680:6;8676:15;8669:32;8762:2;8751:9;8747:18;8734:32;8729:2;8721:6;8717:15;8710:57;8828:2;8817:9;8813:18;8800:32;8795:2;8787:6;8783:15;8776:57;8885:3;8874:9;8870:19;8857:33;8842:48;;8899:51;8942:7;8899:51;:::i;:::-;8984:7;8978:3;8970:6;8966:16;8959:33;9043:3;9032:9;9028:19;9015:33;9001:47;;9071:2;9063:6;9060:14;9057:34;;;9087:1;9084;9077:12;9057:34;;9125:45;9166:3;9157:6;9146:9;9142:22;9125:45;:::i;:::-;9119:3;9111:6;9107:16;9100:71;;;8030:1147;;;;:::o;9182:441::-;9239:5;9287:4;9275:9;9270:3;9266:19;9262:30;9259:50;;;9305:1;9302;9295:12;9259:50;9327:22;;:::i;:::-;9318:31;;9386:9;9373:23;9405:51;9448:7;9405:51;:::i;:::-;9479:7;9472:5;9465:22;;9547:2;9536:9;9532:18;9519:32;9514:2;9507:5;9503:14;9496:56;9612:2;9601:9;9597:18;9584:32;9579:2;9572:5;9568:14;9561:56;9182:441;;;;:::o;9628:194::-;9699:4;9732:18;9724:6;9721:30;9718:56;;;9754:18;;:::i;:::-;-1:-1:-1;9799:1:103;9795:14;9811:4;9791:25;;9628:194::o;9827:1331::-;9892:5;9945:3;9938:4;9930:6;9926:17;9922:27;9912:55;;9963:1;9960;9953:12;9912:55;9999:6;9986:20;10025:4;10049:71;10065:54;10116:2;10065:54;:::i;:::-;10049:71;:::i;:::-;10154:15;;;10240:1;10236:10;;;;10224:23;;10220:32;;;10185:12;;;;10264:15;;;10261:35;;;10292:1;10289;10282:12;10261:35;10328:2;10320:6;10316:15;10340:789;10356:6;10351:3;10348:15;10340:789;;;10434:4;10428:3;10423;10419:13;10415:24;10412:114;;;10480:1;10509:2;10505;10498:14;10412:114;10552:22;;:::i;:::-;10615:3;10602:17;10632:51;10675:7;10632:51;:::i;:::-;10696:22;;10767:12;;;10754:26;10738:14;;;10731:50;10804:2;10855:12;;;10842:26;10826:14;;;10819:50;10892:2;10935:12;;;10922:26;10961:51;10922:26;10961:51;:::i;:::-;11032:14;;;11025:31;11069:18;;11107:12;;;;10382:4;10373:14;10340:789;;;-1:-1:-1;11147:5:103;9827:1331;-1:-1:-1;;;;;;9827:1331:103:o;11163:1175::-;11260:6;11313:2;11301:9;11292:7;11288:23;11284:32;11281:52;;;11329:1;11326;11319:12;11281:52;11369:9;11356:23;11398:18;11439:2;11431:6;11428:14;11425:34;;;11455:1;11452;11445:12;11425:34;11478:22;;;;11534:6;11516:16;;;11512:29;11509:49;;;11554:1;11551;11544:12;11509:49;11580:22;;:::i;:::-;11640:2;11627:16;11668:2;11658:8;11655:16;11652:36;;;11684:1;11681;11674:12;11652:36;11711:55;11758:7;11747:8;11743:2;11739:17;11711:55;:::i;:::-;11704:5;11697:70;;11820:2;11816;11812:11;11799:25;11794:2;11787:5;11783:14;11776:49;11878:2;11874;11870:11;11857:25;11852:2;11845:5;11841:14;11834:49;11915;11960:2;11956;11952:11;11915:49;:::i;:::-;11910:2;11903:5;11899:14;11892:73;12019:3;12015:2;12011:12;11998:26;11992:3;11985:5;11981:15;11974:51;12058;12101:7;12095:3;12091:2;12087:12;12058:51;:::i;:::-;12052:3;12045:5;12041:15;12034:76;12156:3;12152:2;12148:12;12135:26;12186:2;12176:8;12173:16;12170:36;;;12202:1;12199;12192:12;12170:36;12240:67;12299:7;12288:8;12284:2;12280:17;12240:67;:::i;:::-;12233:4;12222:16;;12215:93;-1:-1:-1;12226:5:103;11163:1175;-1:-1:-1;;;;;11163:1175:103:o;12525:250::-;12610:1;12620:113;12634:6;12631:1;12628:13;12620:113;;;12710:11;;;12704:18;12691:11;;;12684:39;12656:2;12649:10;12620:113;;;-1:-1:-1;;12767:1:103;12749:16;;12742:27;12525:250::o;12780:329::-;12821:3;12859:5;12853:12;12886:6;12881:3;12874:19;12902:76;12971:6;12964:4;12959:3;12955:14;12948:4;12941:5;12937:16;12902:76;:::i;:::-;13023:2;13011:15;13028:66;13007:88;12998:98;;;;13098:4;12994:109;;12780:329;-1:-1:-1;;12780:329:103:o;13375:696::-;13439:3;13477:5;13471:12;13504:6;13499:3;13492:19;13530:4;13559:2;13554:3;13550:12;13543:19;;13596:2;13589:5;13585:14;13617:1;13627:419;13641:6;13638:1;13635:13;13627:419;;;13700:13;;13807:9;;13736:42;13803:18;;;13791:31;;13862:11;;;13856:18;13842:12;;;13835:40;13898:4;13946:11;;;13940:18;13936:27;13922:12;;;13915:49;13993:4;13984:14;;;;14021:15;;;;13663:1;13656:9;13627:419;;;-1:-1:-1;14062:3:103;;13375:696;-1:-1:-1;;;;;13375:696:103:o;14076:1240::-;14132:3;14176:5;14170:12;14203:4;14198:3;14191:17;14227:42;14326:2;14311:12;14305:19;14301:28;14294:4;14289:3;14285:14;14278:52;14397:2;14389:4;14375:12;14371:23;14365:30;14361:39;14355:3;14350;14346:13;14339:62;14456:4;14442:12;14438:23;14432:30;14426:3;14421;14417:13;14410:53;14518:4;14504:12;14500:23;14494:30;14488:3;14483;14479:13;14472:53;14592:2;14584:4;14570:12;14566:23;14560:30;14556:39;14550:3;14545;14541:13;14534:62;;14651:4;14637:12;14633:23;14627:30;14605:52;;14688:4;14682:3;14677;14673:13;14666:27;14715:47;14757:3;14752;14748:13;14732:14;14715:47;:::i;:::-;14702:60;;14810:4;14803:5;14799:16;14793:23;14825:60;14879:4;14874:3;14870:14;14854;13194:12;;13208:42;13190:61;13178:74;;13301:4;13290:16;;;13284:23;13268:14;;;13261:47;13357:4;13346:16;;;13340:23;13324:14;;13317:47;13114:256;14825:60;;14933:4;14926:5;14922:16;14916:23;14982:3;14975:5;14971:15;14964:4;14959:3;14955:14;14948:39;15008:62;15064:5;15048:14;15008:62;:::i;:::-;14996:74;;;15118:4;15111:5;15107:16;15101:23;15166:3;15160:4;15156:14;15149:4;15144:3;15140:14;15133:38;15194;15227:4;15211:14;15194:38;:::i;:::-;15180:52;;;15281:4;15274:5;15270:16;15264:23;15257:4;15252:3;15248:14;15241:47;15304:6;15297:13;;;14076:1240;;;;:::o;15321:1396::-;15611:4;15659:2;15648:9;15644:18;15689:2;15678:9;15671:21;15712:6;15747;15741:13;15778:6;15770;15763:22;15816:3;15805:9;15801:19;15794:26;;15879:3;15869:6;15866:1;15862:14;15851:9;15847:30;15843:40;15829:54;;15902:4;15941:2;15933:6;15929:15;15962:1;15972:328;15986:6;15983:1;15980:13;15972:328;;;16075:66;16063:9;16055:6;16051:22;16047:95;16042:3;16035:108;16166:54;16213:6;16204;16198:13;16166:54;:::i;:::-;16156:64;-1:-1:-1;16278:12:103;;;;16243:15;;;;16008:1;16001:9;15972:328;;;15976:3;;16348:42;16340:6;16336:55;16331:2;16320:9;16316:18;16309:83;16440:9;16432:6;16428:22;16423:2;16412:9;16408:18;16401:50;16475:6;16467;16460:22;16529:6;16521;16516:2;16508:6;16504:15;16491:45;16582:1;16556:19;;;16552:28;;16545:39;16633:2;16621:15;;;16638:66;16617:88;16605:101;;;16601:110;;;;15321:1396;-1:-1:-1;;;;;;;15321:1396:103:o;18413:697::-;18634:3;18672:6;18666:13;18688:66;18747:6;18742:3;18735:4;18727:6;18723:17;18688:66;:::i;:::-;18817:13;;18776:16;;;;18839:70;18817:13;18776:16;18886:4;18874:17;;18839:70;:::i;:::-;18976:13;;18931:20;;;18998:70;18976:13;18931:20;19045:4;19033:17;;18998:70;:::i;:::-;19084:20;;18413:697;-1:-1:-1;;;;;18413:697:103:o;20037:184::-;20089:77;20086:1;20079:88;20186:4;20183:1;20176:15;20210:4;20207:1;20200:15;20226:125;20291:9;;;20312:10;;;20309:36;;;20325:18;;:::i;20356:278::-;20549:2;20538:9;20531:21;20512:4;20569:59;20624:2;20613:9;20609:18;20601:6;20569:59;:::i;20639:1491::-;20764:6;20795:2;20838;20826:9;20817:7;20813:23;20809:32;20806:52;;;20854:1;20851;20844:12;20806:52;20887:9;20881:16;20920:18;20912:6;20909:30;20906:50;;;20952:1;20949;20942:12;20906:50;20975:22;;21028:4;21020:13;;21016:27;-1:-1:-1;21006:55:103;;21057:1;21054;21047:12;21006:55;21086:2;21080:9;21109:71;21125:54;21176:2;21125:54;:::i;21109:71::-;21214:15;;;21276:4;21315:11;;;21307:20;;21303:29;;;21245:12;;;;21202:3;21344:19;;;21341:39;;;21376:1;21373;21366:12;21341:39;21400:11;;;;21420:680;21436:6;21431:3;21428:15;21420:680;;;21516:2;21510:3;21501:7;21497:17;21493:26;21490:116;;;21560:1;21589:2;21585;21578:14;21490:116;21632:22;;:::i;:::-;21688:3;21682:10;21705:51;21748:7;21705:51;:::i;:::-;21769:22;;21833:12;;;21827:19;21811:14;;;21804:43;21870:2;21906:12;;;21900:19;21932:51;21900:19;21932:51;:::i;:::-;22003:14;;;21996:31;22040:18;;21453:12;;;;22078;;;;21420:680;;;-1:-1:-1;22119:5:103;20639:1491;-1:-1:-1;;;;;;;20639:1491:103:o;22538:398::-;22771:42;22763:6;22759:55;22748:9;22741:74;22851:2;22846;22835:9;22831:18;22824:30;22722:4;22871:59;22926:2;22915:9;22911:18;22903:6;22871:59;:::i;22941:1075::-;23341:30;23336:3;23329:43;23311:3;23401:6;23395:13;23417:75;23485:6;23480:2;23475:3;23471:12;23464:4;23456:6;23452:17;23417:75;:::i;:::-;23552:13;;23511:16;;;;23574:76;23552:13;23636:2;23628:11;;23621:4;23609:17;;23574:76;:::i;:::-;23711:13;;23669:17;;;23733:76;23711:13;23795:2;23787:11;;23780:4;23768:17;;23733:76;:::i;:::-;23870:13;;23828:17;;;23892:76;23870:13;23954:2;23946:11;;23939:4;23927:17;;23892:76;:::i;:::-;23988:17;24007:2;23984:26;;22941:1075;-1:-1:-1;;;;;;22941:1075:103:o;24232:1088::-;24662:4;24691:3;24703:60;24753:9;24744:6;24738:13;24107:12;;24121:42;24103:61;24091:74;;24214:4;24203:16;;;24197:23;24181:14;;24174:47;24021:206;24703:60;24819:4;24811:6;24807:17;24801:24;24794:4;24783:9;24779:20;24772:54;24882:4;24874:6;24870:17;24864:24;24857:4;24846:9;24842:20;24835:54;24898:63;24956:3;24945:9;24941:19;24933:6;24107:12;;24121:42;24103:61;24091:74;;24214:4;24203:16;;;24197:23;24181:14;;24174:47;24021:206;24898:63;25010:42;25002:6;24998:55;24992:3;24981:9;24977:19;24970:84;25091:6;25085:3;25074:9;25070:19;25063:35;25135:2;25129:3;25118:9;25114:19;25107:31;25161:44;25201:2;25190:9;25186:18;25178:6;25161:44;:::i;:::-;25147:58;;25254:9;25246:6;25242:22;25236:3;25225:9;25221:19;25214:51;25282:32;25307:6;25299;25282:32;:::i;:::-;25274:40;24232:1088;-1:-1:-1;;;;;;;;;24232:1088:103:o;25578:195::-;25617:3;25648:66;25641:5;25638:77;25635:103;;25718:18;;:::i;:::-;-1:-1:-1;25765:1:103;25754:13;;25578:195::o;27228:184::-;27298:6;27351:2;27339:9;27330:7;27326:23;27322:32;27319:52;;;27367:1;27364;27357:12;27319:52;-1:-1:-1;27390:16:103;;27228:184;-1:-1:-1;27228:184:103:o",
    "linkReferences": {},
    "immutableReferences": {
      "37209": [
        {
          "start": 167,
          "length": 32
        },
        {
          "start": 5574,
          "length": 32
        },
        {
          "start": 6594,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DIRECT_FILL()": "fccbcaaf",
    "execute((bytes,bytes),address,bytes)": "05afc977",
    "executeBatch((bytes,bytes)[],address,bytes)": "6f1d5f51",
    "feeController()": "6999b377",
    "owner()": "8da5cb5b",
    "permit2()": "12261ee7",
    "setProtocolFeeController(address)": "2d771389",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"_permit2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeadlineBeforeEndTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"duplicateToken\",\"type\":\"address\"}],\"name\":\"DuplicateFeeOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EndTimeBeforeStartTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"FeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAndOutputDecay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientEth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actualBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedBalance\",\"type\":\"uint256\"}],\"name\":\"InsufficientOutput\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"}],\"name\":\"InvalidFeeToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoExclusiveOverride\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderEndTimeBeforeStartTime\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Fill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldFeeController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DIRECT_FILL\",\"outputs\":[{\"internalType\":\"contract IReactorCallback\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"contract IReactorCallback\",\"name\":\"fillContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"fillData\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IReactorCallback\",\"name\":\"fillContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"fillData\",\"type\":\"bytes\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeController\",\"outputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeeController\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Fill(bytes32,address,address,uint256)\":{\"params\":{\"filler\":\"The address which executed the fill\",\"nonce\":\"The nonce of the filled order\",\"orderHash\":\"The hash of the order that was filled\",\"swapper\":\"The swapper of the filled order\"}}},\"kind\":\"dev\",\"methods\":{\"execute((bytes,bytes),address,bytes)\":{\"params\":{\"fillContract\":\"The contract which will fill the order\",\"fillData\":\"The fillData to pass to the fillContract callback\",\"order\":\"The order definition and valid signature to execute\"}},\"executeBatch((bytes,bytes)[],address,bytes)\":{\"params\":{\"fillContract\":\"The contract which will fill the order\",\"fillData\":\"The fillData to pass to the fillContract callback\",\"orders\":\"The order definitions and valid signatures to execute\"}},\"setProtocolFeeController(address)\":{\"details\":\"only callable by the owner\",\"params\":{\"_newFeeController\":\"the new fee controller\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DuplicateFeeOutput(address)\":[{\"notice\":\"thrown if two fee outputs have the same token\"}],\"EndTimeBeforeStartTime()\":[{\"notice\":\"thrown if the endTime of an order is before startTime\"}],\"FeeTooLarge(address,uint256,address)\":[{\"notice\":\"thrown if a given fee output is greater than MAX_FEE_BPS of the order outputs\"}],\"IncorrectAmounts()\":[{\"notice\":\"thrown if the decay direction is incorrect - for DutchInput, startAmount must be less than or equal toendAmount - for DutchOutput, startAmount must be greater than or equal to endAmount\"}],\"InvalidFeeToken(address)\":[{\"notice\":\"thrown if a fee output token does not have a corresponding non-fee output\"}],\"NativeTransferFailed()\":[{\"notice\":\"Thrown when a native transfer fails\"}],\"NoExclusiveOverride()\":[{\"notice\":\"thrown when an order has strict exclusivity and the filler does not have it\"}]},\"events\":{\"Fill(bytes32,address,address,uint256)\":{\"notice\":\"emitted when an order is filled\"}},\"kind\":\"user\",\"methods\":{\"execute((bytes,bytes),address,bytes)\":{\"notice\":\"Execute a single order using the given fill specification\"},\"executeBatch((bytes,bytes)[],address,bytes)\":{\"notice\":\"Execute the given orders at once with the specified fill specification\"},\"setProtocolFeeController(address)\":{\"notice\":\"sets the protocol fee controller\"}},\"notice\":\"Reactor for exclusive dutch orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/reactors/ExclusiveDutchOrderReactor.sol\":\"ExclusiveDutchOrderReactor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2\",\"dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]},\"src/base/ProtocolFees.sol\":{\"keccak256\":\"0xa6a8588465e1e10db4b85385280b3678ed69ea33d4c740cd54480859cb8c425d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f281c905d6b2114f52136f3b79e0e4ffabbeae2423f6a680a960229a191b2179\",\"dweb:/ipfs/QmWeNkB8r7NaSjPeVoLRQN5fM9pxL3kxERnHjL8RUdgr23\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541\",\"dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e\",\"dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c\",\"dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5\",\"dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b\",\"dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0xba3507a814d02b4e00e35de21f5dbb8cd9848a858dddcf5fb50185f8412fcbce\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://105bc368d448c88f6d80de6abc9128d2ded70106e1b738558b3793096d591010\",\"dweb:/ipfs/QmQau7C8U9Bht5TUtCHDiCyXhhQeRmYScv9NSCT6WaPNRi\"]},\"src/lib/DutchDecayLib.sol\":{\"keccak256\":\"0x9420c4b51038982150cb90fb21a3cabd807b6884978dafcf393d17726f12a8de\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4469bd4e6d0fbfd225f3b1ac8b9bc903f3b6d6111de76261435407ca9cf19010\",\"dweb:/ipfs/QmcU2S5sfmYhfMrqtpTnzw8U91w1GSgRaa5oxJAqbdr1Y8\"]},\"src/lib/DutchOrderLib.sol\":{\"keccak256\":\"0xde67708f7dc593e22ff5f02d278624c128b183943747735dc60eee8bfaa78537\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ba56717dfbc1ac6b3278ec44c0314b2fbf1dfce8fa09cd1b3fc2606a538ccc59\",\"dweb:/ipfs/QmeRhiyzZXBjZdMpgNpDMNzeDRrBDpaBXSbXy33WxSjGzn\"]},\"src/lib/ExclusiveDutchOrderLib.sol\":{\"keccak256\":\"0x3e21caa4af8c032280b5d84a2e673f7d0a7c9b42758c52fef7e669282c445f20\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3cf71f86364d42acb5a3c24c8f21f400975dbd32c19fa3c56ee17dfbb8c9ffb0\",\"dweb:/ipfs/QmURuzWqzfBToKj9u28xXYT4bTHNhNBWJfaj8j8M1jZUx8\"]},\"src/lib/ExclusivityOverrideLib.sol\":{\"keccak256\":\"0xbb9a0624865450412cd3c4c841fc55ef4ee46d26376112b89274f6cad14718c5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7ef62d3c1f9eb4db41d3b9a20c756a24f6b95b232a71b5f560a2ce9817eda544\",\"dweb:/ipfs/Qmf8qZLVNAMbssWqs3yi3NK13arT3Ksk51QbqJSX8UYrA1\"]},\"src/lib/ExpectedBalanceLib.sol\":{\"keccak256\":\"0x04b4ccd6b73bf815c1f9c32b3b8c5d1fd089ce35091cc5ed97ae2abe621d8f64\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c784b4d331d35b91bd28be8c75836b5c159cc84f4bb24110a4d92a94ed5dd80f\",\"dweb:/ipfs/QmeN38cSsaaaKQZTtSPQxJMPzXfG6ibDVi7HqZBBpZuxQQ\"]},\"src/lib/OrderInfoLib.sol\":{\"keccak256\":\"0x9b79640b1a1db04f320e4e5b8a4a18e464d2274aa9ed300daba820652e9c970f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d4283ab4930736229bce9f342cce0bb9f16f31bd2855549b0dd65ca4c2c17650\",\"dweb:/ipfs/QmNUC3KwQ2gazABWSHZsKsyvS15nAs1r8Sc7ZKo3s3edjX\"]},\"src/lib/Permit2Lib.sol\":{\"keccak256\":\"0x87dc4b4f16ac299a100a4178e5e4f2d02848170d5d02dddc29d64ca94e6d79fb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4a9202605548693224f941462fba6d8537a381a0e40df1ea04e990461fb18507\",\"dweb:/ipfs/Qmcoi27HAXxwWhs8mbC4M5oe9TadRMAN38oSNqtnchTrPC\"]},\"src/lib/ResolvedOrderLib.sol\":{\"keccak256\":\"0x61f9eb65793208a9229333fd8526013202c2f7bb0bd1ccf593bcd708855927a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://101a8469a76377c6677f53fea37bd7e73e9b2f0265bfcb05a1cbf99d302c0975\",\"dweb:/ipfs/QmTfhW4fRcygpmeHu9XdL3SjRLQEq5FYpnDAvGmy4HQ92d\"]},\"src/reactors/BaseReactor.sol\":{\"keccak256\":\"0x4efd9514e94d8d156830f34f978397105a5aa62e55ebe05cc0ec2570bc980d44\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://14bac9c1a69e85873193c775363c2aae0874b975ffcaaf558d194b782e80e69d\",\"dweb:/ipfs/QmTJWQeGWAJrZykVnSF1cCUUg6bt8q45VV6hdXuzZJc6oq\"]},\"src/reactors/ExclusiveDutchOrderReactor.sol\":{\"keccak256\":\"0x63798f237cce75fd1c7453cc297328fe18c7a230f2bdd5cb5b66ba5a3d7c3f2f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e575b7ecf5e3f896edc06fe582507c395d65d97b6711ede38a5ca17812b4bf12\",\"dweb:/ipfs/QmYwLUzUopszW4imydtKRrNg29R7fK52oMgCwzuq1dVELj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPermit2",
              "name": "_permit2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineBeforeEndTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "duplicateToken",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DuplicateFeeOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EndTimeBeforeStartTime"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "FeeTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectAmounts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAndOutputDecay"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientEth"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "actualBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expectedBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientOutput"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeToken",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidFeeToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidReactor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NativeTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoExclusiveOverride"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OrderEndTimeBeforeStartTime"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "swapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Fill",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldFeeController",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newFeeController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeControllerSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DIRECT_FILL",
          "outputs": [
            {
              "internalType": "contract IReactorCallback",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IReactorCallback",
              "name": "fillContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "fillData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IReactorCallback",
              "name": "fillContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "fillData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeController",
          "outputs": [
            {
              "internalType": "contract IProtocolFeeController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "contract IPermit2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFeeController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFeeController"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execute((bytes,bytes),address,bytes)": {
            "params": {
              "fillContract": "The contract which will fill the order",
              "fillData": "The fillData to pass to the fillContract callback",
              "order": "The order definition and valid signature to execute"
            }
          },
          "executeBatch((bytes,bytes)[],address,bytes)": {
            "params": {
              "fillContract": "The contract which will fill the order",
              "fillData": "The fillData to pass to the fillContract callback",
              "orders": "The order definitions and valid signatures to execute"
            }
          },
          "setProtocolFeeController(address)": {
            "details": "only callable by the owner",
            "params": {
              "_newFeeController": "the new fee controller"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execute((bytes,bytes),address,bytes)": {
            "notice": "Execute a single order using the given fill specification"
          },
          "executeBatch((bytes,bytes)[],address,bytes)": {
            "notice": "Execute the given orders at once with the specified fill specification"
          },
          "setProtocolFeeController(address)": {
            "notice": "sets the protocol fee controller"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/reactors/ExclusiveDutchOrderReactor.sol": "ExclusiveDutchOrderReactor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb",
        "urls": [
          "bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2",
          "dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b",
        "urls": [
          "bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060",
          "dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ProtocolFees.sol": {
        "keccak256": "0xa6a8588465e1e10db4b85385280b3678ed69ea33d4c740cd54480859cb8c425d",
        "urls": [
          "bzz-raw://f281c905d6b2114f52136f3b79e0e4ffabbeae2423f6a680a960229a191b2179",
          "dweb:/ipfs/QmWeNkB8r7NaSjPeVoLRQN5fM9pxL3kxERnHjL8RUdgr23"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62",
        "urls": [
          "bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541",
          "dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588",
        "urls": [
          "bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e",
          "dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c",
        "urls": [
          "bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c",
          "dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739",
        "urls": [
          "bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5",
          "dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a",
        "urls": [
          "bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b",
          "dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0xba3507a814d02b4e00e35de21f5dbb8cd9848a858dddcf5fb50185f8412fcbce",
        "urls": [
          "bzz-raw://105bc368d448c88f6d80de6abc9128d2ded70106e1b738558b3793096d591010",
          "dweb:/ipfs/QmQau7C8U9Bht5TUtCHDiCyXhhQeRmYScv9NSCT6WaPNRi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/DutchDecayLib.sol": {
        "keccak256": "0x9420c4b51038982150cb90fb21a3cabd807b6884978dafcf393d17726f12a8de",
        "urls": [
          "bzz-raw://4469bd4e6d0fbfd225f3b1ac8b9bc903f3b6d6111de76261435407ca9cf19010",
          "dweb:/ipfs/QmcU2S5sfmYhfMrqtpTnzw8U91w1GSgRaa5oxJAqbdr1Y8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/DutchOrderLib.sol": {
        "keccak256": "0xde67708f7dc593e22ff5f02d278624c128b183943747735dc60eee8bfaa78537",
        "urls": [
          "bzz-raw://ba56717dfbc1ac6b3278ec44c0314b2fbf1dfce8fa09cd1b3fc2606a538ccc59",
          "dweb:/ipfs/QmeRhiyzZXBjZdMpgNpDMNzeDRrBDpaBXSbXy33WxSjGzn"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExclusiveDutchOrderLib.sol": {
        "keccak256": "0x3e21caa4af8c032280b5d84a2e673f7d0a7c9b42758c52fef7e669282c445f20",
        "urls": [
          "bzz-raw://3cf71f86364d42acb5a3c24c8f21f400975dbd32c19fa3c56ee17dfbb8c9ffb0",
          "dweb:/ipfs/QmURuzWqzfBToKj9u28xXYT4bTHNhNBWJfaj8j8M1jZUx8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExclusivityOverrideLib.sol": {
        "keccak256": "0xbb9a0624865450412cd3c4c841fc55ef4ee46d26376112b89274f6cad14718c5",
        "urls": [
          "bzz-raw://7ef62d3c1f9eb4db41d3b9a20c756a24f6b95b232a71b5f560a2ce9817eda544",
          "dweb:/ipfs/Qmf8qZLVNAMbssWqs3yi3NK13arT3Ksk51QbqJSX8UYrA1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExpectedBalanceLib.sol": {
        "keccak256": "0x04b4ccd6b73bf815c1f9c32b3b8c5d1fd089ce35091cc5ed97ae2abe621d8f64",
        "urls": [
          "bzz-raw://c784b4d331d35b91bd28be8c75836b5c159cc84f4bb24110a4d92a94ed5dd80f",
          "dweb:/ipfs/QmeN38cSsaaaKQZTtSPQxJMPzXfG6ibDVi7HqZBBpZuxQQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/OrderInfoLib.sol": {
        "keccak256": "0x9b79640b1a1db04f320e4e5b8a4a18e464d2274aa9ed300daba820652e9c970f",
        "urls": [
          "bzz-raw://d4283ab4930736229bce9f342cce0bb9f16f31bd2855549b0dd65ca4c2c17650",
          "dweb:/ipfs/QmNUC3KwQ2gazABWSHZsKsyvS15nAs1r8Sc7ZKo3s3edjX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/Permit2Lib.sol": {
        "keccak256": "0x87dc4b4f16ac299a100a4178e5e4f2d02848170d5d02dddc29d64ca94e6d79fb",
        "urls": [
          "bzz-raw://4a9202605548693224f941462fba6d8537a381a0e40df1ea04e990461fb18507",
          "dweb:/ipfs/Qmcoi27HAXxwWhs8mbC4M5oe9TadRMAN38oSNqtnchTrPC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ResolvedOrderLib.sol": {
        "keccak256": "0x61f9eb65793208a9229333fd8526013202c2f7bb0bd1ccf593bcd708855927a9",
        "urls": [
          "bzz-raw://101a8469a76377c6677f53fea37bd7e73e9b2f0265bfcb05a1cbf99d302c0975",
          "dweb:/ipfs/QmTfhW4fRcygpmeHu9XdL3SjRLQEq5FYpnDAvGmy4HQ92d"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseReactor.sol": {
        "keccak256": "0x4efd9514e94d8d156830f34f978397105a5aa62e55ebe05cc0ec2570bc980d44",
        "urls": [
          "bzz-raw://14bac9c1a69e85873193c775363c2aae0874b975ffcaaf558d194b782e80e69d",
          "dweb:/ipfs/QmTJWQeGWAJrZykVnSF1cCUUg6bt8q45VV6hdXuzZJc6oq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/ExclusiveDutchOrderReactor.sol": {
        "keccak256": "0x63798f237cce75fd1c7453cc297328fe18c7a230f2bdd5cb5b66ba5a3d7c3f2f",
        "urls": [
          "bzz-raw://e575b7ecf5e3f896edc06fe582507c395d65d97b6711ede38a5ca17812b4bf12",
          "dweb:/ipfs/QmYwLUzUopszW4imydtKRrNg29R7fK52oMgCwzuq1dVELj"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/reactors/ExclusiveDutchOrderReactor.sol",
    "id": 37991,
    "exportedSymbols": {
      "BaseReactor": [
        37551
      ],
      "DutchDecayLib": [
        36084
      ],
      "DutchInput": [
        36109
      ],
      "DutchOutput": [
        36101
      ],
      "ExclusiveDutchOrder": [
        36318
      ],
      "ExclusiveDutchOrderLib": [
        36418
      ],
      "ExclusiveDutchOrderReactor": [
        37990
      ],
      "ExclusivityOverrideLib": [
        36538
      ],
      "IPermit2": [
        33826
      ],
      "InputToken": [
        35336
      ],
      "OrderInfo": [
        35328
      ],
      "OutputToken": [
        35343
      ],
      "Permit2Lib": [
        37066
      ],
      "ResolvedOrder": [
        35358
      ],
      "SignedOrder": [
        35363
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:3269:63",
    "nodes": [
      {
        "id": 37758,
        "nodeType": "PragmaDirective",
        "src": "45:23:63",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 37760,
        "nodeType": "ImportDirective",
        "src": "70:46:63",
        "nodes": [],
        "absolutePath": "src/reactors/BaseReactor.sol",
        "file": "./BaseReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37991,
        "sourceUnit": 37552,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37759,
              "name": "BaseReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37551,
              "src": "78:11:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37762,
        "nodeType": "ImportDirective",
        "src": "117:61:63",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/IPermit2.sol",
        "file": "permit2/src/interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37991,
        "sourceUnit": 33827,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37761,
              "name": "IPermit2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33826,
              "src": "125:8:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37764,
        "nodeType": "ImportDirective",
        "src": "179:73:63",
        "nodes": [],
        "absolutePath": "src/lib/ExclusivityOverrideLib.sol",
        "file": "../lib/ExclusivityOverrideLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37991,
        "sourceUnit": 36539,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37763,
              "name": "ExclusivityOverrideLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36538,
              "src": "187:22:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37766,
        "nodeType": "ImportDirective",
        "src": "253:49:63",
        "nodes": [],
        "absolutePath": "src/lib/Permit2Lib.sol",
        "file": "../lib/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37991,
        "sourceUnit": 37067,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37765,
              "name": "Permit2Lib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37066,
              "src": "261:10:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37768,
        "nodeType": "ImportDirective",
        "src": "303:55:63",
        "nodes": [],
        "absolutePath": "src/lib/DutchDecayLib.sol",
        "file": "../lib/DutchDecayLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37991,
        "sourceUnit": 36085,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37767,
              "name": "DutchDecayLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36084,
              "src": "311:13:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37773,
        "nodeType": "ImportDirective",
        "src": "359:119:63",
        "nodes": [],
        "absolutePath": "src/lib/ExclusiveDutchOrderLib.sol",
        "file": "../lib/ExclusiveDutchOrderLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37991,
        "sourceUnit": 36419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37769,
              "name": "ExclusiveDutchOrderLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36418,
              "src": "367:22:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37770,
              "name": "ExclusiveDutchOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36318,
              "src": "391:19:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37771,
              "name": "DutchOutput",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36101,
              "src": "412:11:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37772,
              "name": "DutchInput",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36109,
              "src": "425:10:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37779,
        "nodeType": "ImportDirective",
        "src": "479:106:63",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37991,
        "sourceUnit": 35364,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37774,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35363,
              "src": "487:11:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37775,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35358,
              "src": "500:13:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37776,
              "name": "InputToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35336,
              "src": "515:10:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37777,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35328,
              "src": "527:9:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37778,
              "name": "OutputToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35343,
              "src": "538:11:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37990,
        "nodeType": "ContractDefinition",
        "src": "634:2679:63",
        "nodes": [
          {
            "id": 37786,
            "nodeType": "UsingForDirective",
            "src": "691:35:63",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37783,
              "name": "Permit2Lib",
              "nameLocations": [
                "697:10:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37066,
              "src": "697:10:63"
            },
            "typeName": {
              "id": 37785,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37784,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "712:13:63"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35358,
                "src": "712:13:63"
              },
              "referencedDeclaration": 35358,
              "src": "712:13:63",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$35358_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 37790,
            "nodeType": "UsingForDirective",
            "src": "731:53:63",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37787,
              "name": "ExclusiveDutchOrderLib",
              "nameLocations": [
                "737:22:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36418,
              "src": "737:22:63"
            },
            "typeName": {
              "id": 37789,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37788,
                "name": "ExclusiveDutchOrder",
                "nameLocations": [
                  "764:19:63"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36318,
                "src": "764:19:63"
              },
              "referencedDeclaration": 36318,
              "src": "764:19:63",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_storage_ptr",
                "typeString": "struct ExclusiveDutchOrder"
              }
            }
          },
          {
            "id": 37795,
            "nodeType": "UsingForDirective",
            "src": "789:38:63",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37791,
              "name": "DutchDecayLib",
              "nameLocations": [
                "795:13:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36084,
              "src": "795:13:63"
            },
            "typeName": {
              "baseType": {
                "id": 37793,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 37792,
                  "name": "DutchOutput",
                  "nameLocations": [
                    "813:11:63"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36101,
                  "src": "813:11:63"
                },
                "referencedDeclaration": 36101,
                "src": "813:11:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DutchOutput_$36101_storage_ptr",
                  "typeString": "struct DutchOutput"
                }
              },
              "id": 37794,
              "nodeType": "ArrayTypeName",
              "src": "813:13:63",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36101_storage_$dyn_storage_ptr",
                "typeString": "struct DutchOutput[]"
              }
            }
          },
          {
            "id": 37799,
            "nodeType": "UsingForDirective",
            "src": "832:35:63",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37796,
              "name": "DutchDecayLib",
              "nameLocations": [
                "838:13:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36084,
              "src": "838:13:63"
            },
            "typeName": {
              "id": 37798,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37797,
                "name": "DutchInput",
                "nameLocations": [
                  "856:10:63"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36109,
                "src": "856:10:63"
              },
              "referencedDeclaration": 36109,
              "src": "856:10:63",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_DutchInput_$36109_storage_ptr",
                "typeString": "struct DutchInput"
              }
            }
          },
          {
            "id": 37803,
            "nodeType": "UsingForDirective",
            "src": "872:47:63",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37800,
              "name": "ExclusivityOverrideLib",
              "nameLocations": [
                "878:22:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36538,
              "src": "878:22:63"
            },
            "typeName": {
              "id": 37802,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37801,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "905:13:63"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35358,
                "src": "905:13:63"
              },
              "referencedDeclaration": 35358,
              "src": "905:13:63",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$35358_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 37805,
            "nodeType": "ErrorDefinition",
            "src": "925:30:63",
            "nodes": [],
            "errorSelector": "773a6187",
            "name": "DeadlineBeforeEndTime",
            "nameLocation": "931:21:63",
            "parameters": {
              "id": 37804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "952:2:63"
            }
          },
          {
            "id": 37807,
            "nodeType": "ErrorDefinition",
            "src": "960:36:63",
            "nodes": [],
            "errorSelector": "48fee69c",
            "name": "OrderEndTimeBeforeStartTime",
            "nameLocation": "966:27:63",
            "parameters": {
              "id": 37806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:2:63"
            }
          },
          {
            "id": 37809,
            "nodeType": "ErrorDefinition",
            "src": "1001:28:63",
            "nodes": [],
            "errorSelector": "d303758b",
            "name": "InputAndOutputDecay",
            "nameLocation": "1007:19:63",
            "parameters": {
              "id": 37808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1026:2:63"
            }
          },
          {
            "id": 37822,
            "nodeType": "FunctionDefinition",
            "src": "1035:101:63",
            "nodes": [],
            "body": {
              "id": 37821,
              "nodeType": "Block",
              "src": "1134:2:63",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 37817,
                    "name": "_permit2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37812,
                    "src": "1105:8:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$33826",
                      "typeString": "contract IPermit2"
                    }
                  },
                  {
                    "id": 37818,
                    "name": "_protocolFeeOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37814,
                    "src": "1115:17:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 37819,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37816,
                  "name": "BaseReactor",
                  "nameLocations": [
                    "1093:11:63"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37551,
                  "src": "1093:11:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "1093:40:63"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37812,
                  "mutability": "mutable",
                  "name": "_permit2",
                  "nameLocation": "1056:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 37822,
                  "src": "1047:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPermit2_$33826",
                    "typeString": "contract IPermit2"
                  },
                  "typeName": {
                    "id": 37811,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37810,
                      "name": "IPermit2",
                      "nameLocations": [
                        "1047:8:63"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33826,
                      "src": "1047:8:63"
                    },
                    "referencedDeclaration": 33826,
                    "src": "1047:8:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$33826",
                      "typeString": "contract IPermit2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37814,
                  "mutability": "mutable",
                  "name": "_protocolFeeOwner",
                  "nameLocation": "1074:17:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 37822,
                  "src": "1066:25:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1046:46:63"
            },
            "returnParameters": {
              "id": 37820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:63"
            },
            "scope": 37990,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37888,
            "nodeType": "FunctionDefinition",
            "src": "1174:731:63",
            "nodes": [],
            "body": {
              "id": 37887,
              "nodeType": "Block",
              "src": "1345:560:63",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37835,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "1382:5:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 37887,
                      "src": "1355:32:63",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                        "typeString": "struct ExclusiveDutchOrder"
                      },
                      "typeName": {
                        "id": 37834,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37833,
                          "name": "ExclusiveDutchOrder",
                          "nameLocations": [
                            "1355:19:63"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36318,
                          "src": "1355:19:63"
                        },
                        "referencedDeclaration": 36318,
                        "src": "1355:19:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_storage_ptr",
                          "typeString": "struct ExclusiveDutchOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37843,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37838,
                          "name": "signedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37826,
                          "src": "1401:11:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$35363_calldata_ptr",
                            "typeString": "struct SignedOrder calldata"
                          }
                        },
                        "id": 37839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1413:5:63",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35360,
                        "src": "1401:17:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 37840,
                            "name": "ExclusiveDutchOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36318,
                            "src": "1421:19:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExclusiveDutchOrder_$36318_storage_ptr_$",
                              "typeString": "type(struct ExclusiveDutchOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 37841,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1420:21:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExclusiveDutchOrder_$36318_storage_ptr_$",
                          "typeString": "type(struct ExclusiveDutchOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_ExclusiveDutchOrder_$36318_storage_ptr_$",
                          "typeString": "type(struct ExclusiveDutchOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 37836,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1390:3:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1394:6:63",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1390:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 37842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:52:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                      "typeString": "struct ExclusiveDutchOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1355:87:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37845,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37835,
                        "src": "1467:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      ],
                      "id": 37844,
                      "name": "_validateOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37989,
                      "src": "1452:14:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ExclusiveDutchOrder_$36318_memory_ptr_$returns$__$",
                        "typeString": "function (struct ExclusiveDutchOrder memory) pure"
                      }
                    },
                    "id": 37846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1452:21:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37847,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:21:63"
                },
                {
                  "expression": {
                    "id": 37874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37848,
                      "name": "resolvedOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37831,
                      "src": "1484:13:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                        "typeString": "struct ResolvedOrder memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 37850,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37835,
                            "src": "1534:5:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                              "typeString": "struct ExclusiveDutchOrder memory"
                            }
                          },
                          "id": 37851,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1540:4:63",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36302,
                          "src": "1534:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$35328_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 37855,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37835,
                                "src": "1583:5:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37856,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1589:14:63",
                              "memberName": "decayStartTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36304,
                              "src": "1583:20:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 37857,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37835,
                                "src": "1605:5:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37858,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1611:12:63",
                              "memberName": "decayEndTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36306,
                              "src": "1605:18:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 37852,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37835,
                                "src": "1565:5:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37853,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1571:5:63",
                              "memberName": "input",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36313,
                              "src": "1565:11:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DutchInput_$36109_memory_ptr",
                                "typeString": "struct DutchInput memory"
                              }
                            },
                            "id": 37854,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1577:5:63",
                            "memberName": "decay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36083,
                            "src": "1565:17:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_DutchInput_$36109_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_InputToken_$35336_memory_ptr_$attached_to$_t_struct$_DutchInput_$36109_memory_ptr_$",
                              "typeString": "function (struct DutchInput memory,uint256,uint256) view returns (struct InputToken memory)"
                            }
                          },
                          "id": 37859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1565:59:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InputToken_$35336_memory_ptr",
                            "typeString": "struct InputToken memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 37863,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37835,
                                "src": "1667:5:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37864,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1673:14:63",
                              "memberName": "decayStartTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36304,
                              "src": "1667:20:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 37865,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37835,
                                "src": "1689:5:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37866,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1695:12:63",
                              "memberName": "decayEndTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36306,
                              "src": "1689:18:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 37860,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37835,
                                "src": "1647:5:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37861,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1653:7:63",
                              "memberName": "outputs",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36317,
                              "src": "1647:13:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36101_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct DutchOutput memory[] memory"
                              }
                            },
                            "id": 37862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1661:5:63",
                            "memberName": "decay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36036,
                            "src": "1647:19:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_DutchOutput_$36101_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_OutputToken_$35343_memory_ptr_$dyn_memory_ptr_$attached_to$_t_array$_t_struct$_DutchOutput_$36101_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (struct DutchOutput memory[] memory,uint256,uint256) view returns (struct OutputToken memory[] memory)"
                            }
                          },
                          "id": 37867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1647:61:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$35343_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 37868,
                            "name": "signedOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37826,
                            "src": "1727:11:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignedOrder_$35363_calldata_ptr",
                              "typeString": "struct SignedOrder calldata"
                            }
                          },
                          "id": 37869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1739:3:63",
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35362,
                          "src": "1727:15:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 37870,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37835,
                              "src": "1762:5:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                "typeString": "struct ExclusiveDutchOrder memory"
                              }
                            },
                            "id": 37871,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1768:4:63",
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36417,
                            "src": "1762:10:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_ExclusiveDutchOrder_$36318_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_ExclusiveDutchOrder_$36318_memory_ptr_$",
                              "typeString": "function (struct ExclusiveDutchOrder memory) pure returns (bytes32)"
                            }
                          },
                          "id": 37872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1762:12:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OrderInfo_$35328_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_InputToken_$35336_memory_ptr",
                            "typeString": "struct InputToken memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$35343_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 37849,
                        "name": "ResolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35358,
                        "src": "1500:13:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$35358_storage_ptr_$",
                          "typeString": "type(struct ResolvedOrder storage pointer)"
                        }
                      },
                      "id": 37873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1528:4:63",
                        "1558:5:63",
                        "1638:7:63",
                        "1722:3:63",
                        "1756:4:63"
                      ],
                      "names": [
                        "info",
                        "input",
                        "outputs",
                        "sig",
                        "hash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1500:285:63",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                        "typeString": "struct ResolvedOrder memory"
                      }
                    },
                    "src": "1484:301:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                      "typeString": "struct ResolvedOrder memory"
                    }
                  },
                  "id": 37875,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:301:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37879,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37835,
                          "src": "1824:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37880,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1830:15:63",
                        "memberName": "exclusiveFiller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36308,
                        "src": "1824:21:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 37881,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37835,
                          "src": "1847:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37882,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1853:14:63",
                        "memberName": "decayStartTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36304,
                        "src": "1847:20:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 37883,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37835,
                          "src": "1869:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37884,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1875:22:63",
                        "memberName": "exclusivityOverrideBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36310,
                        "src": "1869:28:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37876,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37831,
                        "src": "1795:13:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 37878,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1809:14:63",
                      "memberName": "handleOverride",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36509,
                      "src": "1795:28:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$35358_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$attached_to$_t_struct$_ResolvedOrder_$35358_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory,address,uint256,uint256) view"
                      }
                    },
                    "id": 37885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:103:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37886,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:103:63"
                }
              ]
            },
            "baseFunctions": [
              37541
            ],
            "documentation": {
              "id": 37823,
              "nodeType": "StructuredDocumentation",
              "src": "1142:27:63",
              "text": "@inheritdoc BaseReactor"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolve",
            "nameLocation": "1183:7:63",
            "overrides": {
              "id": 37828,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1279:8:63"
            },
            "parameters": {
              "id": 37827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37826,
                  "mutability": "mutable",
                  "name": "signedOrder",
                  "nameLocation": "1212:11:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 37888,
                  "src": "1191:32:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$35363_calldata_ptr",
                    "typeString": "struct SignedOrder"
                  },
                  "typeName": {
                    "id": 37825,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37824,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "1191:11:63"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35363,
                      "src": "1191:11:63"
                    },
                    "referencedDeclaration": 35363,
                    "src": "1191:11:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$35363_storage_ptr",
                      "typeString": "struct SignedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1190:34:63"
            },
            "returnParameters": {
              "id": 37832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37831,
                  "mutability": "mutable",
                  "name": "resolvedOrder",
                  "nameLocation": "1326:13:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 37888,
                  "src": "1305:34:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 37830,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37829,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1305:13:63"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35358,
                      "src": "1305:13:63"
                    },
                    "referencedDeclaration": 35358,
                    "src": "1305:13:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35358_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1304:36:63"
            },
            "scope": 37990,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 37920,
            "nodeType": "FunctionDefinition",
            "src": "1943:350:63",
            "nodes": [],
            "body": {
              "id": 37919,
              "nodeType": "Block",
              "src": "2030:263:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 37901,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37892,
                            "src": "2087:5:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 37902,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2093:8:63",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37044,
                          "src": "2087:14:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$35358_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$33863_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$35358_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 37903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2087:16:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$33863_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 37906,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37894,
                            "src": "2139:2:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 37904,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37892,
                            "src": "2117:5:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 37905,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2123:15:63",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37065,
                          "src": "2117:21:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$35358_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$33868_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$35358_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 37907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2117:25:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$33868_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 37908,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37892,
                            "src": "2156:5:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 37909,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2162:4:63",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35346,
                          "src": "2156:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$35328_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 37910,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2167:7:63",
                        "memberName": "swapper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35318,
                        "src": "2156:18:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 37911,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37892,
                          "src": "2188:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 37912,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2194:4:63",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35357,
                        "src": "2188:10:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 37913,
                          "name": "ExclusiveDutchOrderLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36418,
                          "src": "2212:22:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExclusiveDutchOrderLib_$36418_$",
                            "typeString": "type(library ExclusiveDutchOrderLib)"
                          }
                        },
                        "id": 37914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2235:18:63",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36375,
                        "src": "2212:41:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 37915,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37892,
                          "src": "2267:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 37916,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2273:3:63",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35355,
                        "src": "2267:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$33863_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$33868_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 37898,
                        "name": "permit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37209,
                        "src": "2040:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$33826",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 37900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2048:25:63",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33919,
                      "src": "2040:33:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$33863_memory_ptr_$_t_struct$_SignatureTransferDetails_$33868_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 37917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2040:246:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37918,
                  "nodeType": "ExpressionStatement",
                  "src": "2040:246:63"
                }
              ]
            },
            "baseFunctions": [
              37550
            ],
            "documentation": {
              "id": 37889,
              "nodeType": "StructuredDocumentation",
              "src": "1911:27:63",
              "text": "@inheritdoc BaseReactor"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferInputTokens",
            "nameLocation": "1952:19:63",
            "overrides": {
              "id": 37896,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2021:8:63"
            },
            "parameters": {
              "id": 37895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37892,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1993:5:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 37920,
                  "src": "1972:26:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 37891,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37890,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1972:13:63"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35358,
                      "src": "1972:13:63"
                    },
                    "referencedDeclaration": 35358,
                    "src": "1972:13:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35358_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37894,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2008:2:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 37920,
                  "src": "2000:10:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1971:40:63"
            },
            "returnParameters": {
              "id": 37897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2030:0:63"
            },
            "scope": 37990,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 37989,
            "nodeType": "FunctionDefinition",
            "src": "2642:669:63",
            "nodes": [],
            "body": {
              "id": 37988,
              "nodeType": "Block",
              "src": "2714:597:63",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 37927,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37924,
                          "src": "2728:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37928,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2734:4:63",
                        "memberName": "info",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36302,
                        "src": "2728:10:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$35328_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 37929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2739:8:63",
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35322,
                      "src": "2728:19:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 37930,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37924,
                        "src": "2750:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      },
                      "id": 37931,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2756:12:63",
                      "memberName": "decayEndTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36306,
                      "src": "2750:18:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2728:40:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37937,
                  "nodeType": "IfStatement",
                  "src": "2724:101:63",
                  "trueBody": {
                    "id": 37936,
                    "nodeType": "Block",
                    "src": "2770:55:63",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37933,
                            "name": "DeadlineBeforeEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37805,
                            "src": "2791:21:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2791:23:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37935,
                        "nodeType": "RevertStatement",
                        "src": "2784:30:63"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37938,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37924,
                        "src": "2839:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      },
                      "id": 37939,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2845:12:63",
                      "memberName": "decayEndTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36306,
                      "src": "2839:18:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 37940,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37924,
                        "src": "2860:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      },
                      "id": 37941,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2866:14:63",
                      "memberName": "decayStartTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36304,
                      "src": "2860:20:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2839:41:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37947,
                  "nodeType": "IfStatement",
                  "src": "2835:108:63",
                  "trueBody": {
                    "id": 37946,
                    "nodeType": "Block",
                    "src": "2882:61:63",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37943,
                            "name": "OrderEndTimeBeforeStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37807,
                            "src": "2903:27:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2903:29:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37945,
                        "nodeType": "RevertStatement",
                        "src": "2896:36:63"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 37948,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37924,
                          "src": "2957:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37949,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2963:5:63",
                        "memberName": "input",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36313,
                        "src": "2957:11:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DutchInput_$36109_memory_ptr",
                          "typeString": "struct DutchInput memory"
                        }
                      },
                      "id": 37950,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2969:11:63",
                      "memberName": "startAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36106,
                      "src": "2957:23:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 37951,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37924,
                          "src": "2984:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37952,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2990:5:63",
                        "memberName": "input",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36313,
                        "src": "2984:11:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DutchInput_$36109_memory_ptr",
                          "typeString": "struct DutchInput memory"
                        }
                      },
                      "id": 37953,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2996:9:63",
                      "memberName": "endAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36108,
                      "src": "2984:21:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2957:48:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37987,
                  "nodeType": "IfStatement",
                  "src": "2953:352:63",
                  "trueBody": {
                    "id": 37986,
                    "nodeType": "Block",
                    "src": "3007:298:63",
                    "statements": [
                      {
                        "id": 37985,
                        "nodeType": "UncheckedBlock",
                        "src": "3021:274:63",
                        "statements": [
                          {
                            "body": {
                              "id": 37983,
                              "nodeType": "Block",
                              "src": "3100:181:63",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 37977,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 37967,
                                            "name": "order",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 37924,
                                            "src": "3126:5:63",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                              "typeString": "struct ExclusiveDutchOrder memory"
                                            }
                                          },
                                          "id": 37968,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3132:7:63",
                                          "memberName": "outputs",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 36317,
                                          "src": "3126:13:63",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36101_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct DutchOutput memory[] memory"
                                          }
                                        },
                                        "id": 37970,
                                        "indexExpression": {
                                          "id": 37969,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37956,
                                          "src": "3140:1:63",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3126:16:63",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DutchOutput_$36101_memory_ptr",
                                          "typeString": "struct DutchOutput memory"
                                        }
                                      },
                                      "id": 37971,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3143:11:63",
                                      "memberName": "startAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36096,
                                      "src": "3126:28:63",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 37972,
                                            "name": "order",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 37924,
                                            "src": "3158:5:63",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                              "typeString": "struct ExclusiveDutchOrder memory"
                                            }
                                          },
                                          "id": 37973,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3164:7:63",
                                          "memberName": "outputs",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 36317,
                                          "src": "3158:13:63",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36101_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct DutchOutput memory[] memory"
                                          }
                                        },
                                        "id": 37975,
                                        "indexExpression": {
                                          "id": 37974,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37956,
                                          "src": "3172:1:63",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3158:16:63",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DutchOutput_$36101_memory_ptr",
                                          "typeString": "struct DutchOutput memory"
                                        }
                                      },
                                      "id": 37976,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3175:9:63",
                                      "memberName": "endAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36098,
                                      "src": "3158:26:63",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3126:58:63",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 37982,
                                  "nodeType": "IfStatement",
                                  "src": "3122:141:63",
                                  "trueBody": {
                                    "id": 37981,
                                    "nodeType": "Block",
                                    "src": "3186:77:63",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 37978,
                                            "name": "InputAndOutputDecay",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 37809,
                                            "src": "3219:19:63",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 37979,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3219:21:63",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 37980,
                                        "nodeType": "RevertStatement",
                                        "src": "3212:28:63"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 37963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 37959,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37956,
                                "src": "3069:1:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 37960,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37924,
                                    "src": "3073:5:63",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                                      "typeString": "struct ExclusiveDutchOrder memory"
                                    }
                                  },
                                  "id": 37961,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3079:7:63",
                                  "memberName": "outputs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36317,
                                  "src": "3073:13:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36101_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct DutchOutput memory[] memory"
                                  }
                                },
                                "id": 37962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3087:6:63",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3073:20:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3069:24:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 37984,
                            "initializationExpression": {
                              "assignments": [
                                37956
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 37956,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "3062:1:63",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 37984,
                                  "src": "3054:9:63",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 37955,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3054:7:63",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 37958,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 37957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3066:1:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3054:13:63"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 37965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3095:3:63",
                                "subExpression": {
                                  "id": 37964,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37956,
                                  "src": "3095:1:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 37966,
                              "nodeType": "ExpressionStatement",
                              "src": "3095:3:63"
                            },
                            "nodeType": "ForStatement",
                            "src": "3049:232:63"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 37921,
              "nodeType": "StructuredDocumentation",
              "src": "2299:338:63",
              "text": "@notice validate the dutch order fields\n - deadline must be greater than or equal than decayEndTime\n - decayEndTime must be greater than or equal to decayStartTime\n - if there's input decay, outputs must not decay\n - for input decay, startAmount must < endAmount\n @dev Throws if the order is invalid"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateOrder",
            "nameLocation": "2651:14:63",
            "parameters": {
              "id": 37925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37924,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2693:5:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 37989,
                  "src": "2666:32:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_memory_ptr",
                    "typeString": "struct ExclusiveDutchOrder"
                  },
                  "typeName": {
                    "id": 37923,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37922,
                      "name": "ExclusiveDutchOrder",
                      "nameLocations": [
                        "2666:19:63"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36318,
                      "src": "2666:19:63"
                    },
                    "referencedDeclaration": 36318,
                    "src": "2666:19:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36318_storage_ptr",
                      "typeString": "struct ExclusiveDutchOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2665:34:63"
            },
            "returnParameters": {
              "id": 37926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2714:0:63"
            },
            "scope": 37990,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37781,
              "name": "BaseReactor",
              "nameLocations": [
                "673:11:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37551,
              "src": "673:11:63"
            },
            "id": 37782,
            "nodeType": "InheritanceSpecifier",
            "src": "673:11:63"
          }
        ],
        "canonicalName": "ExclusiveDutchOrderReactor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37780,
          "nodeType": "StructuredDocumentation",
          "src": "587:47:63",
          "text": "@notice Reactor for exclusive dutch orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37990,
          37551,
          29963,
          35290,
          34022,
          35305,
          35496
        ],
        "name": "ExclusiveDutchOrderReactor",
        "nameLocation": "643:26:63",
        "scope": 37991,
        "usedErrors": [
          35004,
          35013,
          35018,
          35690,
          35840,
          35843,
          36432,
          36562,
          37074,
          37076,
          37206,
          37805,
          37807,
          37809
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 63
}