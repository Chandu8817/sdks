{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_permit2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DeadlineBeforeEndTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DuplicateFeeOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EndTimeBeforeStartTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EndTimeBeforeStartTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FeeTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectAmounts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InputAndOutputDecay",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientEth",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "actualBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedBalance",
          "type": "uint256"
        }
      ],
      "name": "InsufficientOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFeeToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReactor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoExclusiveOverride",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughETHDirectFiller",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "Fill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DIRECT_FILL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "contract IReactorCallback",
          "name": "fillContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "fillData",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IReactorCallback",
          "name": "fillContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "fillData",
          "type": "bytes"
        }
      ],
      "name": "executeBatch",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeController",
      "outputs": [
        {
          "internalType": "contract IProtocolFeeController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeController",
          "type": "address"
        }
      ],
      "name": "setProtocolFeeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50604051620034f5380380620034f58339810160408190526200003491620000bc565b600080546001600160a01b0319166001600160a01b03831690811782556040518492849283928392907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350506001600255506001600160a01b031660805250620000f49050565b80516001600160a01b0381168114620000b757600080fd5b919050565b60008060408385031215620000d057600080fd5b620000db836200009f565b9150620000eb602084016200009f565b90509250929050565b6080516133d86200011d6000396000818160a701528181611525015261192201526133d86000f3fe60806040526004361061007b5760003560e01c80636999b3771161004e5780636999b377146101325780636f1d5f511461015f5780638da5cb5b14610172578063fccbcaaf1461019f57600080fd5b806305afc9771461008057806312261ee71461009557806313af4035146100f25780632d77138914610112575b600080fd5b61009361008e366004612642565b6101b4565b005b3480156100a157600080fd5b506100c97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100fe57600080fd5b5061009361010d3660046126c5565b6102b6565b34801561011e57600080fd5b5061009361012d3660046126c5565b6103ac565b34801561013e57600080fd5b506001546100c99073ffffffffffffffffffffffffffffffffffffffff1681565b61009361016d3660046126e9565b610474565b34801561017e57600080fd5b506000546100c99073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101ab57600080fd5b506100c9600181565b6101bc6105d0565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816101d357905050905061027b85610641565b8160008151811061028e5761028e6127ca565b60200260200101819052506102a5818585856107ad565b506102b06001600255565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60005473ffffffffffffffffffffffffffffffffffffffff16331461042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610333565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61047c6105d0565b60008467ffffffffffffffff8111156104975761049761279b565b60405190808252806020026020018201604052801561055257816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104b55790505b50905060005b858110156105b15761058c878783818110610575576105756127ca565b905060200281019061058791906127f9565b610641565b82828151811061059e5761059e6127ca565b6020908102919091010152600101610558565b506105be818585856107ad565b506105c96001600255565b5050505050565b600280540361063b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610333565b60028055565b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101829052906106ba8380612837565b8101906106c79190612bc0565b90506106d281610975565b6040518060a0016040528082600001518152602001610708836020015184604001518560a00151610aa79092919063ffffffff16565b815260200161072e836020015184604001518560c00151610b799092919063ffffffff16565b81526020018480602001906107439190612837565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161078683610c60565b90526060820151602083015160808401519294506107a79285929190610f32565b50919050565b73ffffffffffffffffffffffffffffffffffffffff831660011460005b85518110156108b75760008682815181106107e7576107e76127ca565b602002602001015190506107fa81610fdd565b61080481336113eb565b61081981846108135787611523565b33611523565b80600001516020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16888481518110610861576108616127ca565b6020026020010151608001517f78ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd668460000151604001516040516108a691815260200190565b60405180910390a4506001016107ca565b5080156108cc576108c7856118b6565b6105c9565b60006108d7866119f9565b6040517f9943fa8900000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff861690639943fa8990610932908990339089908990600401612e67565b600060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b5050505061096d81611cbf565b505050505050565b604081015181516060015110156109b8576040517f773a618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060200151816040015110156109fa576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a0810151604081015160209091015114610aa45760005b8160c0015151811015610aa2578160c001518181518110610a3557610a356127ca565b6020026020010151604001518260c001518281518110610a5757610a576127ca565b60200260200101516020015114610a9a576040517fd303758b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101610a12565b505b50565b610ae16040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b836040015184602001511115610b23576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b39856020015186604001518686611d82565b60408051606081018252875173ffffffffffffffffffffffffffffffffffffffff1681526020810192909252958601519581019590955250929392505050565b82516060908067ffffffffffffffff811115610b9757610b9761279b565b604051908082528060200260200182016040528015610c0057816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610bb55790505b50915060005b81811015610c5757610c32868281518110610c2357610c236127ca565b60200260200101518686611e1c565b838281518110610c4457610c446127ca565b6020908102919091010152600101610c06565b50509392505050565b6040517f4578636c757369766544757463684c696d69744f72646572280000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060398201527f75696e7432353620737461727454696d652c000000000000000000000000000060488201527f75696e7432353620656e6454696d652c00000000000000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606a8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060828201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a18201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b48201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060cd8201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e482015260009060fa01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815260808301909152605280835290919061332360208301396040518060a00160405280607981526020016132aa60799139604051602001610e5293929190612f4a565b60405160208183030381529060405280519060200120610e758360000151611eec565b83602001518460400151856060015186608001518760a00151600001518860a00151602001518960a0015160400151610eb18b60c00151611f86565b60408051602081019b909b528a01989098526060890196909652608088019490945273ffffffffffffffffffffffffffffffffffffffff92831660a088015260c08701919091521660e0850152610100840152610120830152610140820152610160015b604051602081830303815290604052805190602001209050919050565b610f3c8383612024565b6102b05780610f77576040517fb9ec1e9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604084015160005b815181101561096d576000828281518110610f9c57610f9c6127ca565b60200260200101519050610fc584612710610fb79190612fbc565b602083015190612710612071565b60209091015280610fd581612fcf565b915050610f7f565b60015473ffffffffffffffffffffffffffffffffffffffff16610ffd5750565b6001546040517f8aa6cf0300000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690638aa6cf0390611054908590600401613007565b600060405180830381865afa158015611071573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110b7919081019061301a565b60408301515181519192509060006110cf8284612fbc565b67ffffffffffffffff8111156110e7576110e761279b565b60405190808252806020026020018201604052801561115057816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816111055790505b50905060005b838110156111a15785604001518181518110611174576111746127ca565b602002602001015182828151811061118e5761118e6127ca565b6020908102919091010152600101611156565b5060005b828110156113dc5760008582815181106111c1576111c16127ca565b6020026020010151905060005b82811015611264578681815181106111e8576111e86127ca565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff160361125c576040517f264a0cf000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001016111ce565b506000805b868110156112e957600089604001518281518110611289576112896127ca565b60200260200101519050836000015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16036112e05760208101516112dd9084612fbc565b92505b50600101611269565b50815160208901515173ffffffffffffffffffffffffffffffffffffffff9182169116036113265760208089015101516113239082612fbc565b90505b80600003611360576040517f6cb9962300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61136e816005612710612071565b826020015111156113ab576040517ffc5bee1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81846113b78589612fbc565b815181106113c7576113c76127ca565b602090810291909101015250506001016111a5565b50604090940193909352505050565b81515173ffffffffffffffffffffffffffffffffffffffff16301461143c576040517f4ddf4a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516060015142111561147b576040517f70f65caa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516080015173ffffffffffffffffffffffffffffffffffffffff1615610aa2578151608001516040517f6e84ba2b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636e84ba2b906114f790849086906004016130ea565b60006040518083038186803b15801561150f57600080fd5b505afa15801561096d573d6000803e3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe6115e3846040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a081018252602080840180515173ffffffffffffffffffffffffffffffffffffffff1660608085019182529151850151608085015283528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830190925273ffffffffffffffffffffffffffffffffffffffff861682528087015181015190820152856000015160200151866080015160405180608001604052806052815260200161332360529139604080517f4578636c757369766544757463684c696d69744f72646572280000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060398201527f75696e7432353620737461727454696d652c000000000000000000000000000060488201527f75696e7432353620656e6454696d652c00000000000000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606a8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060828201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a18201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b48201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060cd8201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e4820152815160da81830301815261019a8201909252607960fa8201818152916132aa9061011a01396040518060600160405280602e8152602001613375602e913960405160200161181b9493929190613119565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260608a01517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16835261188896959493926004016131c8565b600060405180830381600087803b1580156118a257600080fd5b505af115801561096d573d6000803e3d6000fd5b3460005b82518110156119e65760008382815181106118d7576118d76127ca565b6020026020010151905060005b8160400151518110156119dc57600082604001518281518110611909576119096127ca565b6020026020010151905061196c816040015182602001517f0000000000000000000000000000000000000000000000000000000000000000846000015173ffffffffffffffffffffffffffffffffffffffff16612090909392919063ffffffff16565b805173ffffffffffffffffffffffffffffffffffffffff166119d357806020015185106119a1578060200151850394506119d3565b6040517fa01a9df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001016118e4565b50506001016118ba565b508015610aa257610aa260003383612247565b60606000805b8351811015611a3857838181518110611a1a57611a1a6127ca565b602002602001015160400151518201915080806001019150506119ff565b508067ffffffffffffffff811115611a5257611a5261279b565b604051908082528060200260200182016040528015611abb57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181611a705790505b509150506000805b8351811015611cb7576000848281518110611ae057611ae06127ca565b6020026020010151905060005b816040015151811015611cad57600082604001518281518110611b1257611b126127ca565b602002602001015190506000805b86811015611bee576000888281518110611b3c57611b3c6127ca565b60200260200101519050836040015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16148015611bbc5750836000015173ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15611be55760019250836020015181604001818151611bdb9190612fbc565b905250611bee9050565b50600101611b20565b5080611ca35760408201518251600091611c1e9173ffffffffffffffffffffffffffffffffffffffff1690612322565b90506040518060600160405280846040015173ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015183611c7b9190612fbc565b815250888881518110611c9057611c906127ca565b6020908102919091010152506001909501945b5050600101611aed565b5050600101611ac3565b508152919050565b60005b8151811015610aa2576000828281518110611cdf57611cdf6127ca565b602002602001015190506000611d1c8260000151836020015173ffffffffffffffffffffffffffffffffffffffff1661232290919063ffffffff16565b90508160400151811015611d6d578082604001516040517f2c19b8b8000000000000000000000000000000000000000000000000000000008152600401610333929190918252602082015260400190565b50508080611d7a90612fcf565b915050611cc2565b600082821015611dbe576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428211611dcc575082611e14565b428310611dda575083611e14565b4283900383830386861015611dff57611df68688038383612071565b87039250611e11565b611e0c8787038383612071565b870192505b50505b949350505050565b6040805160608101825260008082526020820181905291810191909152836040015184602001511015611e7b576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611e91856020015186604001518686611d82565b90506040518060600160405280866000015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001866060015173ffffffffffffffffffffffffffffffffffffffff168152509150509392505050565b60006040518060a00160405280607981526020016132aa6079913980516020918201208351848301516040808701516060880151608089015160a08a01518051908901209351610f1598939492939192910196875273ffffffffffffffffffffffffffffffffffffffff958616602088015293851660408701526060860192909252608085015290911660a083015260c082015260e00190565b600080825160200267ffffffffffffffff811115611fa657611fa661279b565b6040519080825280601f01601f191660200182016040528015611fd0576020820181803683370190505b50905060005b8351811015612015576000612003858381518110611ff657611ff66127ca565b60200260200101516123ed565b60208381028501015250600101611fd6565b50805160209091012092915050565b600073ffffffffffffffffffffffffffffffffffffffff8316158061204857508142115b80612068575073ffffffffffffffffffffffffffffffffffffffff831633145b90505b92915050565b82820281151584158583048514171661208957600080fd5b0492915050565b73ffffffffffffffffffffffffffffffffffffffff841661218557813410156120e5576040517f821a48b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d806000811461213f576040519150601f19603f3d011682016040523d82523d6000602084013e612144565b606091505b505090508061217f576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506102b0565b8073ffffffffffffffffffffffffffffffffffffffff166336c7851633856121ac86612464565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529183166024830152821660448201529087166064820152608401600060405180830381600087803b15801561222957600080fd5b505af115801561223d573d6000803e3d6000fd5b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166122fc5760008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146122bc576040519150601f19603f3d011682016040523d82523d6000602084013e6122c1565b606091505b50509050806102b0576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61231d73ffffffffffffffffffffffffffffffffffffffff8416838361250e565b505050565b600073ffffffffffffffffffffffffffffffffffffffff831661235d575073ffffffffffffffffffffffffffffffffffffffff81163161206b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301528416906370a0823190602401602060405180830381865afa1580156123c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120689190613290565b600060405180608001604052806052815260200161332360529139805160209182012083518483015160408087015160608801519151610f15969192910194855273ffffffffffffffffffffffffffffffffffffffff93841660208601526040850192909252606084015216608082015260a00190565b600073ffffffffffffffffffffffffffffffffffffffff82111561250a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f36302062697473000000000000000000000000000000000000000000000000006064820152608401610333565b5090565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610333565b73ffffffffffffffffffffffffffffffffffffffff81168114610aa457600080fd5b80356125f4816125c7565b919050565b60008083601f84011261260b57600080fd5b50813567ffffffffffffffff81111561262357600080fd5b60208301915083602082850101111561263b57600080fd5b9250929050565b6000806000806060858703121561265857600080fd5b843567ffffffffffffffff8082111561267057600080fd5b908601906040828903121561268457600080fd5b909450602086013590612696826125c7565b909350604086013590808211156126ac57600080fd5b506126b9878288016125f9565b95989497509550505050565b6000602082840312156126d757600080fd5b81356126e2816125c7565b9392505050565b60008060008060006060868803121561270157600080fd5b853567ffffffffffffffff8082111561271957600080fd5b818801915088601f83011261272d57600080fd5b81358181111561273c57600080fd5b8960208260051b850101111561275157600080fd5b60208301975080965050612767602089016125e9565b9450604088013591508082111561277d57600080fd5b5061278a888289016125f9565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261282d57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261286c57600080fd5b83018035915067ffffffffffffffff82111561288757600080fd5b60200191503681900382131561263b57600080fd5b6040516060810167ffffffffffffffff811182821017156128bf576128bf61279b565b60405290565b6040516080810167ffffffffffffffff811182821017156128bf576128bf61279b565b60405160e0810167ffffffffffffffff811182821017156128bf576128bf61279b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156129525761295261279b565b604052919050565b600082601f83011261296b57600080fd5b813567ffffffffffffffff8111156129855761298561279b565b6129b660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161290b565b8181528460208386010111156129cb57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c082840312156129fa57600080fd5b60405160c0810167ffffffffffffffff8282108183111715612a1e57612a1e61279b565b8160405282935084359150612a32826125c7565b908252602084013590612a44826125c7565b816020840152604085013560408401526060850135606084015260808501359150612a6e826125c7565b81608084015260a0850135915080821115612a8857600080fd5b50612a958582860161295a565b60a0830152505092915050565b600060608284031215612ab457600080fd5b612abc61289c565b90508135612ac9816125c7565b80825250602082013560208201526040820135604082015292915050565b600067ffffffffffffffff821115612b0157612b0161279b565b5060051b60200190565b600082601f830112612b1c57600080fd5b81356020612b31612b2c83612ae7565b61290b565b82815260079290921b84018101918181019086841115612b5057600080fd5b8286015b84811015612bb55760808189031215612b6d5760008081fd5b612b756128c5565b8135612b80816125c7565b8152818501358582015260408083013590820152606080830135612ba3816125c7565b90820152835291830191608001612b54565b509695505050505050565b600060208284031215612bd257600080fd5b813567ffffffffffffffff80821115612bea57600080fd5b908301906101208286031215612bff57600080fd5b612c076128e8565b823582811115612c1657600080fd5b612c22878286016129e8565b8252506020830135602082015260408301356040820152612c45606084016125e9565b606082015260808301356080820152612c618660a08501612aa2565b60a082015261010083013582811115612c7957600080fd5b612c8587828601612b0b565b60c08301525095945050505050565b60005b83811015612caf578181015183820152602001612c97565b50506000910152565b60008151808452612cd0816020860160208601612c94565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015612d61578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101612d16565b509495945050505050565b6000815160e0845273ffffffffffffffffffffffffffffffffffffffff8082511660e08601528060208301511661010086015260408201516101208601526060820151610140860152806080830151166101608601525060a0810151905060c0610180850152612de06101a0850182612cb8565b90506020830151612e1e6020860182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408301518482036080860152612e368282612d02565b915050606083015184820360a0860152612e508282612cb8565b915050608083015160c08501528091505092915050565b6000606082016060835280875180835260808501915060808160051b86010192506020808a0160005b83811015612edc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888703018552612eca868351612d6c565b95509382019390820190600101612e90565b505073ffffffffffffffffffffffffffffffffffffffff89168187015285840360408701528684528688828601376000848801820152601f9096017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909201909401979650505050505050565b60008451612f5c818460208901612c94565b845190830190612f70818360208901612c94565b8451910190612f83818360208801612c94565b0195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561206b5761206b612f8d565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361300057613000612f8d565b5060010190565b6020815260006120686020830184612d6c565b6000602080838503121561302d57600080fd5b825167ffffffffffffffff81111561304457600080fd5b8301601f8101851361305557600080fd5b8051613063612b2c82612ae7565b8181526060918202830184019184820191908884111561308257600080fd5b938501935b838510156130de5780858a03121561309f5760008081fd5b6130a761289c565b85516130b2816125c7565b815285870151878201526040808701516130cb816125c7565b9082015283529384019391850191613087565b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000611e146040830184612d6c565b7f4578636c757369766544757463684c696d69744f72646572207769746e65737381527f2900000000000000000000000000000000000000000000000000000000000000602082015260008551613177816021850160208a01612c94565b85519083019061318e816021840160208a01612c94565b85519101906131a4816021840160208901612c94565b84519101906131ba816021840160208801612c94565b016021019695505050505050565b60006101406131f8838a51805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b60208901516040840152604089015160608401526132396080840189805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b73ffffffffffffffffffffffffffffffffffffffff871660c08401528560e08401528061010084015261326e81840186612cb8565b90508281036101208401526132838185612cb8565b9998505050505050505050565b6000602082840312156132a257600080fd5b505191905056fe4f72646572496e666f28616464726573732072656163746f722c6164647265737320737761707065722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c616464726573732076616c69646174696f6e436f6e74726163742c62797465732076616c69646174696f6e446174612944757463684f7574707574286164647265737320746f6b656e2c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e7429546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429a264697066735822122052af8f05920cb87d3ec6d541c451b1bc73e51c67d0a11b1ee737d81a683e3b1764736f6c63430008130033",
    "sourceMap": "693:2668:55:-:0;;;1104:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1037:5:26;:14;;-1:-1:-1;;;;;;1037:14:26;-1:-1:-1;;;;;1037:14:26;;;;;;;1067:32;;1173:8:55;;1037:14:26;;;;;;:5;1067:32;;1037:5;;1067:32;-1:-1:-1;;1701:1:18;1806:7;:22;-1:-1:-1;;;;;;1828:18:53::1;;::::0;-1:-1:-1;693:2668:55;;-1:-1:-1;693:2668:55;14:177:100;93:13;;-1:-1:-1;;;;;135:31:100;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;693:2668:55;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061007b5760003560e01c80636999b3771161004e5780636999b377146101325780636f1d5f511461015f5780638da5cb5b14610172578063fccbcaaf1461019f57600080fd5b806305afc9771461008057806312261ee71461009557806313af4035146100f25780632d77138914610112575b600080fd5b61009361008e366004612642565b6101b4565b005b3480156100a157600080fd5b506100c97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100fe57600080fd5b5061009361010d3660046126c5565b6102b6565b34801561011e57600080fd5b5061009361012d3660046126c5565b6103ac565b34801561013e57600080fd5b506001546100c99073ffffffffffffffffffffffffffffffffffffffff1681565b61009361016d3660046126e9565b610474565b34801561017e57600080fd5b506000546100c99073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101ab57600080fd5b506100c9600181565b6101bc6105d0565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816101d357905050905061027b85610641565b8160008151811061028e5761028e6127ca565b60200260200101819052506102a5818585856107ad565b506102b06001600255565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60005473ffffffffffffffffffffffffffffffffffffffff16331461042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610333565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61047c6105d0565b60008467ffffffffffffffff8111156104975761049761279b565b60405190808252806020026020018201604052801561055257816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104b55790505b50905060005b858110156105b15761058c878783818110610575576105756127ca565b905060200281019061058791906127f9565b610641565b82828151811061059e5761059e6127ca565b6020908102919091010152600101610558565b506105be818585856107ad565b506105c96001600255565b5050505050565b600280540361063b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610333565b60028055565b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101829052906106ba8380612837565b8101906106c79190612bc0565b90506106d281610975565b6040518060a0016040528082600001518152602001610708836020015184604001518560a00151610aa79092919063ffffffff16565b815260200161072e836020015184604001518560c00151610b799092919063ffffffff16565b81526020018480602001906107439190612837565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161078683610c60565b90526060820151602083015160808401519294506107a79285929190610f32565b50919050565b73ffffffffffffffffffffffffffffffffffffffff831660011460005b85518110156108b75760008682815181106107e7576107e76127ca565b602002602001015190506107fa81610fdd565b61080481336113eb565b61081981846108135787611523565b33611523565b80600001516020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16888481518110610861576108616127ca565b6020026020010151608001517f78ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd668460000151604001516040516108a691815260200190565b60405180910390a4506001016107ca565b5080156108cc576108c7856118b6565b6105c9565b60006108d7866119f9565b6040517f9943fa8900000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff861690639943fa8990610932908990339089908990600401612e67565b600060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b5050505061096d81611cbf565b505050505050565b604081015181516060015110156109b8576040517f773a618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060200151816040015110156109fa576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a0810151604081015160209091015114610aa45760005b8160c0015151811015610aa2578160c001518181518110610a3557610a356127ca565b6020026020010151604001518260c001518281518110610a5757610a576127ca565b60200260200101516020015114610a9a576040517fd303758b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101610a12565b505b50565b610ae16040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b836040015184602001511115610b23576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b39856020015186604001518686611d82565b60408051606081018252875173ffffffffffffffffffffffffffffffffffffffff1681526020810192909252958601519581019590955250929392505050565b82516060908067ffffffffffffffff811115610b9757610b9761279b565b604051908082528060200260200182016040528015610c0057816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610bb55790505b50915060005b81811015610c5757610c32868281518110610c2357610c236127ca565b60200260200101518686611e1c565b838281518110610c4457610c446127ca565b6020908102919091010152600101610c06565b50509392505050565b6040517f4578636c757369766544757463684c696d69744f72646572280000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060398201527f75696e7432353620737461727454696d652c000000000000000000000000000060488201527f75696e7432353620656e6454696d652c00000000000000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606a8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060828201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a18201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b48201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060cd8201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e482015260009060fa01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815260808301909152605280835290919061332360208301396040518060a00160405280607981526020016132aa60799139604051602001610e5293929190612f4a565b60405160208183030381529060405280519060200120610e758360000151611eec565b83602001518460400151856060015186608001518760a00151600001518860a00151602001518960a0015160400151610eb18b60c00151611f86565b60408051602081019b909b528a01989098526060890196909652608088019490945273ffffffffffffffffffffffffffffffffffffffff92831660a088015260c08701919091521660e0850152610100840152610120830152610140820152610160015b604051602081830303815290604052805190602001209050919050565b610f3c8383612024565b6102b05780610f77576040517fb9ec1e9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604084015160005b815181101561096d576000828281518110610f9c57610f9c6127ca565b60200260200101519050610fc584612710610fb79190612fbc565b602083015190612710612071565b60209091015280610fd581612fcf565b915050610f7f565b60015473ffffffffffffffffffffffffffffffffffffffff16610ffd5750565b6001546040517f8aa6cf0300000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690638aa6cf0390611054908590600401613007565b600060405180830381865afa158015611071573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110b7919081019061301a565b60408301515181519192509060006110cf8284612fbc565b67ffffffffffffffff8111156110e7576110e761279b565b60405190808252806020026020018201604052801561115057816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816111055790505b50905060005b838110156111a15785604001518181518110611174576111746127ca565b602002602001015182828151811061118e5761118e6127ca565b6020908102919091010152600101611156565b5060005b828110156113dc5760008582815181106111c1576111c16127ca565b6020026020010151905060005b82811015611264578681815181106111e8576111e86127ca565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff160361125c576040517f264a0cf000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001016111ce565b506000805b868110156112e957600089604001518281518110611289576112896127ca565b60200260200101519050836000015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16036112e05760208101516112dd9084612fbc565b92505b50600101611269565b50815160208901515173ffffffffffffffffffffffffffffffffffffffff9182169116036113265760208089015101516113239082612fbc565b90505b80600003611360576040517f6cb9962300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61136e816005612710612071565b826020015111156113ab576040517ffc5bee1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81846113b78589612fbc565b815181106113c7576113c76127ca565b602090810291909101015250506001016111a5565b50604090940193909352505050565b81515173ffffffffffffffffffffffffffffffffffffffff16301461143c576040517f4ddf4a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516060015142111561147b576040517f70f65caa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516080015173ffffffffffffffffffffffffffffffffffffffff1615610aa2578151608001516040517f6e84ba2b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636e84ba2b906114f790849086906004016130ea565b60006040518083038186803b15801561150f57600080fd5b505afa15801561096d573d6000803e3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe6115e3846040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a081018252602080840180515173ffffffffffffffffffffffffffffffffffffffff1660608085019182529151850151608085015283528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830190925273ffffffffffffffffffffffffffffffffffffffff861682528087015181015190820152856000015160200151866080015160405180608001604052806052815260200161332360529139604080517f4578636c757369766544757463684c696d69744f72646572280000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060398201527f75696e7432353620737461727454696d652c000000000000000000000000000060488201527f75696e7432353620656e6454696d652c00000000000000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606a8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060828201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a18201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b48201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060cd8201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e4820152815160da81830301815261019a8201909252607960fa8201818152916132aa9061011a01396040518060600160405280602e8152602001613375602e913960405160200161181b9493929190613119565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260608a01517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16835261188896959493926004016131c8565b600060405180830381600087803b1580156118a257600080fd5b505af115801561096d573d6000803e3d6000fd5b3460005b82518110156119e65760008382815181106118d7576118d76127ca565b6020026020010151905060005b8160400151518110156119dc57600082604001518281518110611909576119096127ca565b6020026020010151905061196c816040015182602001517f0000000000000000000000000000000000000000000000000000000000000000846000015173ffffffffffffffffffffffffffffffffffffffff16612090909392919063ffffffff16565b805173ffffffffffffffffffffffffffffffffffffffff166119d357806020015185106119a1578060200151850394506119d3565b6040517fa01a9df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001016118e4565b50506001016118ba565b508015610aa257610aa260003383612247565b60606000805b8351811015611a3857838181518110611a1a57611a1a6127ca565b602002602001015160400151518201915080806001019150506119ff565b508067ffffffffffffffff811115611a5257611a5261279b565b604051908082528060200260200182016040528015611abb57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181611a705790505b509150506000805b8351811015611cb7576000848281518110611ae057611ae06127ca565b6020026020010151905060005b816040015151811015611cad57600082604001518281518110611b1257611b126127ca565b602002602001015190506000805b86811015611bee576000888281518110611b3c57611b3c6127ca565b60200260200101519050836040015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16148015611bbc5750836000015173ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15611be55760019250836020015181604001818151611bdb9190612fbc565b905250611bee9050565b50600101611b20565b5080611ca35760408201518251600091611c1e9173ffffffffffffffffffffffffffffffffffffffff1690612322565b90506040518060600160405280846040015173ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015183611c7b9190612fbc565b815250888881518110611c9057611c906127ca565b6020908102919091010152506001909501945b5050600101611aed565b5050600101611ac3565b508152919050565b60005b8151811015610aa2576000828281518110611cdf57611cdf6127ca565b602002602001015190506000611d1c8260000151836020015173ffffffffffffffffffffffffffffffffffffffff1661232290919063ffffffff16565b90508160400151811015611d6d578082604001516040517f2c19b8b8000000000000000000000000000000000000000000000000000000008152600401610333929190918252602082015260400190565b50508080611d7a90612fcf565b915050611cc2565b600082821015611dbe576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428211611dcc575082611e14565b428310611dda575083611e14565b4283900383830386861015611dff57611df68688038383612071565b87039250611e11565b611e0c8787038383612071565b870192505b50505b949350505050565b6040805160608101825260008082526020820181905291810191909152836040015184602001511015611e7b576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611e91856020015186604001518686611d82565b90506040518060600160405280866000015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001866060015173ffffffffffffffffffffffffffffffffffffffff168152509150509392505050565b60006040518060a00160405280607981526020016132aa6079913980516020918201208351848301516040808701516060880151608089015160a08a01518051908901209351610f1598939492939192910196875273ffffffffffffffffffffffffffffffffffffffff958616602088015293851660408701526060860192909252608085015290911660a083015260c082015260e00190565b600080825160200267ffffffffffffffff811115611fa657611fa661279b565b6040519080825280601f01601f191660200182016040528015611fd0576020820181803683370190505b50905060005b8351811015612015576000612003858381518110611ff657611ff66127ca565b60200260200101516123ed565b60208381028501015250600101611fd6565b50805160209091012092915050565b600073ffffffffffffffffffffffffffffffffffffffff8316158061204857508142115b80612068575073ffffffffffffffffffffffffffffffffffffffff831633145b90505b92915050565b82820281151584158583048514171661208957600080fd5b0492915050565b73ffffffffffffffffffffffffffffffffffffffff841661218557813410156120e5576040517f821a48b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d806000811461213f576040519150601f19603f3d011682016040523d82523d6000602084013e612144565b606091505b505090508061217f576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506102b0565b8073ffffffffffffffffffffffffffffffffffffffff166336c7851633856121ac86612464565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529183166024830152821660448201529087166064820152608401600060405180830381600087803b15801561222957600080fd5b505af115801561223d573d6000803e3d6000fd5b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166122fc5760008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146122bc576040519150601f19603f3d011682016040523d82523d6000602084013e6122c1565b606091505b50509050806102b0576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61231d73ffffffffffffffffffffffffffffffffffffffff8416838361250e565b505050565b600073ffffffffffffffffffffffffffffffffffffffff831661235d575073ffffffffffffffffffffffffffffffffffffffff81163161206b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301528416906370a0823190602401602060405180830381865afa1580156123c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120689190613290565b600060405180608001604052806052815260200161332360529139805160209182012083518483015160408087015160608801519151610f15969192910194855273ffffffffffffffffffffffffffffffffffffffff93841660208601526040850192909252606084015216608082015260a00190565b600073ffffffffffffffffffffffffffffffffffffffff82111561250a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f36302062697473000000000000000000000000000000000000000000000000006064820152608401610333565b5090565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610333565b73ffffffffffffffffffffffffffffffffffffffff81168114610aa457600080fd5b80356125f4816125c7565b919050565b60008083601f84011261260b57600080fd5b50813567ffffffffffffffff81111561262357600080fd5b60208301915083602082850101111561263b57600080fd5b9250929050565b6000806000806060858703121561265857600080fd5b843567ffffffffffffffff8082111561267057600080fd5b908601906040828903121561268457600080fd5b909450602086013590612696826125c7565b909350604086013590808211156126ac57600080fd5b506126b9878288016125f9565b95989497509550505050565b6000602082840312156126d757600080fd5b81356126e2816125c7565b9392505050565b60008060008060006060868803121561270157600080fd5b853567ffffffffffffffff8082111561271957600080fd5b818801915088601f83011261272d57600080fd5b81358181111561273c57600080fd5b8960208260051b850101111561275157600080fd5b60208301975080965050612767602089016125e9565b9450604088013591508082111561277d57600080fd5b5061278a888289016125f9565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261282d57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261286c57600080fd5b83018035915067ffffffffffffffff82111561288757600080fd5b60200191503681900382131561263b57600080fd5b6040516060810167ffffffffffffffff811182821017156128bf576128bf61279b565b60405290565b6040516080810167ffffffffffffffff811182821017156128bf576128bf61279b565b60405160e0810167ffffffffffffffff811182821017156128bf576128bf61279b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156129525761295261279b565b604052919050565b600082601f83011261296b57600080fd5b813567ffffffffffffffff8111156129855761298561279b565b6129b660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161290b565b8181528460208386010111156129cb57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c082840312156129fa57600080fd5b60405160c0810167ffffffffffffffff8282108183111715612a1e57612a1e61279b565b8160405282935084359150612a32826125c7565b908252602084013590612a44826125c7565b816020840152604085013560408401526060850135606084015260808501359150612a6e826125c7565b81608084015260a0850135915080821115612a8857600080fd5b50612a958582860161295a565b60a0830152505092915050565b600060608284031215612ab457600080fd5b612abc61289c565b90508135612ac9816125c7565b80825250602082013560208201526040820135604082015292915050565b600067ffffffffffffffff821115612b0157612b0161279b565b5060051b60200190565b600082601f830112612b1c57600080fd5b81356020612b31612b2c83612ae7565b61290b565b82815260079290921b84018101918181019086841115612b5057600080fd5b8286015b84811015612bb55760808189031215612b6d5760008081fd5b612b756128c5565b8135612b80816125c7565b8152818501358582015260408083013590820152606080830135612ba3816125c7565b90820152835291830191608001612b54565b509695505050505050565b600060208284031215612bd257600080fd5b813567ffffffffffffffff80821115612bea57600080fd5b908301906101208286031215612bff57600080fd5b612c076128e8565b823582811115612c1657600080fd5b612c22878286016129e8565b8252506020830135602082015260408301356040820152612c45606084016125e9565b606082015260808301356080820152612c618660a08501612aa2565b60a082015261010083013582811115612c7957600080fd5b612c8587828601612b0b565b60c08301525095945050505050565b60005b83811015612caf578181015183820152602001612c97565b50506000910152565b60008151808452612cd0816020860160208601612c94565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015612d61578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101612d16565b509495945050505050565b6000815160e0845273ffffffffffffffffffffffffffffffffffffffff8082511660e08601528060208301511661010086015260408201516101208601526060820151610140860152806080830151166101608601525060a0810151905060c0610180850152612de06101a0850182612cb8565b90506020830151612e1e6020860182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408301518482036080860152612e368282612d02565b915050606083015184820360a0860152612e508282612cb8565b915050608083015160c08501528091505092915050565b6000606082016060835280875180835260808501915060808160051b86010192506020808a0160005b83811015612edc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888703018552612eca868351612d6c565b95509382019390820190600101612e90565b505073ffffffffffffffffffffffffffffffffffffffff89168187015285840360408701528684528688828601376000848801820152601f9096017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909201909401979650505050505050565b60008451612f5c818460208901612c94565b845190830190612f70818360208901612c94565b8451910190612f83818360208801612c94565b0195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561206b5761206b612f8d565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361300057613000612f8d565b5060010190565b6020815260006120686020830184612d6c565b6000602080838503121561302d57600080fd5b825167ffffffffffffffff81111561304457600080fd5b8301601f8101851361305557600080fd5b8051613063612b2c82612ae7565b8181526060918202830184019184820191908884111561308257600080fd5b938501935b838510156130de5780858a03121561309f5760008081fd5b6130a761289c565b85516130b2816125c7565b815285870151878201526040808701516130cb816125c7565b9082015283529384019391850191613087565b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000611e146040830184612d6c565b7f4578636c757369766544757463684c696d69744f72646572207769746e65737381527f2900000000000000000000000000000000000000000000000000000000000000602082015260008551613177816021850160208a01612c94565b85519083019061318e816021840160208a01612c94565b85519101906131a4816021840160208901612c94565b84519101906131ba816021840160208801612c94565b016021019695505050505050565b60006101406131f8838a51805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b60208901516040840152604089015160608401526132396080840189805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b73ffffffffffffffffffffffffffffffffffffffff871660c08401528560e08401528061010084015261326e81840186612cb8565b90508281036101208401526132838185612cb8565b9998505050505050505050565b6000602082840312156132a257600080fd5b505191905056fe4f72646572496e666f28616464726573732072656163746f722c6164647265737320737761707065722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c616464726573732076616c69646174696f6e436f6e74726163742c62797465732076616c69646174696f6e446174612944757463684f7574707574286164647265737320746f6b656e2c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e7429546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429a264697066735822122052af8f05920cb87d3ec6d541c451b1bc73e51c67d0a11b1ee737d81a683e3b1764736f6c63430008130033",
    "sourceMap": "693:2668:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:355:53;;;;;;:::i;:::-;;:::i;:::-;;1636:32;;;;;;;;;;;;;;;;;;1777:42:100;1765:55;;;1747:74;;1735:2;1720:18;1636:32:53;;;;;;;1296:144:26;;;;;;;;;;-1:-1:-1;1296:144:26;;;;;:::i;:::-;;:::i;3358:148:33:-;;;;;;;;;;-1:-1:-1;3358:148:33;;;;;:::i;:::-;;:::i;958:43::-;;;;;;;;;;-1:-1:-1;958:43:33;;;;;;;;2278:489:53;;;;;;:::i;:::-;;:::i;682:20:26:-;;;;;;;;;;-1:-1:-1;682:20:26;;;;;;;;1674:48:53;;;;;;;;;;;;1720:1;1674:48;;1888:355;2246:21:18;:19;:21::i;:::-;2114:22:53::1;::::0;;2134:1:::1;2114:22:::0;;;;;::::1;::::0;;;2074:37:::1;::::0;2114:22:::1;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2114:22:53;;;;;;;::::1;::::0;::::1;;;;;2074:62;;2166:14;2174:5;2166:7;:14::i;:::-;2146;2161:1;2146:17;;;;;;;;:::i;:::-;;;;;;:34;;;;2191:45;2197:14;2213:12;2227:8;;2191:5;:45::i;:::-;2064:179;2288:20:18::0;1701:1;2794:7;:22;2614:209;2288:20;1888:355:53;;;;:::o;1296:144:26:-;770:5;;;;756:10;:19;748:44;;;;;;;4008:2:100;748:44:26;;;3990:21:100;4047:2;4027:18;;;4020:30;4086:14;4066:18;;;4059:42;4118:18;;748:44:26;;;;;;;;;1367:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;1399:34:::1;::::0;1367:16;;1412:10:::1;::::0;1399:34:::1;::::0;1367:5;1399:34:::1;1296:144:::0;:::o;3358:148:33:-;770:5:26;;;;756:10;:19;748:44;;;;;;;4008:2:100;748:44:26;;;3990:21:100;4047:2;4027:18;;;4020:30;4086:14;4066:18;;;4059:42;4118:18;;748:44:26;3806:336:100;748:44:26;3445:13:33::1;:54:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;3358:148::o;2278:489:53:-;2246:21:18;:19;:21::i;:::-;2472:37:53::1;2532:6:::0;2512:34:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2512:34:53;;;;;;;::::1;::::0;::::1;;;;;;2472:74;;2586:9;2581:115;2601:17:::0;;::::1;2581:115;;;2663:18;2671:6;;2678:1;2671:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2663:7;:18::i;:::-;2643:14;2658:1;2643:17;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:38;2620:3:::1;;2581:115;;;;2715:45;2721:14;2737:12;2751:8;;2715:5;:45::i;:::-;2462:305;2288:20:18::0;1701:1;2794:7;:22;2614:209;2288:20;2278:489:53;;;;;:::o;2321:287:18:-;1744:1;2453:7;;:19;2445:63;;;;;;;4742:2:100;2445:63:18;;;4724:21:100;4781:2;4761:18;;;4754:30;4820:33;4800:18;;;4793:61;4871:18;;2445:63:18;4540:355:100;2445:63:18;1744:1;2583:18;;2321:287::o;1242:716:55:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:17:55;:11;;:17;:::i;:::-;1463:57;;;;;;;:::i;:::-;1423:97;;1530:21;1545:5;1530:14;:21::i;:::-;1578:265;;;;;;;;1612:5;:10;;;1578:265;;;;1643:49;1661:5;:15;;;1678:5;:13;;;1643:5;:11;;;:17;;:49;;;;;:::i;:::-;1578:265;;;;1715:51;1735:5;:15;;;1752:5;:13;;;1715:5;:13;;;:19;;:51;;;;;:::i;:::-;1578:265;;;;1785:11;:15;;;;;;;;:::i;:::-;1578:265;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1578:265:55;;;-1:-1:-1;1578:265:55;;1820:12;:5;:10;:12::i;:::-;1578:265;;1882:21;;;;1905:15;;;;1922:28;;;;1562:281;;-1:-1:-1;1853:98:55;;1562:281;;1882:21;1905:15;1853:28;:98::i;:::-;1413:545;1242:716;;;:::o;2848:986:53:-;2987:36;;;1720:1;2987:36;2969:15;3057:471;3081:6;:13;3077:1;:17;3057:471;;;3119:26;3148:6;3155:1;3148:9;;;;;;;;:::i;:::-;;;;;;;3119:38;;3175:18;3187:5;3175:11;:18::i;:::-;3211:26;:5;3226:10;3211:14;:26::i;:::-;3255:75;3275:5;3282:10;:47;;3316:12;3255:19;:75::i;3282:47::-;3295:10;3255:19;:75::i;:::-;3476:5;:10;;;:18;;;3443:70;;3464:10;3443:70;;3448:6;3455:1;3448:9;;;;;;;;:::i;:::-;;;;;;;:14;;;3443:70;3496:5;:10;;;:16;;;3443:70;;;;11656:25:100;;11644:2;11629:18;;11510:177;3443:70:53;;;;;;;;-1:-1:-1;3096:3:53;;3057:471;;;;3552:10;3548:280;;;3578:26;3597:6;3578:18;:26::i;:::-;3548:280;;;3635:41;3679:28;:6;:26;:28::i;:::-;3721:58;;;;;3635:72;;-1:-1:-1;3721:28:53;;;;;;:58;;3750:6;;3758:10;;3770:8;;;;3721:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3793:24;:16;:22;:24::i;:::-;3621:207;2959:875;2848:986;;;;:::o;2705:654:55:-;2818:13;;;;2796:10;;:19;;;:35;2792:96;;;2854:23;;;;;;;;;;;;;;2792:96;2918:5;:15;;;2902:5;:13;;;:31;2898:93;;;2956:24;;;;;;;;;;;;;;2898:93;3032:11;;;;:21;;;;3005:23;;;;;:48;3001:352;;3102:9;3097:232;3121:5;:13;;;:20;3117:1;:24;3097:232;;;3206:5;:13;;;3220:1;3206:16;;;;;;;;:::i;:::-;;;;;;;:26;;;3174:5;:13;;;3188:1;3174:16;;;;;;;;:::i;:::-;;;;;;;:28;;;:58;3170:141;;3267:21;;;;;;;;;;;;;;3170:141;3143:3;;3097:232;;;;3001:352;2705:654;:::o;3523:442:44:-;3646:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3646:24:44;3710:5;:15;;;3690:5;:17;;;:35;3686:91;;;3748:18;;;;;;;;;;;;;;3686:91;3787:20;3810:75;3830:5;:17;;;3849:5;:15;;;3866:9;3877:7;3810:19;:75::i;:::-;3904:54;;;;;;;;3915:11;;3904:54;;;;;;;;;;;3942:15;;;;3904:54;;;;;;;-1:-1:-1;3904:54:44;;3523:442;-1:-1:-1;;;3523:442:44:o;2828:433::-;3022:14;;2956:27;;3022:14;3055:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;3055:31:44;;;;;;;;;;;;;;;3046:40;;3125:9;3120:125;3144:12;3140:1;:16;3120:125;;;3193:37;3199:7;3207:1;3199:10;;;;;;;;:::i;:::-;;;;;;;3211:9;3222:7;3193:5;:37::i;:::-;3181:6;3188:1;3181:9;;;;;;;;:::i;:::-;;;;;;;;;;:49;3158:3;;3120:125;;;;2989:272;2828:433;;;;;:::o;2346:536:46:-;1178:360;;17012:27:100;1178:360:46;;;17000:40:100;17070:17;17056:12;;;17049:39;17118:20;17104:12;;;17097:42;17169:18;17155:12;;;17148:40;17218:26;17204:12;;;17197:48;17275:33;17261:12;;;17254:55;17340:21;17325:13;;;17318:44;17393:27;17378:13;;;17371:50;17452:25;17437:13;;;17430:48;17509:24;17494:13;;;17487:47;2422:7:46;;17550:13:100;;1178:360:46;;;;;;;;;;1642:36;;;;;;;;;;1178:360;;;1642:36;1178:360;1642:36;;;1680:28;;;;;;;;;;;;;;;;;1582:132;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1764:21;;;;;;2532:17;:5;:10;;;:15;:17::i;:::-;2567:5;:15;;;2600:5;:13;;;2631:5;:21;;;2670:5;:28;;;2716:5;:11;;;:17;;;2751:5;:11;;;:23;;;2792:5;:11;;;:21;;;2831:20;:5;:13;;;:18;:20::i;:::-;2471:394;;;;;;18690:25:100;;;;18731:18;;18724:34;;;;18774:18;;;18767:34;;;;18817:18;;;18810:34;;;;18863:42;18942:15;;;18921:19;;;18914:44;18974:19;;;18967:35;;;;19039:15;19018:19;;;19011:44;19071:19;;;19064:35;19115:19;;;19108:35;19159:19;;;19152:35;18662:19;;2471:394:46;;;;;;;;;;;;;2448:427;;;;;;2441:434;;2346:536;;;:::o;989:864:47:-;1259:47;1276:9;1287:18;1259:16;:47::i;:::-;1322:7;1255:84;1443:22;1439:103;;1510:21;;;;;;;;;;;;;;1439:103;1627:13;;;;1596:28;1650:197;1674:7;:14;1670:1;:18;1650:197;;;1709:25;1737:7;1745:1;1737:10;;;;;;;;:::i;:::-;;;;;;;1709:38;;1777:59;1808:22;659:6;1802:28;;;;:::i;:::-;1777:13;;;;;659:6;1777:24;:59::i;:::-;1761:13;;;;:75;1690:3;;;;:::i;:::-;;;;1650:197;;1225:1985:33;1310:13;;1302:36;1310:13;1298:73;;1225:1985;:::o;1298:73::-;1415:13;;:34;;;;;1381:31;;1415:13;;;:27;;:34;;1443:5;;1415:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1483:13;;;;:20;1540:17;;1381:68;;-1:-1:-1;1483:20:33;1459:21;1707:32;1540:17;1483:20;1707:32;:::i;:::-;1676:73;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;1676:73:33;;;;;;;;;;;;;;;1642:107;;1789:9;1784:109;1808:13;1804:1;:17;1784:109;;;1862:5;:13;;;1876:1;1862:16;;;;;;;;:::i;:::-;;;;;;;1846:10;1857:1;1846:13;;;;;;;;:::i;:::-;;;;;;;;;;:32;1823:3;;1784:109;;;;1918:9;1913:1254;1937:16;1933:1;:20;1913:1254;;;1970:28;2001:10;2012:1;2001:13;;;;;;;;:::i;:::-;;;;;;;1970:44;;2097:9;2092:192;2116:1;2112;:5;2092:192;;;2169:10;2180:1;2169:13;;;;;;;;:::i;:::-;;;;;;;:19;;;2150:38;;:9;:15;;;:38;;;2146:120;;2223:20;;;;;;;;;;;;;;2146:120;2119:3;;2092:192;;;-1:-1:-1;2363:18:33;;2395:310;2419:13;2415:1;:17;2395:310;;;2453:25;2481:5;:13;;;2495:1;2481:16;;;;;;;;:::i;:::-;;;;;;;2453:44;;2535:9;:15;;;2519:31;;:6;:12;;;:31;;;2515:105;;2588:13;;;;2574:27;;;;:::i;:::-;;;2515:105;-1:-1:-1;2669:3:33;;2395:310;;;-1:-1:-1;2801:15:33;;2779:11;;;;:17;2771:45;;;;;;;2767:116;;2850:11;;;;;:18;;2836:32;;;;:::i;:::-;;;2767:116;2901:10;2915:1;2901:15;2897:45;;2925:17;;;;;;;;;;;;;;2897:45;2980:39;:10;903:1;852:6;2980:21;:39::i;:::-;2961:9;:16;;;:58;2957:84;;;3028:13;;;;;;;;;;;;;;2957:84;3087:9;3055:10;3066:17;3082:1;3066:13;:17;:::i;:::-;3055:29;;;;;;;;:::i;:::-;;;;;;;;;;:41;-1:-1:-1;;3139:3:33;;1913:1254;;;-1:-1:-1;3177:13:33;;;;:26;;;;-1:-1:-1;;;1225:1985:33:o;433:485:52:-;556:18;;:26;531:52;;539:4;531:52;527:106;;606:16;;;;;;;;;;;;;;527:106;665:18;;:27;;;647:15;:45;643:99;;;715:16;;;;;;;;;;;;;;643:99;764:18;;:37;;;756:60;;;752:160;;832:18;;:37;;;:69;;;;;:46;;;;;;;:69;;879:6;;832:13;;:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1996:375:55;2112:7;2093:53;;;2160:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:303:51;;;624:149;;;;;693:11;;;;;;:17;624:149;;561:303;;;;624:149;;;737:11;;:21;;;624:149;;;;561:303;;794:10;;:16;;;561:303;;;;;;;834:10;;:19;;;;561:303;;;;;401:470;2160:16:55;-1:-1:-1;;;;;;;;;;;;;;;;;1123:90:51;;;;;;;;;;;;;1193:11;;;;:18;;;1123:90;;;;2229:5:55;:10;;;:18;;;2261:5;:10;;;2029:36:46;;;;;;;;;;;;;;;;;1178:360;;;17012:27:100;1178:360:46;;;17000:40:100;17070:17;17056:12;;;17049:39;17118:20;17104:12;;;17097:42;17169:18;17155:12;;;17148:40;17218:26;17204:12;;;17197:48;17275:33;17261:12;;;17254:55;17340:21;17325:13;;;17318:44;17393:27;17378:13;;;17371:50;17452:25;17437:13;;;17430:48;17509:24;17494:13;;;17487:47;1178:360:46;;;;;;;;;2125:28;;;;;;;17550:13:100;;;2125:28:46;;;17550:13:100;2125:28:46;;;;;2167:41;;;;;;;;;;;;;;;;;1950:268;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2345:9:55;;;;2093:271;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:1145:53;4306:9;4283:20;4329:696;4353:6;:13;4349:1;:17;4329:696;;;4391:26;4420:6;4427:1;4420:9;;;;;;;;:::i;:::-;;;;;;;4391:38;;4452:9;4447:564;4471:5;:13;;;:20;4467:1;:24;4447:564;;;4520:25;4548:5;:13;;;4562:1;4548:16;;;;;;;;:::i;:::-;;;;;;;4520:44;;4586:99;4624:6;:16;;;4642:6;:13;;;4676:7;4586:6;:12;;;:37;;;;:99;;;;;;:::i;:::-;4712:12;;:21;;4708:285;;4783:6;:13;;;4767:12;:29;4763:208;;4844:6;:13;;;4828:29;;;;4763:208;;;4927:17;;;;;;;;;;;;;;4763:208;-1:-1:-1;4493:3:53;;4447:564;;;-1:-1:-1;;4368:3:53;;4329:696;;;-1:-1:-1;5097:16:53;;5093:96;;5133:41;375:42:43;5149:10:53;5161:12;5133:15;:41::i;548:2903:48:-;655:41;1050:19;1092:9;1087:116;1111:6;:13;1107:1;:17;1087:116;;;1164:6;1171:1;1164:9;;;;;;;;:::i;:::-;;;;;;;:17;;;:24;1149:39;;;;1126:3;;;;;;;1087:116;;;;1257:11;1235:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;1235:34:48;;;;;;;;;;;;;;;1216:53;;1026:254;1290:21;1493:9;1488:1545;1512:6;:13;1508:1;:17;1488:1545;;;1542:26;1571:6;1578:1;1571:9;;;;;;;;:::i;:::-;;;;;;;1542:38;;1600:9;1595:1369;1619:5;:13;;;:20;1615:1;:24;1595:1369;;;1660:25;1688:5;:13;;;1702:1;1688:16;;;;;;;;:::i;:::-;;;;;;;1660:44;;1860:10;1901:9;1896:500;1920:13;1916:1;:17;1896:500;;;1958:37;1998:16;2015:1;1998:19;;;;;;;;:::i;:::-;;;;;;;1958:59;;2071:6;:16;;;2043:44;;:14;:24;;;:44;;;:84;;;;;2115:6;:12;;;2091:36;;:14;:20;;;:36;;;2043:84;2039:255;;;2163:4;2155:12;;2227:6;:13;;;2193:14;:30;;:47;;;;;;;:::i;:::-;;;-1:-1:-1;2266:5:48;;-1:-1:-1;2266:5:48;2039:255;-1:-1:-1;2352:3:48;;1896:500;;;;2419:5;2414:465;;2489:16;;;;2466:12;;2448:15;;2466:40;;:22;;;;:40::i;:::-;2448:58;;2562:203;;;;;;;;2615:6;:16;;;2562:203;;;;;;2664:6;:12;;;2562:203;;;;;;2729:6;:13;;;2719:7;:23;;;;:::i;:::-;2562:203;;;2528:16;2545:13;2528:31;;;;;;;;:::i;:::-;;;;;;;;;;:237;-1:-1:-1;2823:15:48;;;;;2414:465;-1:-1:-1;;2928:3:48;;1595:1369;;;-1:-1:-1;;3005:3:48;;1488:1545;;;-1:-1:-1;3396:39:48;;3403:16;548:2903;-1:-1:-1;548:2903:48:o;3513:442::-;3600:9;3595:354;3619:16;:23;3615:1;:27;3595:354;;;3663:31;3697:16;3714:1;3697:19;;;;;;;;:::i;:::-;;;;;;;3663:53;;3730:15;3748:44;3773:8;:18;;;3748:8;:14;;;:24;;;;:44;;;;:::i;:::-;3730:62;;3820:8;:24;;;3810:7;:34;3806:133;;;3890:7;3899:8;:24;;;3871:53;;;;;;;;;;;24487:25:100;;;24543:2;24528:18;;24521:34;24475:2;24460:18;;24313:248;3806:133:48;3649:300;;3644:3;;;;;:::i;:::-;;;;3595:354;;903:920:44;1041:21;1092:9;1082:7;:19;1078:739;;;1124:24;;;;;;;;;;;;;;1078:739;1180:15;1169:7;:26;1165:652;;-1:-1:-1;1227:9:44;1165:652;;;1270:15;1257:9;:28;1253:564;;-1:-1:-1;1317:11:44;1253:564;;;1405:15;:27;;;1469:19;;;1510:23;;;1506:287;;;1587:55;1588:23;;;1624:7;1633:8;1587:36;:55::i;:::-;1573:11;:69;1557:85;;1506:287;;;1719:55;1720:23;;;1756:7;1765:8;1719:36;:55::i;:::-;1705:11;:69;1689:85;;1506:287;1359:448;;1253:564;903:920;;;;;;:::o;2089:454::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;2280:6:44;:16;;;2259:6;:18;;;:37;2255:93;;;2319:18;;;;;;;;;;;;;;2255:93;2358:21;2382:77;2402:6;:18;;;2422:6;:16;;;2440:9;2451:7;2382:19;:77::i;:::-;2358:101;;2478:58;;;;;;;;2490:6;:12;;;2478:58;;;;;;2504:13;2478:58;;;;2519:6;:16;;;2478:58;;;;;2469:67;;2245:298;2089:454;;;;;:::o;464:396:50:-;524:7;441:15;;;;;;;;;;;;;;;;;431:26;;;;;;;639:12;;669;;;;699:10;;;;;727:13;;;;758:23;;;;809:19;;;;799:30;;;;;;573:270;;;;699:10;;727:13;;758:23;;799:30;573:270;24928:25:100;;;24972:42;25050:15;;;25045:2;25030:18;;25023:43;25102:15;;;25097:2;25082:18;;25075:43;25149:2;25134:18;;25127:34;;;;25192:3;25177:19;;25170:35;25242:15;;;25236:3;25221:19;;25214:44;25289:3;25274:19;;25267:35;24915:3;24900:19;;24566:742;2855:487:45;2922:7;2965:25;3008:7;:14;3003:2;:19;2993:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2993:30:45;;2965:58;;3043:9;3038:243;3062:7;:14;3058:1;:18;3038:243;;;3101:18;3122:16;3127:7;3135:1;3127:10;;;;;;;;:::i;:::-;;;;;;;3122:4;:16::i;:::-;3230:4;3223:12;;;3194:42;;;3187:62;-1:-1:-1;3078:3:45;;3038:243;;;-1:-1:-1;3302:23:45;;;;;;;;2855:487;-1:-1:-1;;2855:487:45:o;2213:221:47:-;2309:9;2337:23;;;;;:63;;;2382:18;2364:15;:36;2337:63;:90;;;-1:-1:-1;2404:23:47;;;2417:10;2404:23;2337:90;2330:97;;2213:221;;;;;:::o;1507:535:29:-;1713:9;;;1844:19;;1837:27;1869:9;;1883;;;1880:16;;1866:31;1833:65;1823:121;;1928:1;1925;1918:12;1823:121;2007:19;;1507:535;-1:-1:-1;;1507:535:29:o;2253:492:43:-;2973:18;;;2399:340;;2453:6;2441:9;:18;2437:57;;;2468:26;;;;;;;;;;;;;;2437:57;2509:12;2526:9;:14;;2548:6;2526:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2508:51;;;2578:7;2573:43;;2594:22;;;;;;;;;;;;;;2573:43;2423:204;2399:340;;;2647:7;:20;;;2668:10;2680:9;2691:26;2710:6;2691:18;:26::i;:::-;2647:81;;;;;;;;;;25764:42:100;25833:15;;;2647:81:43;;;25815:34:100;25885:15;;;25865:18;;;25858:43;25937:15;;25917:18;;;25910:43;25989:15;;;25969:18;;;25962:43;25726:19;;2647:81:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2253:492;;;;:::o;1437:331::-;2973:18;;;1527:235;;1566:12;1583:9;:14;;1605:6;1583:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1565:51;;;1635:7;1630:43;;1651:22;;;;;;;;;;;;;;1527:235;1704:47;:28;;;1733:9;1744:6;1704:28;:47::i;:::-;1437:331;;;:::o;973:250::-;1047:15;2973:18;;;1074:143;;-1:-1:-1;1122:12:43;;;;1074:143;;;1175:31;;;;;:25;1765:55:100;;;1175:31:43;;;1747:74:100;1175:25:43;;;;;1720:18:100;;1175:31:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2615:234:45:-;2679:7;1701:17;;;;;;;;;;;;;;;;;1691:28;;;;;;;2763:12;;2777:18;;;;2797:16;;;;;2815;;;;2728:104;;;;2797:16;;2815;2728:104;26464:25:100;;;26508:42;26586:15;;;26581:2;26566:18;;26559:43;26633:2;26618:18;;26611:34;;;;26676:2;26661:18;;26654:34;26725:15;26719:3;26704:19;;26697:44;26451:3;26436:19;;26205:542;7004:192:23;7061:7;7097:17;7088:26;;;7080:78;;;;;;;26954:2:100;7080:78:23;;;26936:21:100;26993:2;26973:18;;;26966:30;27032:34;27012:18;;;27005:62;27103:9;27083:18;;;27076:37;27130:19;;7080:78:23;26752:403:100;7080:78:23;-1:-1:-1;7183:5:23;7004:192::o;2864:1456:30:-;2976:12;3103:4;3097:11;3245:66;3226:17;3219:93;3359:2;3355:1;3336:17;3332:25;3325:37;3439:6;3434:2;3415:17;3411:26;3404:42;4241:2;4238:1;4234:2;4215:17;4212:1;4205:5;4198;4193:51;3762:16;3755:24;3749:2;3731:16;3728:24;3724:1;3720;3714:8;3711:15;3707:46;3704:76;3504:754;3493:765;;;4286:7;4278:35;;;;;;;27362:2:100;4278:35:30;;;27344:21:100;27401:2;27381:18;;;27374:30;27440:17;27420:18;;;27413:45;27475:18;;4278:35:30;27160:339:100;14:172;118:42;111:5;107:54;100:5;97:65;87:93;;176:1;173;166:12;191:170;277:20;;306:49;277:20;306:49;:::i;:::-;191:170;;;:::o;366:347::-;417:8;427:6;481:3;474:4;466:6;462:17;458:27;448:55;;499:1;496;489:12;448:55;-1:-1:-1;522:20:100;;565:18;554:30;;551:50;;;597:1;594;587:12;551:50;634:4;626:6;622:17;610:29;;686:3;679:4;670:6;662;658:19;654:30;651:39;648:59;;;703:1;700;693:12;648:59;366:347;;;;;:::o;718:878::-;864:6;872;880;888;941:2;929:9;920:7;916:23;912:32;909:52;;;957:1;954;947:12;909:52;997:9;984:23;1026:18;1067:2;1059:6;1056:14;1053:34;;;1083:1;1080;1073:12;1053:34;1106:22;;;;1162:2;1144:16;;;1140:25;1137:45;;;1178:1;1175;1168:12;1137:45;1201:2;;-1:-1:-1;1253:2:100;1238:18;;1225:32;;1266:49;1225:32;1266:49;:::i;:::-;1334:5;;-1:-1:-1;1392:2:100;1377:18;;1364:32;;1408:16;;;1405:36;;;1437:1;1434;1427:12;1405:36;;1476:60;1528:7;1517:8;1506:9;1502:24;1476:60;:::i;:::-;718:878;;;;-1:-1:-1;1555:8:100;-1:-1:-1;;;;718:878:100:o;1832:265::-;1891:6;1944:2;1932:9;1923:7;1919:23;1915:32;1912:52;;;1960:1;1957;1950:12;1912:52;1999:9;1986:23;2018:49;2061:5;2018:49;:::i;:::-;2086:5;1832:265;-1:-1:-1;;;1832:265:100:o;2365:1058::-;2538:6;2546;2554;2562;2570;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2679:9;2666:23;2708:18;2749:2;2741:6;2738:14;2735:34;;;2765:1;2762;2755:12;2735:34;2803:6;2792:9;2788:22;2778:32;;2848:7;2841:4;2837:2;2833:13;2829:27;2819:55;;2870:1;2867;2860:12;2819:55;2910:2;2897:16;2936:2;2928:6;2925:14;2922:34;;;2952:1;2949;2942:12;2922:34;3007:7;3000:4;2990:6;2987:1;2983:14;2979:2;2975:23;2971:34;2968:47;2965:67;;;3028:1;3025;3018:12;2965:67;3059:4;3055:2;3051:13;3041:23;;3083:6;3073:16;;;3108:58;3160:4;3149:9;3145:20;3108:58;:::i;:::-;3098:68;;3219:2;3208:9;3204:18;3191:32;3175:48;;3248:2;3238:8;3235:16;3232:36;;;3264:1;3261;3254:12;3232:36;;3303:60;3355:7;3344:8;3333:9;3329:24;3303:60;:::i;:::-;2365:1058;;;;-1:-1:-1;2365:1058:100;;-1:-1:-1;3382:8:100;;3277:86;2365:1058;-1:-1:-1;;;2365:1058:100:o;3428:184::-;3480:77;3477:1;3470:88;3577:4;3574:1;3567:15;3601:4;3598:1;3591:15;3617:184;3669:77;3666:1;3659:88;3766:4;3763:1;3756:15;3790:4;3787:1;3780:15;4147:388;4245:4;4303:11;4290:25;4393:66;4382:8;4366:14;4362:29;4358:102;4338:18;4334:127;4324:155;;4475:1;4472;4465:12;4324:155;4496:33;;;;;4147:388;-1:-1:-1;;4147:388:100:o;4900:580::-;4977:4;4983:6;5043:11;5030:25;5133:66;5122:8;5106:14;5102:29;5098:102;5078:18;5074:127;5064:155;;5215:1;5212;5205:12;5064:155;5242:33;;5294:20;;;-1:-1:-1;5337:18:100;5326:30;;5323:50;;;5369:1;5366;5359:12;5323:50;5402:4;5390:17;;-1:-1:-1;5433:14:100;5429:27;;;5419:38;;5416:58;;;5470:1;5467;5460:12;5485:253;5557:2;5551:9;5599:4;5587:17;;5634:18;5619:34;;5655:22;;;5616:62;5613:88;;;5681:18;;:::i;:::-;5717:2;5710:22;5485:253;:::o;5743:::-;5815:2;5809:9;5857:4;5845:17;;5892:18;5877:34;;5913:22;;;5874:62;5871:88;;;5939:18;;:::i;6001:253::-;6073:2;6067:9;6115:4;6103:17;;6150:18;6135:34;;6171:22;;;6132:62;6129:88;;;6197:18;;:::i;6259:334::-;6330:2;6324:9;6386:2;6376:13;;6391:66;6372:86;6360:99;;6489:18;6474:34;;6510:22;;;6471:62;6468:88;;;6536:18;;:::i;:::-;6572:2;6565:22;6259:334;;-1:-1:-1;6259:334:100:o;6598:589::-;6640:5;6693:3;6686:4;6678:6;6674:17;6670:27;6660:55;;6711:1;6708;6701:12;6660:55;6747:6;6734:20;6773:18;6769:2;6766:26;6763:52;;;6795:18;;:::i;:::-;6839:114;6947:4;6878:66;6871:4;6867:2;6863:13;6859:86;6855:97;6839:114;:::i;:::-;6978:2;6969:7;6962:19;7024:3;7017:4;7012:2;7004:6;7000:15;6996:26;6993:35;6990:55;;;7041:1;7038;7031:12;6990:55;7106:2;7099:4;7091:6;7087:17;7080:4;7071:7;7067:18;7054:55;7154:1;7129:16;;;7147:4;7125:27;7118:38;;;;7133:7;6598:589;-1:-1:-1;;;6598:589:100:o;7192:1147::-;7248:5;7296:4;7284:9;7279:3;7275:19;7271:30;7268:50;;;7314:1;7311;7304:12;7268:50;7347:2;7341:9;7389:4;7381:6;7377:17;7413:18;7481:6;7469:10;7466:22;7461:2;7449:10;7446:18;7443:46;7440:72;;;7492:18;;:::i;:::-;7532:10;7528:2;7521:22;7561:6;7552:15;;7604:9;7591:23;7576:38;;7623:51;7666:7;7623:51;:::i;:::-;7683:23;;;7758:2;7743:18;;7730:32;;7771:51;7730:32;7771:51;:::i;:::-;7855:7;7850:2;7842:6;7838:15;7831:32;7924:2;7913:9;7909:18;7896:32;7891:2;7883:6;7879:15;7872:57;7990:2;7979:9;7975:18;7962:32;7957:2;7949:6;7945:15;7938:57;8047:3;8036:9;8032:19;8019:33;8004:48;;8061:51;8104:7;8061:51;:::i;:::-;8146:7;8140:3;8132:6;8128:16;8121:33;8205:3;8194:9;8190:19;8177:33;8163:47;;8233:2;8225:6;8222:14;8219:34;;;8249:1;8246;8239:12;8219:34;;8287:45;8328:3;8319:6;8308:9;8304:22;8287:45;:::i;:::-;8281:3;8273:6;8269:16;8262:71;;;7192:1147;;;;:::o;8344:441::-;8401:5;8449:4;8437:9;8432:3;8428:19;8424:30;8421:50;;;8467:1;8464;8457:12;8421:50;8489:22;;:::i;:::-;8480:31;;8548:9;8535:23;8567:51;8610:7;8567:51;:::i;:::-;8641:7;8634:5;8627:22;;8709:2;8698:9;8694:18;8681:32;8676:2;8669:5;8665:14;8658:56;8774:2;8763:9;8759:18;8746:32;8741:2;8734:5;8730:14;8723:56;8344:441;;;;:::o;8790:194::-;8861:4;8894:18;8886:6;8883:30;8880:56;;;8916:18;;:::i;:::-;-1:-1:-1;8961:1:100;8957:14;8973:4;8953:25;;8790:194::o;8989:1331::-;9054:5;9107:3;9100:4;9092:6;9088:17;9084:27;9074:55;;9125:1;9122;9115:12;9074:55;9161:6;9148:20;9187:4;9211:71;9227:54;9278:2;9227:54;:::i;:::-;9211:71;:::i;:::-;9316:15;;;9402:1;9398:10;;;;9386:23;;9382:32;;;9347:12;;;;9426:15;;;9423:35;;;9454:1;9451;9444:12;9423:35;9490:2;9482:6;9478:15;9502:789;9518:6;9513:3;9510:15;9502:789;;;9596:4;9590:3;9585;9581:13;9577:24;9574:114;;;9642:1;9671:2;9667;9660:14;9574:114;9714:22;;:::i;:::-;9777:3;9764:17;9794:51;9837:7;9794:51;:::i;:::-;9858:22;;9929:12;;;9916:26;9900:14;;;9893:50;9966:2;10017:12;;;10004:26;9988:14;;;9981:50;10054:2;10097:12;;;10084:26;10123:51;10084:26;10123:51;:::i;:::-;10194:14;;;10187:31;10231:18;;10269:12;;;;9544:4;9535:14;9502:789;;;-1:-1:-1;10309:5:100;8989:1331;-1:-1:-1;;;;;;8989:1331:100:o;10325:1180::-;10427:6;10480:2;10468:9;10459:7;10455:23;10451:32;10448:52;;;10496:1;10493;10486:12;10448:52;10536:9;10523:23;10565:18;10606:2;10598:6;10595:14;10592:34;;;10622:1;10619;10612:12;10592:34;10645:22;;;;10701:6;10683:16;;;10679:29;10676:49;;;10721:1;10718;10711:12;10676:49;10747:22;;:::i;:::-;10807:2;10794:16;10835:2;10825:8;10822:16;10819:36;;;10851:1;10848;10841:12;10819:36;10878:55;10925:7;10914:8;10910:2;10906:17;10878:55;:::i;:::-;10871:5;10864:70;;10987:2;10983;10979:11;10966:25;10961:2;10954:5;10950:14;10943:49;11045:2;11041;11037:11;11024:25;11019:2;11012:5;11008:14;11001:49;11082;11127:2;11123;11119:11;11082:49;:::i;:::-;11077:2;11070:5;11066:14;11059:73;11186:3;11182:2;11178:12;11165:26;11159:3;11152:5;11148:15;11141:51;11225;11268:7;11262:3;11258:2;11254:12;11225:51;:::i;:::-;11219:3;11212:5;11208:15;11201:76;11323:3;11319:2;11315:12;11302:26;11353:2;11343:8;11340:16;11337:36;;;11369:1;11366;11359:12;11337:36;11407:67;11466:7;11455:8;11451:2;11447:17;11407:67;:::i;:::-;11400:4;11389:16;;11382:93;-1:-1:-1;11393:5:100;10325:1180;-1:-1:-1;;;;;10325:1180:100:o;11692:250::-;11777:1;11787:113;11801:6;11798:1;11795:13;11787:113;;;11877:11;;;11871:18;11858:11;;;11851:39;11823:2;11816:10;11787:113;;;-1:-1:-1;;11934:1:100;11916:16;;11909:27;11692:250::o;11947:329::-;11988:3;12026:5;12020:12;12053:6;12048:3;12041:19;12069:76;12138:6;12131:4;12126:3;12122:14;12115:4;12108:5;12104:16;12069:76;:::i;:::-;12190:2;12178:15;12195:66;12174:88;12165:98;;;;12265:4;12161:109;;11947:329;-1:-1:-1;;11947:329:100:o;12542:696::-;12606:3;12644:5;12638:12;12671:6;12666:3;12659:19;12697:4;12726:2;12721:3;12717:12;12710:19;;12763:2;12756:5;12752:14;12784:1;12794:419;12808:6;12805:1;12802:13;12794:419;;;12867:13;;12974:9;;12903:42;12970:18;;;12958:31;;13029:11;;;13023:18;13009:12;;;13002:40;13065:4;13113:11;;;13107:18;13103:27;13089:12;;;13082:49;13160:4;13151:14;;;;13188:15;;;;12830:1;12823:9;12794:419;;;-1:-1:-1;13229:3:100;;12542:696;-1:-1:-1;;;;;12542:696:100:o;13243:1240::-;13299:3;13343:5;13337:12;13370:4;13365:3;13358:17;13394:42;13493:2;13478:12;13472:19;13468:28;13461:4;13456:3;13452:14;13445:52;13564:2;13556:4;13542:12;13538:23;13532:30;13528:39;13522:3;13517;13513:13;13506:62;13623:4;13609:12;13605:23;13599:30;13593:3;13588;13584:13;13577:53;13685:4;13671:12;13667:23;13661:30;13655:3;13650;13646:13;13639:53;13759:2;13751:4;13737:12;13733:23;13727:30;13723:39;13717:3;13712;13708:13;13701:62;;13818:4;13804:12;13800:23;13794:30;13772:52;;13855:4;13849:3;13844;13840:13;13833:27;13882:47;13924:3;13919;13915:13;13899:14;13882:47;:::i;:::-;13869:60;;13977:4;13970:5;13966:16;13960:23;13992:60;14046:4;14041:3;14037:14;14021;12361:12;;12375:42;12357:61;12345:74;;12468:4;12457:16;;;12451:23;12435:14;;;12428:47;12524:4;12513:16;;;12507:23;12491:14;;12484:47;12281:256;13992:60;;14100:4;14093:5;14089:16;14083:23;14149:3;14142:5;14138:15;14131:4;14126:3;14122:14;14115:39;14175:62;14231:5;14215:14;14175:62;:::i;:::-;14163:74;;;14285:4;14278:5;14274:16;14268:23;14333:3;14327:4;14323:14;14316:4;14311:3;14307:14;14300:38;14361;14394:4;14378:14;14361:38;:::i;:::-;14347:52;;;14448:4;14441:5;14437:16;14431:23;14424:4;14419:3;14415:14;14408:47;14471:6;14464:13;;;13243:1240;;;;:::o;14488:1396::-;14778:4;14826:2;14815:9;14811:18;14856:2;14845:9;14838:21;14879:6;14914;14908:13;14945:6;14937;14930:22;14983:3;14972:9;14968:19;14961:26;;15046:3;15036:6;15033:1;15029:14;15018:9;15014:30;15010:40;14996:54;;15069:4;15108:2;15100:6;15096:15;15129:1;15139:328;15153:6;15150:1;15147:13;15139:328;;;15242:66;15230:9;15222:6;15218:22;15214:95;15209:3;15202:108;15333:54;15380:6;15371;15365:13;15333:54;:::i;:::-;15323:64;-1:-1:-1;15445:12:100;;;;15410:15;;;;15175:1;15168:9;15139:328;;;15143:3;;15515:42;15507:6;15503:55;15498:2;15487:9;15483:18;15476:83;15607:9;15599:6;15595:22;15590:2;15579:9;15575:18;15568:50;15642:6;15634;15627:22;15696:6;15688;15683:2;15675:6;15671:15;15658:45;15749:1;15723:19;;;15719:28;;15712:39;15800:2;15788:15;;;15805:66;15784:88;15772:101;;;15768:110;;;;14488:1396;-1:-1:-1;;;;;;;14488:1396:100:o;17574:697::-;17795:3;17833:6;17827:13;17849:66;17908:6;17903:3;17896:4;17888:6;17884:17;17849:66;:::i;:::-;17978:13;;17937:16;;;;18000:70;17978:13;17937:16;18047:4;18035:17;;18000:70;:::i;:::-;18137:13;;18092:20;;;18159:70;18137:13;18092:20;18206:4;18194:17;;18159:70;:::i;:::-;18245:20;;17574:697;-1:-1:-1;;;;;17574:697:100:o;19198:184::-;19250:77;19247:1;19240:88;19347:4;19344:1;19337:15;19371:4;19368:1;19361:15;19387:125;19452:9;;;19473:10;;;19470:36;;;19486:18;;:::i;19517:195::-;19556:3;19587:66;19580:5;19577:77;19574:103;;19657:18;;:::i;:::-;-1:-1:-1;19704:1:100;19693:13;;19517:195::o;19717:278::-;19910:2;19899:9;19892:21;19873:4;19930:59;19985:2;19974:9;19970:18;19962:6;19930:59;:::i;20000:1491::-;20125:6;20156:2;20199;20187:9;20178:7;20174:23;20170:32;20167:52;;;20215:1;20212;20205:12;20167:52;20248:9;20242:16;20281:18;20273:6;20270:30;20267:50;;;20313:1;20310;20303:12;20267:50;20336:22;;20389:4;20381:13;;20377:27;-1:-1:-1;20367:55:100;;20418:1;20415;20408:12;20367:55;20447:2;20441:9;20470:71;20486:54;20537:2;20486:54;:::i;20470:71::-;20575:15;;;20637:4;20676:11;;;20668:20;;20664:29;;;20606:12;;;;20563:3;20705:19;;;20702:39;;;20737:1;20734;20727:12;20702:39;20761:11;;;;20781:680;20797:6;20792:3;20789:15;20781:680;;;20877:2;20871:3;20862:7;20858:17;20854:26;20851:116;;;20921:1;20950:2;20946;20939:14;20851:116;20993:22;;:::i;:::-;21049:3;21043:10;21066:51;21109:7;21066:51;:::i;:::-;21130:22;;21194:12;;;21188:19;21172:14;;;21165:43;21231:2;21267:12;;;21261:19;21293:51;21261:19;21293:51;:::i;:::-;21364:14;;;21357:31;21401:18;;20814:12;;;;21439;;;;20781:680;;;-1:-1:-1;21480:5:100;20000:1491;-1:-1:-1;;;;;;;20000:1491:100:o;21496:398::-;21729:42;21721:6;21717:55;21706:9;21699:74;21809:2;21804;21793:9;21789:18;21782:30;21680:4;21829:59;21884:2;21873:9;21869:18;21861:6;21829:59;:::i;21899:1105::-;22299:34;22294:3;22287:47;22364:3;22359:2;22354:3;22350:12;22343:25;22269:3;22397:6;22391:13;22413:73;22479:6;22474:2;22469:3;22465:12;22460:2;22452:6;22448:15;22413:73;:::i;:::-;22546:13;;22505:16;;;;22568:74;22546:13;22628:2;22620:11;;22615:2;22603:15;;22568:74;:::i;:::-;22703:13;;22661:17;;;22725:74;22703:13;22785:2;22777:11;;22772:2;22760:15;;22725:74;:::i;:::-;22860:13;;22818:17;;;22882:74;22860:13;22942:2;22934:11;;22929:2;22917:15;;22882:74;:::i;:::-;22976:17;22995:2;22972:26;;21899:1105;-1:-1:-1;;;;;;21899:1105:100:o;23220:1088::-;23650:4;23679:3;23691:60;23741:9;23732:6;23726:13;23095:12;;23109:42;23091:61;23079:74;;23202:4;23191:16;;;23185:23;23169:14;;23162:47;23009:206;23691:60;23807:4;23799:6;23795:17;23789:24;23782:4;23771:9;23767:20;23760:54;23870:4;23862:6;23858:17;23852:24;23845:4;23834:9;23830:20;23823:54;23886:63;23944:3;23933:9;23929:19;23921:6;23095:12;;23109:42;23091:61;23079:74;;23202:4;23191:16;;;23185:23;23169:14;;23162:47;23009:206;23886:63;23998:42;23990:6;23986:55;23980:3;23969:9;23965:19;23958:84;24079:6;24073:3;24062:9;24058:19;24051:35;24123:2;24117:3;24106:9;24102:19;24095:31;24149:44;24189:2;24178:9;24174:18;24166:6;24149:44;:::i;:::-;24135:58;;24242:9;24234:6;24230:22;24224:3;24213:9;24209:19;24202:51;24270:32;24295:6;24287;24270:32;:::i;:::-;24262:40;23220:1088;-1:-1:-1;;;;;;;;;23220:1088:100:o;26016:184::-;26086:6;26139:2;26127:9;26118:7;26114:23;26110:32;26107:52;;;26155:1;26152;26145:12;26107:52;-1:-1:-1;26178:16:100;;26016:184;-1:-1:-1;26016:184:100:o",
    "linkReferences": {},
    "immutableReferences": {
      "31936": [
        {
          "start": 167,
          "length": 32
        },
        {
          "start": 5413,
          "length": 32
        },
        {
          "start": 6434,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DIRECT_FILL()": "fccbcaaf",
    "execute((bytes,bytes),address,bytes)": "05afc977",
    "executeBatch((bytes,bytes)[],address,bytes)": "6f1d5f51",
    "feeController()": "6999b377",
    "owner()": "8da5cb5b",
    "permit2()": "12261ee7",
    "setOwner(address)": "13af4035",
    "setProtocolFeeController(address)": "2d771389"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_permit2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeadlineBeforeEndTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DuplicateFeeOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EndTimeBeforeStartTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EndTimeBeforeStartTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAndOutputDecay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientEth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actualBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedBalance\",\"type\":\"uint256\"}],\"name\":\"InsufficientOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoExclusiveOverride\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughETHDirectFiller\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Fill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DIRECT_FILL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"contract IReactorCallback\",\"name\":\"fillContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"fillData\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IReactorCallback\",\"name\":\"fillContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"fillData\",\"type\":\"bytes\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeController\",\"outputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeController\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Fill(bytes32,address,address,uint256)\":{\"params\":{\"filler\":\"The address which executed the fill\",\"nonce\":\"The nonce of the filled order\",\"orderHash\":\"The hash of the order that was filled\",\"swapper\":\"The swapper of the filled order\"}}},\"kind\":\"dev\",\"methods\":{\"execute((bytes,bytes),address,bytes)\":{\"params\":{\"fillContract\":\"The contract which will fill the order\",\"fillData\":\"The fillData to pass to the fillContract callback\",\"order\":\"The order definition and valid signature to execute\"}},\"executeBatch((bytes,bytes)[],address,bytes)\":{\"params\":{\"fillContract\":\"The contract which will fill the order\",\"fillData\":\"The fillData to pass to the fillContract callback\",\"orders\":\"The order definitions and valid signatures to execute\"}},\"setProtocolFeeController(address)\":{\"details\":\"only callable by the owner\",\"params\":{\"_feeController\":\"the new fee controller\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"NativeTransferFailed()\":[{\"notice\":\"Thrown when a native transfer fails\"}]},\"events\":{\"Fill(bytes32,address,address,uint256)\":{\"notice\":\"emitted when an order is filled\"}},\"kind\":\"user\",\"methods\":{\"execute((bytes,bytes),address,bytes)\":{\"notice\":\"Execute a single order using the given fill specification\"},\"executeBatch((bytes,bytes)[],address,bytes)\":{\"notice\":\"Execute the given orders at once with the specified fill specification\"},\"setProtocolFeeController(address)\":{\"notice\":\"sets the protocol fee controller\"}},\"notice\":\"Reactor for exclusive dutch limit orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/reactors/ExclusiveDutchLimitOrderReactor.sol\":\"ExclusiveDutchLimitOrderReactor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x4f2c7c1826779a4f444e5b36553102e4cff85ddb7d1ff65c15a6d6e978dcc8c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa48b04a7f9b986687fc4e6984db2fd5760b5827d537c019d351b95414f8394e\",\"dweb:/ipfs/QmeDbBY8M8dgeornLuB8m99gu915mRTZQ1Ggenio9BRHf2\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972\",\"dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0x27255bf4fd142ba38ca6c9d5ef53ea50b8c91bf4fc51c4b14fe7b837d037619d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0a96479450525a0ab28deedcf18afe6ab9579fe1a4059a6e3d5d1b859132f84b\",\"dweb:/ipfs/QmZdofDthhjzyT7sLy2epjBCeeDny1qaKJPQewdCPyrFVn\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd\",\"dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/base/ProtocolFees.sol\":{\"keccak256\":\"0xbf7b87a78a68814eb18f19c7355d4aee43c42572c7952b3372031107cdf8d327\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4cc3b26dcb9cc905af155cdc14e8d61a2946bcead9624ad8f65f0e508a0240a3\",\"dweb:/ipfs/QmdLJSe1qhBhu1nzUS3KBZMY9UbyqutuYGqUT1dyzhTW8y\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541\",\"dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0xa0b7346c8b4ea54153beb89f56e018bee28987f9e1cfca42c94fd8b06aa448f3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://439ce2d58b44684ce406a6fbda3cb029f93d9e08543ef38f03807e0749e5f546\",\"dweb:/ipfs/QmT1dQMsViyh2HYiUSD2jidpY6VHTKiQbjht5txkvz37xS\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xbf03d767ae7ab46fc07254f47f09e8c27bf7f028b209e786eec259d746761d79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d85f1cee66c5881edff597871ebf6236eacd90241d16c1f718cbc2d7636de884\",\"dweb:/ipfs/QmUwQAqeeZgvbsfJJMmPsbybEC5CUw4uCKqaW7P4hQtrbu\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5\",\"dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b\",\"dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0x211d20c3094670fab45f32dc23bd38eafbb25406dc7d919c90fb84bf73ff928c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d2dbdfd043edbfafca499176c001311da64edcb3f61b06d1712b2c349598044\",\"dweb:/ipfs/QmT4HBxCk28cfH9gzuFR9ARW8zEFtN9H1YZ4aX7pcwRR14\"]},\"src/lib/DutchDecayLib.sol\":{\"keccak256\":\"0x255bebec2c6a37f536575d483d92e0c739233c7ba96bd4f3bb8d1370be70c7bd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8cc4f244a9e9c67278b226fef12bc8b23b7ce83bf219843df9a05cf0d737a9d9\",\"dweb:/ipfs/QmNd6dpiiCz3cQq48jj21QapcUaMSS58fpQbxM38phsppi\"]},\"src/lib/DutchLimitOrderLib.sol\":{\"keccak256\":\"0x595355bd400dc3d5def009d9e1e94b1712dfd30ba0949fd4bf04997dc2d22605\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://88629254bd0be21271de6f7a3e127f48ecebaa233faa0141eeda6d1c5cbfde1a\",\"dweb:/ipfs/QmfQCjX86aske23gL88FSA6aKs5HPj3rNzuadgZf2EBPKW\"]},\"src/lib/ExclusiveDutchLimitOrderLib.sol\":{\"keccak256\":\"0x16cae86d922ab40aac2e2357991f64f2f3075318d1f0fcca2e2da3ea27b54722\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3a05d78a90bb2142c0f860e60c5f23e48c1dc37199dd04992e7ebda78e8e403d\",\"dweb:/ipfs/Qmc1ykfLj2AsD67YepKfS1soJsN3hsHGDvGQpZ5e1hQpp2\"]},\"src/lib/ExclusivityOverrideLib.sol\":{\"keccak256\":\"0x3f697cbec96e8ca2c50f8883964d539f0cb8afbf6c1ef4b5438dbad6e0676647\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5598c26639fe07ed74c684c3c0be16d35fc7eb2a564fa9eed94654c5312300d\",\"dweb:/ipfs/QmaoV3iwKYZCuums54QoydxzRBxzTQdVGfB1o8Um9tmC9c\"]},\"src/lib/ExpectedBalanceLib.sol\":{\"keccak256\":\"0x04b4ccd6b73bf815c1f9c32b3b8c5d1fd089ce35091cc5ed97ae2abe621d8f64\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c784b4d331d35b91bd28be8c75836b5c159cc84f4bb24110a4d92a94ed5dd80f\",\"dweb:/ipfs/QmeN38cSsaaaKQZTtSPQxJMPzXfG6ibDVi7HqZBBpZuxQQ\"]},\"src/lib/OrderInfoLib.sol\":{\"keccak256\":\"0xcf4711d3b88d37c06c6965945c1e0703dd0237af22aeebb25bff667df34d34a5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a431e1699dba41c9b92e6dcd25ca5492fcdc1ab4cf3986c52d286cd870858529\",\"dweb:/ipfs/QmSpN7LCCkQjcJ1hjoBdnN2uBKZw61YDuLzQdDVBgBwckJ\"]},\"src/lib/Permit2Lib.sol\":{\"keccak256\":\"0x87dc4b4f16ac299a100a4178e5e4f2d02848170d5d02dddc29d64ca94e6d79fb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4a9202605548693224f941462fba6d8537a381a0e40df1ea04e990461fb18507\",\"dweb:/ipfs/Qmcoi27HAXxwWhs8mbC4M5oe9TadRMAN38oSNqtnchTrPC\"]},\"src/lib/ResolvedOrderLib.sol\":{\"keccak256\":\"0x484526a9695c67c129f3f6e416a349b3f82c7e9faded71e6e1acda42a76f595f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58733b37a4bf3bbadfb5b4c72121aee20efa8fa760fbe0adb82c55947040a616\",\"dweb:/ipfs/QmXiM6L7fRp4CLdR9yMrusudTTESq7pUKtfGvhMYHU56VJ\"]},\"src/reactors/BaseReactor.sol\":{\"keccak256\":\"0x372fb4a9f87bb981ce91157f92bca3d7e3964f01cac99b88c6a2d163c81f25f9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f55e0fc0ea1ad32b985643d244a4a953b656c26a7a2e50bddb4175b45892fd31\",\"dweb:/ipfs/QmXbNpY6dKJTNmbfMjn6drGQc8FA17tDViUjbvK6Qdw4dR\"]},\"src/reactors/ExclusiveDutchLimitOrderReactor.sol\":{\"keccak256\":\"0x23ed7010886c6ea709ca29c0a474941fa19720e669be2f42e4eba11ae990199a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ddd423f470550fc7ad784b59517a1b92095b5ff2c961ff9a2adca70ea1834e8e\",\"dweb:/ipfs/QmchYHfqS4t2EK2GxYskm3r1CWZmVwxMeE2huDPzAkmWHf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_permit2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineBeforeEndTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DuplicateFeeOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EndTimeBeforeStartTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EndTimeBeforeStartTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FeeTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectAmounts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAndOutputDecay"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientEth"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "actualBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expectedBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidFeeToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidReactor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NativeTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoExclusiveOverride"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughETHDirectFiller"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "swapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Fill",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DIRECT_FILL",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IReactorCallback",
              "name": "fillContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "fillData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IReactorCallback",
              "name": "fillContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "fillData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeController",
          "outputs": [
            {
              "internalType": "contract IProtocolFeeController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFeeController"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execute((bytes,bytes),address,bytes)": {
            "params": {
              "fillContract": "The contract which will fill the order",
              "fillData": "The fillData to pass to the fillContract callback",
              "order": "The order definition and valid signature to execute"
            }
          },
          "executeBatch((bytes,bytes)[],address,bytes)": {
            "params": {
              "fillContract": "The contract which will fill the order",
              "fillData": "The fillData to pass to the fillContract callback",
              "orders": "The order definitions and valid signatures to execute"
            }
          },
          "setProtocolFeeController(address)": {
            "details": "only callable by the owner",
            "params": {
              "_feeController": "the new fee controller"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execute((bytes,bytes),address,bytes)": {
            "notice": "Execute a single order using the given fill specification"
          },
          "executeBatch((bytes,bytes)[],address,bytes)": {
            "notice": "Execute the given orders at once with the specified fill specification"
          },
          "setProtocolFeeController(address)": {
            "notice": "sets the protocol fee controller"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/reactors/ExclusiveDutchLimitOrderReactor.sol": "ExclusiveDutchLimitOrderReactor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x4f2c7c1826779a4f444e5b36553102e4cff85ddb7d1ff65c15a6d6e978dcc8c8",
        "urls": [
          "bzz-raw://aa48b04a7f9b986687fc4e6984db2fd5760b5827d537c019d351b95414f8394e",
          "dweb:/ipfs/QmeDbBY8M8dgeornLuB8m99gu915mRTZQ1Ggenio9BRHf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e",
        "urls": [
          "bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d",
          "dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c",
        "urls": [
          "bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972",
          "dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0x27255bf4fd142ba38ca6c9d5ef53ea50b8c91bf4fc51c4b14fe7b837d037619d",
        "urls": [
          "bzz-raw://0a96479450525a0ab28deedcf18afe6ab9579fe1a4059a6e3d5d1b859132f84b",
          "dweb:/ipfs/QmZdofDthhjzyT7sLy2epjBCeeDny1qaKJPQewdCPyrFVn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169",
        "urls": [
          "bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd",
          "dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ProtocolFees.sol": {
        "keccak256": "0xbf7b87a78a68814eb18f19c7355d4aee43c42572c7952b3372031107cdf8d327",
        "urls": [
          "bzz-raw://4cc3b26dcb9cc905af155cdc14e8d61a2946bcead9624ad8f65f0e508a0240a3",
          "dweb:/ipfs/QmdLJSe1qhBhu1nzUS3KBZMY9UbyqutuYGqUT1dyzhTW8y"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62",
        "urls": [
          "bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541",
          "dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0xa0b7346c8b4ea54153beb89f56e018bee28987f9e1cfca42c94fd8b06aa448f3",
        "urls": [
          "bzz-raw://439ce2d58b44684ce406a6fbda3cb029f93d9e08543ef38f03807e0749e5f546",
          "dweb:/ipfs/QmT1dQMsViyh2HYiUSD2jidpY6VHTKiQbjht5txkvz37xS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0xbf03d767ae7ab46fc07254f47f09e8c27bf7f028b209e786eec259d746761d79",
        "urls": [
          "bzz-raw://d85f1cee66c5881edff597871ebf6236eacd90241d16c1f718cbc2d7636de884",
          "dweb:/ipfs/QmUwQAqeeZgvbsfJJMmPsbybEC5CUw4uCKqaW7P4hQtrbu"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739",
        "urls": [
          "bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5",
          "dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a",
        "urls": [
          "bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b",
          "dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0x211d20c3094670fab45f32dc23bd38eafbb25406dc7d919c90fb84bf73ff928c",
        "urls": [
          "bzz-raw://0d2dbdfd043edbfafca499176c001311da64edcb3f61b06d1712b2c349598044",
          "dweb:/ipfs/QmT4HBxCk28cfH9gzuFR9ARW8zEFtN9H1YZ4aX7pcwRR14"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/DutchDecayLib.sol": {
        "keccak256": "0x255bebec2c6a37f536575d483d92e0c739233c7ba96bd4f3bb8d1370be70c7bd",
        "urls": [
          "bzz-raw://8cc4f244a9e9c67278b226fef12bc8b23b7ce83bf219843df9a05cf0d737a9d9",
          "dweb:/ipfs/QmNd6dpiiCz3cQq48jj21QapcUaMSS58fpQbxM38phsppi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/DutchLimitOrderLib.sol": {
        "keccak256": "0x595355bd400dc3d5def009d9e1e94b1712dfd30ba0949fd4bf04997dc2d22605",
        "urls": [
          "bzz-raw://88629254bd0be21271de6f7a3e127f48ecebaa233faa0141eeda6d1c5cbfde1a",
          "dweb:/ipfs/QmfQCjX86aske23gL88FSA6aKs5HPj3rNzuadgZf2EBPKW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExclusiveDutchLimitOrderLib.sol": {
        "keccak256": "0x16cae86d922ab40aac2e2357991f64f2f3075318d1f0fcca2e2da3ea27b54722",
        "urls": [
          "bzz-raw://3a05d78a90bb2142c0f860e60c5f23e48c1dc37199dd04992e7ebda78e8e403d",
          "dweb:/ipfs/Qmc1ykfLj2AsD67YepKfS1soJsN3hsHGDvGQpZ5e1hQpp2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExclusivityOverrideLib.sol": {
        "keccak256": "0x3f697cbec96e8ca2c50f8883964d539f0cb8afbf6c1ef4b5438dbad6e0676647",
        "urls": [
          "bzz-raw://f5598c26639fe07ed74c684c3c0be16d35fc7eb2a564fa9eed94654c5312300d",
          "dweb:/ipfs/QmaoV3iwKYZCuums54QoydxzRBxzTQdVGfB1o8Um9tmC9c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExpectedBalanceLib.sol": {
        "keccak256": "0x04b4ccd6b73bf815c1f9c32b3b8c5d1fd089ce35091cc5ed97ae2abe621d8f64",
        "urls": [
          "bzz-raw://c784b4d331d35b91bd28be8c75836b5c159cc84f4bb24110a4d92a94ed5dd80f",
          "dweb:/ipfs/QmeN38cSsaaaKQZTtSPQxJMPzXfG6ibDVi7HqZBBpZuxQQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/OrderInfoLib.sol": {
        "keccak256": "0xcf4711d3b88d37c06c6965945c1e0703dd0237af22aeebb25bff667df34d34a5",
        "urls": [
          "bzz-raw://a431e1699dba41c9b92e6dcd25ca5492fcdc1ab4cf3986c52d286cd870858529",
          "dweb:/ipfs/QmSpN7LCCkQjcJ1hjoBdnN2uBKZw61YDuLzQdDVBgBwckJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/Permit2Lib.sol": {
        "keccak256": "0x87dc4b4f16ac299a100a4178e5e4f2d02848170d5d02dddc29d64ca94e6d79fb",
        "urls": [
          "bzz-raw://4a9202605548693224f941462fba6d8537a381a0e40df1ea04e990461fb18507",
          "dweb:/ipfs/Qmcoi27HAXxwWhs8mbC4M5oe9TadRMAN38oSNqtnchTrPC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ResolvedOrderLib.sol": {
        "keccak256": "0x484526a9695c67c129f3f6e416a349b3f82c7e9faded71e6e1acda42a76f595f",
        "urls": [
          "bzz-raw://58733b37a4bf3bbadfb5b4c72121aee20efa8fa760fbe0adb82c55947040a616",
          "dweb:/ipfs/QmXiM6L7fRp4CLdR9yMrusudTTESq7pUKtfGvhMYHU56VJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseReactor.sol": {
        "keccak256": "0x372fb4a9f87bb981ce91157f92bca3d7e3964f01cac99b88c6a2d163c81f25f9",
        "urls": [
          "bzz-raw://f55e0fc0ea1ad32b985643d244a4a953b656c26a7a2e50bddb4175b45892fd31",
          "dweb:/ipfs/QmXbNpY6dKJTNmbfMjn6drGQc8FA17tDViUjbvK6Qdw4dR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/ExclusiveDutchLimitOrderReactor.sol": {
        "keccak256": "0x23ed7010886c6ea709ca29c0a474941fa19720e669be2f42e4eba11ae990199a",
        "urls": [
          "bzz-raw://ddd423f470550fc7ad784b59517a1b92095b5ff2c961ff9a2adca70ea1834e8e",
          "dweb:/ipfs/QmchYHfqS4t2EK2GxYskm3r1CWZmVwxMeE2huDPzAkmWHf"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/reactors/ExclusiveDutchLimitOrderReactor.sol",
    "id": 32737,
    "exportedSymbols": {
      "BaseReactor": [
        32297
      ],
      "DutchDecayLib": [
        30814
      ],
      "DutchInput": [
        30839
      ],
      "DutchOutput": [
        30831
      ],
      "ExclusiveDutchLimitOrder": [
        31048
      ],
      "ExclusiveDutchLimitOrderLib": [
        31148
      ],
      "ExclusiveDutchLimitOrderReactor": [
        32736
      ],
      "ExclusivityOverrideLib": [
        31266
      ],
      "ISignatureTransfer": [
        28727
      ],
      "InputToken": [
        30059
      ],
      "OrderInfo": [
        30051
      ],
      "OutputToken": [
        30066
      ],
      "Permit2Lib": [
        31794
      ],
      "ResolvedOrder": [
        30081
      ],
      "SignedOrder": [
        30086
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:3317:55",
    "nodes": [
      {
        "id": 32504,
        "nodeType": "PragmaDirective",
        "src": "45:23:55",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 32506,
        "nodeType": "ImportDirective",
        "src": "70:46:55",
        "nodes": [],
        "absolutePath": "src/reactors/BaseReactor.sol",
        "file": "./BaseReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32737,
        "sourceUnit": 32298,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32505,
              "name": "BaseReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32297,
              "src": "78:11:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32508,
        "nodeType": "ImportDirective",
        "src": "117:81:55",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/ISignatureTransfer.sol",
        "file": "permit2/src/interfaces/ISignatureTransfer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32737,
        "sourceUnit": 28728,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32507,
              "name": "ISignatureTransfer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28727,
              "src": "125:18:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32510,
        "nodeType": "ImportDirective",
        "src": "199:73:55",
        "nodes": [],
        "absolutePath": "src/lib/ExclusivityOverrideLib.sol",
        "file": "../lib/ExclusivityOverrideLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32737,
        "sourceUnit": 31267,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32509,
              "name": "ExclusivityOverrideLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31266,
              "src": "207:22:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32512,
        "nodeType": "ImportDirective",
        "src": "273:49:55",
        "nodes": [],
        "absolutePath": "src/lib/Permit2Lib.sol",
        "file": "../lib/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32737,
        "sourceUnit": 31795,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32511,
              "name": "Permit2Lib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31794,
              "src": "281:10:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32514,
        "nodeType": "ImportDirective",
        "src": "323:55:55",
        "nodes": [],
        "absolutePath": "src/lib/DutchDecayLib.sol",
        "file": "../lib/DutchDecayLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32737,
        "sourceUnit": 30815,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32513,
              "name": "DutchDecayLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30814,
              "src": "331:13:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32519,
        "nodeType": "ImportDirective",
        "src": "379:152:55",
        "nodes": [],
        "absolutePath": "src/lib/ExclusiveDutchLimitOrderLib.sol",
        "file": "../lib/ExclusiveDutchLimitOrderLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32737,
        "sourceUnit": 31149,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32515,
              "name": "ExclusiveDutchLimitOrderLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31148,
              "src": "392:27:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32516,
              "name": "ExclusiveDutchLimitOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31048,
              "src": "425:24:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32517,
              "name": "DutchOutput",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30831,
              "src": "455:11:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32518,
              "name": "DutchInput",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30839,
              "src": "472:10:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32525,
        "nodeType": "ImportDirective",
        "src": "532:106:55",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32737,
        "sourceUnit": 30087,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32520,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30086,
              "src": "540:11:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32521,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30081,
              "src": "553:13:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32522,
              "name": "InputToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30059,
              "src": "568:10:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32523,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30051,
              "src": "580:9:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32524,
              "name": "OutputToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30066,
              "src": "591:11:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32736,
        "nodeType": "ContractDefinition",
        "src": "693:2668:55",
        "nodes": [
          {
            "id": 32532,
            "nodeType": "UsingForDirective",
            "src": "755:35:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 32529,
              "name": "Permit2Lib",
              "nameLocations": [
                "761:10:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31794,
              "src": "761:10:55"
            },
            "typeName": {
              "id": 32531,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32530,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "776:13:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30081,
                "src": "776:13:55"
              },
              "referencedDeclaration": 30081,
              "src": "776:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$30081_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 32536,
            "nodeType": "UsingForDirective",
            "src": "795:63:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 32533,
              "name": "ExclusiveDutchLimitOrderLib",
              "nameLocations": [
                "801:27:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31148,
              "src": "801:27:55"
            },
            "typeName": {
              "id": 32535,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32534,
                "name": "ExclusiveDutchLimitOrder",
                "nameLocations": [
                  "833:24:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31048,
                "src": "833:24:55"
              },
              "referencedDeclaration": 31048,
              "src": "833:24:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_storage_ptr",
                "typeString": "struct ExclusiveDutchLimitOrder"
              }
            }
          },
          {
            "id": 32541,
            "nodeType": "UsingForDirective",
            "src": "863:38:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 32537,
              "name": "DutchDecayLib",
              "nameLocations": [
                "869:13:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30814,
              "src": "869:13:55"
            },
            "typeName": {
              "baseType": {
                "id": 32539,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 32538,
                  "name": "DutchOutput",
                  "nameLocations": [
                    "887:11:55"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30831,
                  "src": "887:11:55"
                },
                "referencedDeclaration": 30831,
                "src": "887:11:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DutchOutput_$30831_storage_ptr",
                  "typeString": "struct DutchOutput"
                }
              },
              "id": 32540,
              "nodeType": "ArrayTypeName",
              "src": "887:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_DutchOutput_$30831_storage_$dyn_storage_ptr",
                "typeString": "struct DutchOutput[]"
              }
            }
          },
          {
            "id": 32545,
            "nodeType": "UsingForDirective",
            "src": "906:35:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 32542,
              "name": "DutchDecayLib",
              "nameLocations": [
                "912:13:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30814,
              "src": "912:13:55"
            },
            "typeName": {
              "id": 32544,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32543,
                "name": "DutchInput",
                "nameLocations": [
                  "930:10:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30839,
                "src": "930:10:55"
              },
              "referencedDeclaration": 30839,
              "src": "930:10:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_DutchInput_$30839_storage_ptr",
                "typeString": "struct DutchInput"
              }
            }
          },
          {
            "id": 32549,
            "nodeType": "UsingForDirective",
            "src": "946:47:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 32546,
              "name": "ExclusivityOverrideLib",
              "nameLocations": [
                "952:22:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31266,
              "src": "952:22:55"
            },
            "typeName": {
              "id": 32548,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32547,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "979:13:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30081,
                "src": "979:13:55"
              },
              "referencedDeclaration": 30081,
              "src": "979:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$30081_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 32551,
            "nodeType": "ErrorDefinition",
            "src": "999:30:55",
            "nodes": [],
            "errorSelector": "773a6187",
            "name": "DeadlineBeforeEndTime",
            "nameLocation": "1005:21:55",
            "parameters": {
              "id": 32550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1026:2:55"
            }
          },
          {
            "id": 32553,
            "nodeType": "ErrorDefinition",
            "src": "1034:31:55",
            "nodes": [],
            "errorSelector": "43133453",
            "name": "EndTimeBeforeStartTime",
            "nameLocation": "1040:22:55",
            "parameters": {
              "id": 32552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1062:2:55"
            }
          },
          {
            "id": 32555,
            "nodeType": "ErrorDefinition",
            "src": "1070:28:55",
            "nodes": [],
            "errorSelector": "d303758b",
            "name": "InputAndOutputDecay",
            "nameLocation": "1076:19:55",
            "parameters": {
              "id": 32554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1095:2:55"
            }
          },
          {
            "id": 32567,
            "nodeType": "FunctionDefinition",
            "src": "1104:100:55",
            "nodes": [],
            "body": {
              "id": 32566,
              "nodeType": "Block",
              "src": "1202:2:55",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 32562,
                    "name": "_permit2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32557,
                    "src": "1173:8:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 32563,
                    "name": "_protocolFeeOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32559,
                    "src": "1183:17:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 32564,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32561,
                  "name": "BaseReactor",
                  "nameLocations": [
                    "1161:11:55"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32297,
                  "src": "1161:11:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "1161:40:55"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32557,
                  "mutability": "mutable",
                  "name": "_permit2",
                  "nameLocation": "1124:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 32567,
                  "src": "1116:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32559,
                  "mutability": "mutable",
                  "name": "_protocolFeeOwner",
                  "nameLocation": "1142:17:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 32567,
                  "src": "1134:25:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1115:45:55"
            },
            "returnParameters": {
              "id": 32565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:0:55"
            },
            "scope": 32736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32633,
            "nodeType": "FunctionDefinition",
            "src": "1242:716:55",
            "nodes": [],
            "body": {
              "id": 32632,
              "nodeType": "Block",
              "src": "1413:545:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32580,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "1455:5:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 32632,
                      "src": "1423:37:55",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                        "typeString": "struct ExclusiveDutchLimitOrder"
                      },
                      "typeName": {
                        "id": 32579,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32578,
                          "name": "ExclusiveDutchLimitOrder",
                          "nameLocations": [
                            "1423:24:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31048,
                          "src": "1423:24:55"
                        },
                        "referencedDeclaration": 31048,
                        "src": "1423:24:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_storage_ptr",
                          "typeString": "struct ExclusiveDutchLimitOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32588,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32583,
                          "name": "signedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32571,
                          "src": "1474:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$30086_calldata_ptr",
                            "typeString": "struct SignedOrder calldata"
                          }
                        },
                        "id": 32584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1486:5:55",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30083,
                        "src": "1474:17:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 32585,
                            "name": "ExclusiveDutchLimitOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31048,
                            "src": "1494:24:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExclusiveDutchLimitOrder_$31048_storage_ptr_$",
                              "typeString": "type(struct ExclusiveDutchLimitOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 32586,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1493:26:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExclusiveDutchLimitOrder_$31048_storage_ptr_$",
                          "typeString": "type(struct ExclusiveDutchLimitOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_ExclusiveDutchLimitOrder_$31048_storage_ptr_$",
                          "typeString": "type(struct ExclusiveDutchLimitOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 32581,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1463:3:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 32582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1467:6:55",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1463:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 32587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:57:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                      "typeString": "struct ExclusiveDutchLimitOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1423:97:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32590,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32580,
                        "src": "1545:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                          "typeString": "struct ExclusiveDutchLimitOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                          "typeString": "struct ExclusiveDutchLimitOrder memory"
                        }
                      ],
                      "id": 32589,
                      "name": "_validateOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32735,
                      "src": "1530:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr_$returns$__$",
                        "typeString": "function (struct ExclusiveDutchLimitOrder memory) pure"
                      }
                    },
                    "id": 32591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:21:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32592,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:21:55"
                },
                {
                  "expression": {
                    "id": 32619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32593,
                      "name": "resolvedOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32576,
                      "src": "1562:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                        "typeString": "struct ResolvedOrder memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 32595,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32580,
                            "src": "1612:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                              "typeString": "struct ExclusiveDutchLimitOrder memory"
                            }
                          },
                          "id": 32596,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1618:4:55",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31032,
                          "src": "1612:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$30051_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 32600,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32580,
                                "src": "1661:5:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                  "typeString": "struct ExclusiveDutchLimitOrder memory"
                                }
                              },
                              "id": 32601,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1667:9:55",
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31034,
                              "src": "1661:15:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 32602,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32580,
                                "src": "1678:5:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                  "typeString": "struct ExclusiveDutchLimitOrder memory"
                                }
                              },
                              "id": 32603,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1684:7:55",
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31036,
                              "src": "1678:13:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 32597,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32580,
                                "src": "1643:5:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                  "typeString": "struct ExclusiveDutchLimitOrder memory"
                                }
                              },
                              "id": 32598,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1649:5:55",
                              "memberName": "input",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31043,
                              "src": "1643:11:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DutchInput_$30839_memory_ptr",
                                "typeString": "struct DutchInput memory"
                              }
                            },
                            "id": 32599,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1655:5:55",
                            "memberName": "decay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30813,
                            "src": "1643:17:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_DutchInput_$30839_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_InputToken_$30059_memory_ptr_$attached_to$_t_struct$_DutchInput_$30839_memory_ptr_$",
                              "typeString": "function (struct DutchInput memory,uint256,uint256) view returns (struct InputToken memory)"
                            }
                          },
                          "id": 32604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1643:49:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InputToken_$30059_memory_ptr",
                            "typeString": "struct InputToken memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 32608,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32580,
                                "src": "1735:5:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                  "typeString": "struct ExclusiveDutchLimitOrder memory"
                                }
                              },
                              "id": 32609,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1741:9:55",
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31034,
                              "src": "1735:15:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 32610,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32580,
                                "src": "1752:5:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                  "typeString": "struct ExclusiveDutchLimitOrder memory"
                                }
                              },
                              "id": 32611,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1758:7:55",
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31036,
                              "src": "1752:13:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 32605,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32580,
                                "src": "1715:5:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                  "typeString": "struct ExclusiveDutchLimitOrder memory"
                                }
                              },
                              "id": 32606,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1721:7:55",
                              "memberName": "outputs",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31047,
                              "src": "1715:13:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_DutchOutput_$30831_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct DutchOutput memory[] memory"
                              }
                            },
                            "id": 32607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1729:5:55",
                            "memberName": "decay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30766,
                            "src": "1715:19:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_DutchOutput_$30831_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_OutputToken_$30066_memory_ptr_$dyn_memory_ptr_$attached_to$_t_array$_t_struct$_DutchOutput_$30831_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (struct DutchOutput memory[] memory,uint256,uint256) view returns (struct OutputToken memory[] memory)"
                            }
                          },
                          "id": 32612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1715:51:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$30066_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 32613,
                            "name": "signedOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32571,
                            "src": "1785:11:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignedOrder_$30086_calldata_ptr",
                              "typeString": "struct SignedOrder calldata"
                            }
                          },
                          "id": 32614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1797:3:55",
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30085,
                          "src": "1785:15:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 32615,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32580,
                              "src": "1820:5:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                "typeString": "struct ExclusiveDutchLimitOrder memory"
                              }
                            },
                            "id": 32616,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1826:4:55",
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31147,
                            "src": "1820:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr_$",
                              "typeString": "function (struct ExclusiveDutchLimitOrder memory) pure returns (bytes32)"
                            }
                          },
                          "id": 32617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1820:12:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OrderInfo_$30051_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_InputToken_$30059_memory_ptr",
                            "typeString": "struct InputToken memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$30066_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 32594,
                        "name": "ResolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30081,
                        "src": "1578:13:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$30081_storage_ptr_$",
                          "typeString": "type(struct ResolvedOrder storage pointer)"
                        }
                      },
                      "id": 32618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1606:4:55",
                        "1636:5:55",
                        "1706:7:55",
                        "1780:3:55",
                        "1814:4:55"
                      ],
                      "names": [
                        "info",
                        "input",
                        "outputs",
                        "sig",
                        "hash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1578:265:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                        "typeString": "struct ResolvedOrder memory"
                      }
                    },
                    "src": "1562:281:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                      "typeString": "struct ResolvedOrder memory"
                    }
                  },
                  "id": 32620,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:281:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32624,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32580,
                          "src": "1882:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                            "typeString": "struct ExclusiveDutchLimitOrder memory"
                          }
                        },
                        "id": 32625,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1888:15:55",
                        "memberName": "exclusiveFiller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31038,
                        "src": "1882:21:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 32626,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32580,
                          "src": "1905:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                            "typeString": "struct ExclusiveDutchLimitOrder memory"
                          }
                        },
                        "id": 32627,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1911:9:55",
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31034,
                        "src": "1905:15:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 32628,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32580,
                          "src": "1922:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                            "typeString": "struct ExclusiveDutchLimitOrder memory"
                          }
                        },
                        "id": 32629,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1928:22:55",
                        "memberName": "exclusivityOverrideBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31040,
                        "src": "1922:28:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32621,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32576,
                        "src": "1853:13:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 32623,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1867:14:55",
                      "memberName": "handleOverride",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31237,
                      "src": "1853:28:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$30081_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$attached_to$_t_struct$_ResolvedOrder_$30081_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory,address,uint256,uint256) view"
                      }
                    },
                    "id": 32630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:98:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32631,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:98:55"
                }
              ]
            },
            "baseFunctions": [
              32287
            ],
            "documentation": {
              "id": 32568,
              "nodeType": "StructuredDocumentation",
              "src": "1210:27:55",
              "text": "@inheritdoc BaseReactor"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolve",
            "nameLocation": "1251:7:55",
            "overrides": {
              "id": 32573,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1347:8:55"
            },
            "parameters": {
              "id": 32572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32571,
                  "mutability": "mutable",
                  "name": "signedOrder",
                  "nameLocation": "1280:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 32633,
                  "src": "1259:32:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$30086_calldata_ptr",
                    "typeString": "struct SignedOrder"
                  },
                  "typeName": {
                    "id": 32570,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32569,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "1259:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30086,
                      "src": "1259:11:55"
                    },
                    "referencedDeclaration": 30086,
                    "src": "1259:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$30086_storage_ptr",
                      "typeString": "struct SignedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1258:34:55"
            },
            "returnParameters": {
              "id": 32577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32576,
                  "mutability": "mutable",
                  "name": "resolvedOrder",
                  "nameLocation": "1394:13:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 32633,
                  "src": "1373:34:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 32575,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32574,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1373:13:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30081,
                      "src": "1373:13:55"
                    },
                    "referencedDeclaration": 30081,
                    "src": "1373:13:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$30081_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1372:36:55"
            },
            "scope": 32736,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 32666,
            "nodeType": "FunctionDefinition",
            "src": "1996:375:55",
            "nodes": [],
            "body": {
              "id": 32665,
              "nodeType": "Block",
              "src": "2083:288:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 32647,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32637,
                            "src": "2160:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 32648,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2166:8:55",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31772,
                          "src": "2160:14:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$30081_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$28628_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$30081_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 32649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2160:16:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$28628_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32652,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32639,
                            "src": "2212:2:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 32650,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32637,
                            "src": "2190:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 32651,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2196:15:55",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31793,
                          "src": "2190:21:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$30081_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$28633_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$30081_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 32653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2190:25:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$28633_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 32654,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32637,
                            "src": "2229:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 32655,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2235:4:55",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30069,
                          "src": "2229:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$30051_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 32656,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2240:7:55",
                        "memberName": "swapper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30041,
                        "src": "2229:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 32657,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32637,
                          "src": "2261:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 32658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2267:4:55",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30080,
                        "src": "2261:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 32659,
                          "name": "ExclusiveDutchLimitOrderLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31148,
                          "src": "2285:27:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExclusiveDutchLimitOrderLib_$31148_$",
                            "typeString": "type(library ExclusiveDutchLimitOrderLib)"
                          }
                        },
                        "id": 32660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2313:18:55",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31105,
                        "src": "2285:46:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 32661,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32637,
                          "src": "2345:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 32662,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2351:3:55",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30078,
                        "src": "2345:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$28628_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$28633_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32644,
                            "name": "permit2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31936,
                            "src": "2112:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32643,
                          "name": "ISignatureTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28727,
                          "src": "2093:18:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISignatureTransfer_$28727_$",
                            "typeString": "type(contract ISignatureTransfer)"
                          }
                        },
                        "id": 32645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2093:27:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISignatureTransfer_$28727",
                          "typeString": "contract ISignatureTransfer"
                        }
                      },
                      "id": 32646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2121:25:55",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28684,
                      "src": "2093:53:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$28628_memory_ptr_$_t_struct$_SignatureTransferDetails_$28633_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 32663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:271:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32664,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:271:55"
                }
              ]
            },
            "baseFunctions": [
              32296
            ],
            "documentation": {
              "id": 32634,
              "nodeType": "StructuredDocumentation",
              "src": "1964:27:55",
              "text": "@inheritdoc BaseReactor"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferInputTokens",
            "nameLocation": "2005:19:55",
            "overrides": {
              "id": 32641,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2074:8:55"
            },
            "parameters": {
              "id": 32640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32637,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2046:5:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 32666,
                  "src": "2025:26:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 32636,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32635,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "2025:13:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30081,
                      "src": "2025:13:55"
                    },
                    "referencedDeclaration": 30081,
                    "src": "2025:13:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$30081_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32639,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2061:2:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 32666,
                  "src": "2053:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2024:40:55"
            },
            "returnParameters": {
              "id": 32642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2083:0:55"
            },
            "scope": 32736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 32735,
            "nodeType": "FunctionDefinition",
            "src": "2705:654:55",
            "nodes": [],
            "body": {
              "id": 32734,
              "nodeType": "Block",
              "src": "2782:577:55",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 32673,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32670,
                          "src": "2796:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                            "typeString": "struct ExclusiveDutchLimitOrder memory"
                          }
                        },
                        "id": 32674,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2802:4:55",
                        "memberName": "info",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31032,
                        "src": "2796:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$30051_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 32675,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2807:8:55",
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30045,
                      "src": "2796:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 32676,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32670,
                        "src": "2818:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                          "typeString": "struct ExclusiveDutchLimitOrder memory"
                        }
                      },
                      "id": 32677,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2824:7:55",
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31036,
                      "src": "2818:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2796:35:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32683,
                  "nodeType": "IfStatement",
                  "src": "2792:96:55",
                  "trueBody": {
                    "id": 32682,
                    "nodeType": "Block",
                    "src": "2833:55:55",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32679,
                            "name": "DeadlineBeforeEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32551,
                            "src": "2854:21:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2854:23:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32681,
                        "nodeType": "RevertStatement",
                        "src": "2847:30:55"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 32684,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32670,
                        "src": "2902:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                          "typeString": "struct ExclusiveDutchLimitOrder memory"
                        }
                      },
                      "id": 32685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2908:7:55",
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31036,
                      "src": "2902:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 32686,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32670,
                        "src": "2918:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                          "typeString": "struct ExclusiveDutchLimitOrder memory"
                        }
                      },
                      "id": 32687,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2924:9:55",
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31034,
                      "src": "2918:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2902:31:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32693,
                  "nodeType": "IfStatement",
                  "src": "2898:93:55",
                  "trueBody": {
                    "id": 32692,
                    "nodeType": "Block",
                    "src": "2935:56:55",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32689,
                            "name": "EndTimeBeforeStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32553,
                            "src": "2956:22:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2956:24:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32691,
                        "nodeType": "RevertStatement",
                        "src": "2949:31:55"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 32694,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32670,
                          "src": "3005:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                            "typeString": "struct ExclusiveDutchLimitOrder memory"
                          }
                        },
                        "id": 32695,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3011:5:55",
                        "memberName": "input",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31043,
                        "src": "3005:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DutchInput_$30839_memory_ptr",
                          "typeString": "struct DutchInput memory"
                        }
                      },
                      "id": 32696,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3017:11:55",
                      "memberName": "startAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30836,
                      "src": "3005:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 32697,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32670,
                          "src": "3032:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                            "typeString": "struct ExclusiveDutchLimitOrder memory"
                          }
                        },
                        "id": 32698,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3038:5:55",
                        "memberName": "input",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31043,
                        "src": "3032:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DutchInput_$30839_memory_ptr",
                          "typeString": "struct DutchInput memory"
                        }
                      },
                      "id": 32699,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3044:9:55",
                      "memberName": "endAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30838,
                      "src": "3032:21:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3005:48:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32733,
                  "nodeType": "IfStatement",
                  "src": "3001:352:55",
                  "trueBody": {
                    "id": 32732,
                    "nodeType": "Block",
                    "src": "3055:298:55",
                    "statements": [
                      {
                        "id": 32731,
                        "nodeType": "UncheckedBlock",
                        "src": "3069:274:55",
                        "statements": [
                          {
                            "body": {
                              "id": 32729,
                              "nodeType": "Block",
                              "src": "3148:181:55",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 32723,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 32713,
                                            "name": "order",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 32670,
                                            "src": "3174:5:55",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                              "typeString": "struct ExclusiveDutchLimitOrder memory"
                                            }
                                          },
                                          "id": 32714,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3180:7:55",
                                          "memberName": "outputs",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 31047,
                                          "src": "3174:13:55",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_DutchOutput_$30831_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct DutchOutput memory[] memory"
                                          }
                                        },
                                        "id": 32716,
                                        "indexExpression": {
                                          "id": 32715,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 32702,
                                          "src": "3188:1:55",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3174:16:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DutchOutput_$30831_memory_ptr",
                                          "typeString": "struct DutchOutput memory"
                                        }
                                      },
                                      "id": 32717,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3191:11:55",
                                      "memberName": "startAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 30826,
                                      "src": "3174:28:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 32718,
                                            "name": "order",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 32670,
                                            "src": "3206:5:55",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                              "typeString": "struct ExclusiveDutchLimitOrder memory"
                                            }
                                          },
                                          "id": 32719,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3212:7:55",
                                          "memberName": "outputs",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 31047,
                                          "src": "3206:13:55",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_DutchOutput_$30831_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct DutchOutput memory[] memory"
                                          }
                                        },
                                        "id": 32721,
                                        "indexExpression": {
                                          "id": 32720,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 32702,
                                          "src": "3220:1:55",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3206:16:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DutchOutput_$30831_memory_ptr",
                                          "typeString": "struct DutchOutput memory"
                                        }
                                      },
                                      "id": 32722,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3223:9:55",
                                      "memberName": "endAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 30828,
                                      "src": "3206:26:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3174:58:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 32728,
                                  "nodeType": "IfStatement",
                                  "src": "3170:141:55",
                                  "trueBody": {
                                    "id": 32727,
                                    "nodeType": "Block",
                                    "src": "3234:77:55",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 32724,
                                            "name": "InputAndOutputDecay",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 32555,
                                            "src": "3267:19:55",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 32725,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3267:21:55",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 32726,
                                        "nodeType": "RevertStatement",
                                        "src": "3260:28:55"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32705,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32702,
                                "src": "3117:1:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 32706,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32670,
                                    "src": "3121:5:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                                      "typeString": "struct ExclusiveDutchLimitOrder memory"
                                    }
                                  },
                                  "id": 32707,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3127:7:55",
                                  "memberName": "outputs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 31047,
                                  "src": "3121:13:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_DutchOutput_$30831_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct DutchOutput memory[] memory"
                                  }
                                },
                                "id": 32708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3135:6:55",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3121:20:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3117:24:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 32730,
                            "initializationExpression": {
                              "assignments": [
                                32702
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 32702,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "3110:1:55",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 32730,
                                  "src": "3102:9:55",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 32701,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3102:7:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 32704,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 32703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3114:1:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3102:13:55"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 32711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3143:3:55",
                                "subExpression": {
                                  "id": 32710,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32702,
                                  "src": "3143:1:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 32712,
                              "nodeType": "ExpressionStatement",
                              "src": "3143:3:55"
                            },
                            "nodeType": "ForStatement",
                            "src": "3097:232:55"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 32667,
              "nodeType": "StructuredDocumentation",
              "src": "2377:323:55",
              "text": "@notice validate the dutch order fields\n - deadline must be greater than or equal than endTime\n - endTime must be greater than or equal to startTime\n - if there's input decay, outputs must not decay\n - for input decay, startAmount must < endAmount\n @dev Throws if the order is invalid"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateOrder",
            "nameLocation": "2714:14:55",
            "parameters": {
              "id": 32671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32670,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2761:5:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 32735,
                  "src": "2729:37:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_memory_ptr",
                    "typeString": "struct ExclusiveDutchLimitOrder"
                  },
                  "typeName": {
                    "id": 32669,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32668,
                      "name": "ExclusiveDutchLimitOrder",
                      "nameLocations": [
                        "2729:24:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31048,
                      "src": "2729:24:55"
                    },
                    "referencedDeclaration": 31048,
                    "src": "2729:24:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExclusiveDutchLimitOrder_$31048_storage_ptr",
                      "typeString": "struct ExclusiveDutchLimitOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2728:39:55"
            },
            "returnParameters": {
              "id": 32672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2782:0:55"
            },
            "scope": 32736,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32527,
              "name": "BaseReactor",
              "nameLocations": [
                "737:11:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32297,
              "src": "737:11:55"
            },
            "id": 32528,
            "nodeType": "InheritanceSpecifier",
            "src": "737:11:55"
          }
        ],
        "canonicalName": "ExclusiveDutchLimitOrderReactor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 32526,
          "nodeType": "StructuredDocumentation",
          "src": "640:53:55",
          "text": "@notice Reactor for exclusive dutch limit orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32736,
          32297,
          25297,
          30013,
          28787,
          30028,
          30219
        ],
        "name": "ExclusiveDutchLimitOrderReactor",
        "nameLocation": "702:31:55",
        "scope": 32737,
        "usedErrors": [
          29766,
          29768,
          29770,
          30412,
          30414,
          30571,
          30573,
          31161,
          31290,
          31802,
          31804,
          31934,
          32551,
          32553,
          32555
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 55
}