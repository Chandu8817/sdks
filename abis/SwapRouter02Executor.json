{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whitelistedCaller",
          "type": "address"
        },
        {
          "internalType": "contract IReactor",
          "name": "_reactor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "contract ISwapRouter02",
          "name": "_swapRouter02",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerNotWhitelisted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MsgSenderNotReactor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeTransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "tokensToApprove",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "multicallData",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder[]",
          "name": "resolvedOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "fillData",
          "type": "bytes"
        }
      ],
      "name": "reactorCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b5060405162001a6538038062001a6583398101604081905262000035916200012b565b600080546001600160a01b0319166001600160a01b03841690811782556040518492907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0380851660a05283811660c05281166080819052604080516312a9293f60e21b81529051634aa4a4fc916004808201926020929091908290030181865afa158015620000d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fb919062000193565b6001600160a01b031660e05250620001ba92505050565b6001600160a01b03811681146200012857600080fd5b50565b600080600080608085870312156200014257600080fd5b84516200014f8162000112565b6020860151909450620001628162000112565b6040860151909350620001758162000112565b6060860151909250620001888162000112565b939692955090935050565b600060208284031215620001a657600080fd5b8151620001b38162000112565b9392505050565b60805160a05160c05160e05161185562000210600039600081816104dc015261058e015260006106250152600061067e015260008181610203015281816102d70152818161072501526107f401526118556000f3fe6080604052600436106100695760003560e01c80638da5cb5b116100435780638da5cb5b146100d75780639943fa891461012d578063f2fde38b1461014d57600080fd5b806363fb0b9614610075578063690d83201461009757806389a3f136146100b757600080fd5b3661007057005b600080fd5b34801561008157600080fd5b50610095610090366004610db4565b61016d565b005b3480156100a357600080fd5b506100956100b2366004610e42565b61039c565b3480156100c357600080fd5b506100956100d2366004610e42565b61042a565b3480156100e357600080fd5b506000546101049073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561013957600080fd5b50610095610148366004610e66565b61060d565b34801561015957600080fd5b50610095610168366004610e42565b610988565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60005b83811015610299576102877f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff87878581811061025557610255610f15565b905060200201602081019061026a9190610e42565b73ffffffffffffffffffffffffffffffffffffffff169190610a79565b8061029181610f44565b9150506101f6565b506040517f5ae401dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635ae401dc90610330907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9086908690600401610fec565b6000604051808303816000875af115801561034f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103959190810190611227565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016101ea565b6104278147610b4e565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016101ea565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c9190611319565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b505050506106098247610b4e565b5050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461067c576040517f933fe52f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610701576040517f8c6e5d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806107108385018561140e565b9150915060005b82518110156107b6576107a47f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85848151811061077757610777610f15565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16610a799092919063ffffffff16565b806107ae81610f44565b915050610717565b506040517f5ae401dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635ae401dc9061084b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9085906004016114d0565b6000604051808303816000875af115801561086a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108b09190810190611227565b5060005b8681101561097e5760008888838181106108d0576108d0610f15565b90506020028101906108e2919061158e565b6108eb90611771565b905060005b8160400151518110156109695760008260400151828151811061091557610915610f15565b6020026020010151905061095681604001518260200151836000015173ffffffffffffffffffffffffffffffffffffffff16610bc89092919063ffffffff16565b508061096181610f44565b9150506108f0565b5050808061097690610f44565b9150506108b4565b5050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016101ea565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60006040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610b48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c454400000000000000000000000000000000000060448201526064016101ea565b50505050565b600080600080600085875af1905080610bc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016101ea565b505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c7d5760008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610c3d576040519150601f19603f3d011682016040523d82523d6000602084013e610c42565b606091505b5050905080610b48576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bc373ffffffffffffffffffffffffffffffffffffffff8416838360006040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610b48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016101ea565b60008083601f840112610d7a57600080fd5b50813567ffffffffffffffff811115610d9257600080fd5b6020830191508360208260051b8501011115610dad57600080fd5b9250929050565b60008060008060408587031215610dca57600080fd5b843567ffffffffffffffff80821115610de257600080fd5b610dee88838901610d68565b90965094506020870135915080821115610e0757600080fd5b50610e1487828801610d68565b95989497509550505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461042757600080fd5b600060208284031215610e5457600080fd5b8135610e5f81610e20565b9392505050565b600080600080600060608688031215610e7e57600080fd5b853567ffffffffffffffff80821115610e9657600080fd5b610ea289838a01610d68565b909750955060208801359150610eb782610e20565b90935060408701359080821115610ecd57600080fd5b818801915088601f830112610ee157600080fd5b813581811115610ef057600080fd5b896020828501011115610f0257600080fd5b9699959850939650602001949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f9c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60006040820185835260206040818501528185835260608501905060608660051b86010192508660005b878110156110c1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087860301835281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18a360301811261107757600080fd5b8901848101903567ffffffffffffffff81111561109357600080fd5b8036038213156110a257600080fd5b6110ad878284610fa3565b965050509183019190830190600101611016565b509298975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611121576111216110cf565b60405290565b60405160a0810167ffffffffffffffff81118282101715611121576111216110cf565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611191576111916110cf565b604052919050565b600067ffffffffffffffff8211156111b3576111b36110cf565b5060051b60200190565b600067ffffffffffffffff8211156111d7576111d76110cf565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b8381101561121e578181015183820152602001611206565b50506000910152565b6000602080838503121561123a57600080fd5b825167ffffffffffffffff8082111561125257600080fd5b818501915085601f83011261126657600080fd5b815161127961127482611199565b61114a565b81815260059190911b8301840190848101908883111561129857600080fd5b8585015b8381101561130c578051858111156112b45760008081fd5b8601603f81018b136112c65760008081fd5b8781015160406112d8611274836111bd565b8281528d828486010111156112ed5760008081fd5b6112fc838c8301848701611203565b865250505091860191860161129c565b5098975050505050505050565b60006020828403121561132b57600080fd5b5051919050565b600082601f83011261134357600080fd5b8135611351611274826111bd565b81815284602083860101111561136657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261139457600080fd5b813560206113a461127483611199565b82815260059290921b840181019181810190868411156113c357600080fd5b8286015b8481101561140357803567ffffffffffffffff8111156113e75760008081fd5b6113f58986838b0101611332565b8452509183019183016113c7565b509695505050505050565b6000806040838503121561142157600080fd5b823567ffffffffffffffff8082111561143957600080fd5b818501915085601f83011261144d57600080fd5b8135602061145d61127483611199565b82815260059290921b8401810191818101908984111561147c57600080fd5b948201945b838610156114a357853561149481610e20565b82529482019490820190611481565b965050860135925050808211156114b957600080fd5b506114c685828601611383565b9150509250929050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b82811015611580577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030184528151805180885261154381888a01898501611203565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016969096018501955092840192908401906001016114fe565b509398975050505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126115c257600080fd5b9190910192915050565b600060c082840312156115de57600080fd5b60405160c0810167ffffffffffffffff8282108183111715611602576116026110cf565b816040528293508435915061161682610e20565b90825260208401359061162882610e20565b81602084015260408501356040840152606085013560608401526080850135915061165282610e20565b81608084015260a085013591508082111561166c57600080fd5b5061167985828601611332565b60a0830152505092915050565b60006060828403121561169857600080fd5b6116a06110fe565b905081356116ad81610e20565b80825250602082013560208201526040820135604082015292915050565b600082601f8301126116dc57600080fd5b813560206116ec61127483611199565b8281526060928302850182019282820191908785111561170b57600080fd5b8387015b858110156117645781818a0312156117275760008081fd5b61172f6110fe565b813561173a81610e20565b8152818601358682015260408083013561175381610e20565b90820152845292840192810161170f565b5090979650505050505050565b600060e0823603121561178357600080fd5b61178b611127565b823567ffffffffffffffff808211156117a357600080fd5b6117af368387016115cc565b83526117be3660208701611686565b602084015260808501359150808211156117d757600080fd5b6117e3368387016116cb565b604084015260a08501359150808211156117fc57600080fd5b5061180936828601611332565b60608301525060c092909201356080830152509056fea264697066735822122086466113e8060b7a840713717a2b14c7f044d0e49078af6ce4332b4604c5687a64736f6c63430008130033",
    "sourceMap": "677:3773:65:-:0;;;1228:304;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1045:5:34;:14;;-1:-1:-1;;;;;;1045:14:34;-1:-1:-1;;;;;1045:14:34;;;;;;;1075:40;;1045:14;;:5;1075:40;;1045:5;;1075:40;-1:-1:-1;;;;;;1368:38:65;;::::1;;::::0;1416:18;;::::1;;::::0;1444:28;::::1;;::::0;;;-1:-1:-1;1502:21:65;;-1:-1:-1;;;1502:21:65;;;;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;-1:-1:-1;;1502:21:65;;;;;;;;1444:28;1502:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1482:43:65::1;;::::0;-1:-1:-1;677:3773:65;;-1:-1:-1;;;677:3773:65;14:131:105;-1:-1:-1;;;;;89:31:105;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:695::-;288:6;296;304;312;365:3;353:9;344:7;340:23;336:33;333:53;;;382:1;379;372:12;333:53;414:9;408:16;433:31;458:5;433:31;:::i;:::-;533:2;518:18;;512:25;483:5;;-1:-1:-1;546:33:105;512:25;546:33;:::i;:::-;650:2;635:18;;629:25;598:7;;-1:-1:-1;663:33:105;629:25;663:33;:::i;:::-;767:2;752:18;;746:25;715:7;;-1:-1:-1;780:33:105;746:25;780:33;:::i;:::-;150:695;;;;-1:-1:-1;150:695:105;;-1:-1:-1;;150:695:105:o;850:251::-;920:6;973:2;961:9;952:7;948:23;944:32;941:52;;;989:1;986;979:12;941:52;1021:9;1015:16;1040:31;1065:5;1040:31;:::i;:::-;1090:5;850:251;-1:-1:-1;;;850:251:105:o;:::-;677:3773:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "677:3773:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:336;;;;;;;;;;-1:-1:-1;3283:336:65;;;;;:::i;:::-;;:::i;:::-;;4187:141;;;;;;;;;;-1:-1:-1;4187:141:65;;;;;:::i;:::-;;:::i;3796:238::-;;;;;;;;;;-1:-1:-1;3796:238:65;;;;;:::i;:::-;;:::i;690:20:34:-;;;;;;;;;;-1:-1:-1;690:20:34;;;;;;;;;;;1798:42:105;1786:55;;;1768:74;;1756:2;1741:18;690:20:34;;;;;;;1958:1086:65;;;;;;;;;;-1:-1:-1;1958:1086:65;;;;;:::i;:::-;;:::i;1312:161:34:-;;;;;;;;;;-1:-1:-1;1312:161:34;;;;;:::i;:::-;;:::i;3283:336:65:-;778:5:34;;;;764:10;:19;756:44;;;;;;;3142:2:105;756:44:34;;;3124:21:105;3181:2;3161:18;;;3154:30;3220:14;3200:18;;;3193:42;3252:18;;756:44:34;;;;;;;;;3402:9:65::1;3397:150;3417:26:::0;;::::1;3397:150;;;3464:72;3503:12;3518:17;3464:15;;3480:1;3464:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;:30;;::::0;:72;:30:::1;:72::i;:::-;3445:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3397:150;;;-1:-1:-1::0;3556:56:65::1;::::0;;;;:22:::1;:12;:22;::::0;::::1;::::0;:56:::1;::::0;3579:17:::1;::::0;3598:13;;;;3556:56:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;3283:336:::0;;;;:::o;4187:141::-;778:5:34;;;;764:10;:19;756:44;;;;;;;3142:2:105;756:44:34;;;3124:21:105;3181:2;3161:18;;;3154:30;3220:14;3200:18;;;3193:42;3252:18;;756:44:34;2940:336:105;756:44:34;4256:65:65::1;4288:9;4299:21;4256:31;:65::i;:::-;4187:141:::0;:::o;3796:238::-;778:5:34;;;;764:10;:19;756:44;;;;;;;3142:2:105;756:44:34;;;3124:21:105;3181:2;3161:18;;;3154:30;3220:14;3200:18;;;3193:42;3252:18;;756:44:34;2940:336:105;756:44:34;3886:29:65::1;::::0;;;;3909:4:::1;3886:29;::::0;::::1;1768:74:105::0;3864:19:65::1;::::0;3886:4:::1;:14;;::::0;::::1;::::0;1741:18:105;;3886:29:65::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3926:26;::::0;;;;::::1;::::0;::::1;9552:25:105::0;;;3864:51:65;;-1:-1:-1;3926:4:65::1;:13;;::::0;::::1;::::0;9525:18:105;;3926:26:65::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3962:65;3994:9;4005:21;3962:31;:65::i;:::-;3854:180;3796:238:::0;:::o;1958:1086::-;2100:10;:30;2122:7;2100:30;;2096:89;;2153:21;;;;;;;;;;;;;;2096:89;2208:17;2198:27;;:6;:27;;;2194:87;;2248:22;;;;;;;;;;;;;;2194:87;2292:47;;2385:42;;;;2396:8;2385:42;:::i;:::-;2291:136;;;;2443:9;2438:187;2462:30;:37;2458:1;:41;2438:187;;;2520:94;2581:12;2596:17;2526:30;2557:1;2526:33;;;;;;;;:::i;:::-;;;;;;;2520:52;;;;:94;;;;;:::i;:::-;2501:3;;;;:::i;:::-;;;;2438:187;;;-1:-1:-1;2635:56:65;;;;;:22;:12;:22;;;;:56;;2658:17;;2677:13;;2635:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2707:9;2702:336;2722:25;;;2702:336;;;2768:26;2797:14;;2812:1;2797:17;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2768:46;;;:::i;:::-;;;2833:9;2828:200;2852:5;:13;;;:20;2848:1;:24;2828:200;;;2897:25;2925:5;:13;;;2939:1;2925:16;;;;;;;;:::i;:::-;;;;;;;2897:44;;2959:54;2981:6;:16;;;2999:6;:13;;;2959:6;:12;;;:21;;;;:54;;;;;:::i;:::-;-1:-1:-1;2874:3:65;;;;:::i;:::-;;;;2828:200;;;;2754:284;2749:3;;;;;:::i;:::-;;;;2702:336;;;;2086:958;;1958:1086;;;;;:::o;1312:161:34:-;778:5;;;;764:10;:19;756:44;;;;;;;3142:2:105;756:44:34;;;3124:21:105;3181:2;3161:18;;;3154:30;3220:14;3200:18;;;3193:42;3252:18;;756:44:34;2940:336:105;756:44:34;1392:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;1424:42:::1;::::0;1392:16;;1445:10:::1;::::0;1424:42:::1;::::0;1392:5;1424:42:::1;1312:161:::0;:::o;4729:1605:38:-;4840:12;5010:4;5004:11;5152:66;5133:17;5126:93;5274:42;5270:2;5266:51;5262:1;5243:17;5239:25;5232:86;5404:6;5399:2;5380:17;5376:26;5369:42;6256:2;6253:1;6249:2;6230:17;6227:1;6220:5;6213;6208:51;5777:16;5770:24;5764:2;5746:16;5743:24;5739:1;5735;5729:8;5726:15;5722:46;5719:76;5519:754;5508:765;;;6301:7;6293:34;;;;;;;17775:2:105;6293:34:38;;;17757:21:105;17814:2;17794:18;;;17787:30;17853:16;17833:18;;;17826:44;17887:18;;6293:34:38;17573:338:105;6293:34:38;4830:1504;4729:1605;;;:::o;799:339::-;871:12;1070:1;1067;1064;1061;1053:6;1049:2;1042:5;1037:35;1026:46;;1100:7;1092:39;;;;;;;18118:2:105;1092:39:38;;;18100:21:105;18157:2;18137:18;;;18130:30;18196:21;18176:18;;;18169:49;18235:18;;1092:39:38;17916:343:105;1092:39:38;861:277;799:339;;:::o;1379:331:51:-;2822:18;;;1469:235;;1508:12;1525:9;:14;;1547:6;1525:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1507:51;;;1577:7;1572:43;;1593:22;;;;;;;;;;;;;;1469:235;1646:47;:28;;;1675:9;1686:6;3228:12:38;3398:4;3392:11;3540:66;3521:17;3514:93;3662:42;3658:2;3654:51;3650:1;3631:17;3627:25;3620:86;3792:6;3787:2;3768:17;3764:26;3757:42;4644:2;4641:1;4637:2;4618:17;4615:1;4608:5;4601;4596:51;4165:16;4158:24;4152:2;4134:16;4131:24;4127:1;4123;4117:8;4114:15;4110:46;4107:76;3907:754;3896:765;;;4689:7;4681:35;;;;;;;18676:2:105;4681:35:38;;;18658:21:105;18715:2;18695:18;;;18688:30;18754:17;18734:18;;;18727:45;18789:18;;4681:35:38;18474:339:105;14:374;84:8;94:6;148:3;141:4;133:6;129:17;125:27;115:55;;166:1;163;156:12;115:55;-1:-1:-1;189:20:105;;232:18;221:30;;218:50;;;264:1;261;254:12;218:50;301:4;293:6;289:17;277:29;;361:3;354:4;344:6;341:1;337:14;329:6;325:27;321:38;318:47;315:67;;;378:1;375;368:12;315:67;14:374;;;;;:::o;393:813::-;541:6;549;557;565;618:2;606:9;597:7;593:23;589:32;586:52;;;634:1;631;624:12;586:52;674:9;661:23;703:18;744:2;736:6;733:14;730:34;;;760:1;757;750:12;730:34;799:77;868:7;859:6;848:9;844:22;799:77;:::i;:::-;895:8;;-1:-1:-1;773:103:105;-1:-1:-1;983:2:105;968:18;;955:32;;-1:-1:-1;999:16:105;;;996:36;;;1028:1;1025;1018:12;996:36;;1067:79;1138:7;1127:8;1116:9;1112:24;1067:79;:::i;:::-;393:813;;;;-1:-1:-1;1165:8:105;-1:-1:-1;;;;393:813:105:o;1211:154::-;1297:42;1290:5;1286:54;1279:5;1276:65;1266:93;;1355:1;1352;1345:12;1370:247;1429:6;1482:2;1470:9;1461:7;1457:23;1453:32;1450:52;;;1498:1;1495;1488:12;1450:52;1537:9;1524:23;1556:31;1581:5;1556:31;:::i;:::-;1606:5;1370:247;-1:-1:-1;;;1370:247:105:o;1853:1082::-;2002:6;2010;2018;2026;2034;2087:2;2075:9;2066:7;2062:23;2058:32;2055:52;;;2103:1;2100;2093:12;2055:52;2143:9;2130:23;2172:18;2213:2;2205:6;2202:14;2199:34;;;2229:1;2226;2219:12;2199:34;2268:77;2337:7;2328:6;2317:9;2313:22;2268:77;:::i;:::-;2364:8;;-1:-1:-1;2242:103:105;-1:-1:-1;2449:2:105;2434:18;;2421:32;;-1:-1:-1;2462:31:105;2421:32;2462:31;:::i;:::-;2512:5;;-1:-1:-1;2570:2:105;2555:18;;2542:32;;2586:16;;;2583:36;;;2615:1;2612;2605:12;2583:36;2653:8;2642:9;2638:24;2628:34;;2700:7;2693:4;2689:2;2685:13;2681:27;2671:55;;2722:1;2719;2712:12;2671:55;2762:2;2749:16;2788:2;2780:6;2777:14;2774:34;;;2804:1;2801;2794:12;2774:34;2849:7;2844:2;2835:6;2831:2;2827:15;2823:24;2820:37;2817:57;;;2870:1;2867;2860:12;2817:57;1853:1082;;;;-1:-1:-1;1853:1082:105;;-1:-1:-1;2901:2:105;2893:11;;2923:6;1853:1082;-1:-1:-1;;;1853:1082:105:o;3281:184::-;3333:77;3330:1;3323:88;3430:4;3427:1;3420:15;3454:4;3451:1;3444:15;3737:349;3776:3;3807:66;3800:5;3797:77;3794:257;;3907:77;3904:1;3897:88;4008:4;4005:1;3998:15;4036:4;4033:1;4026:15;3794:257;-1:-1:-1;4078:1:105;4067:13;;3737:349::o;4091:325::-;4179:6;4174:3;4167:19;4231:6;4224:5;4217:4;4212:3;4208:14;4195:43;;4283:1;4276:4;4267:6;4262:3;4258:16;4254:27;4247:38;4149:3;4405:4;4335:66;4330:2;4322:6;4318:15;4314:88;4309:3;4305:98;4301:109;4294:116;;4091:325;;;;:::o;4421:1415::-;4621:4;4669:2;4658:9;4654:18;4699:6;4688:9;4681:25;4725:2;4763;4758;4747:9;4743:18;4736:30;4786:6;4816;4808;4801:22;4854:2;4843:9;4839:18;4832:25;;4916:2;4906:6;4903:1;4899:14;4888:9;4884:30;4880:39;4866:53;;4942:6;4966:1;4976:831;4990:6;4987:1;4984:13;4976:831;;;5079:66;5067:9;5059:6;5055:22;5051:95;5046:3;5039:108;5199:6;5186:20;5286:66;5277:6;5261:14;5257:27;5253:100;5233:18;5229:125;5219:153;;5368:1;5365;5358:12;5219:153;5398:31;;5503:14;;;;5456:19;5544:18;5533:30;;5530:50;;;5576:1;5573;5566:12;5530:50;5629:6;5613:14;5609:27;5600:7;5596:41;5593:61;;;5650:1;5647;5640:12;5593:61;5677:50;5720:6;5712;5703:7;5677:50;:::i;:::-;5667:60;-1:-1:-1;;;5785:12:105;;;;5750:15;;;;5012:1;5005:9;4976:831;;;-1:-1:-1;5824:6:105;;4421:1415;-1:-1:-1;;;;;;;;4421:1415:105:o;5841:184::-;5893:77;5890:1;5883:88;5990:4;5987:1;5980:15;6014:4;6011:1;6004:15;6030:253;6102:2;6096:9;6144:4;6132:17;;6179:18;6164:34;;6200:22;;;6161:62;6158:88;;;6226:18;;:::i;:::-;6262:2;6255:22;6030:253;:::o;6288:::-;6360:2;6354:9;6402:4;6390:17;;6437:18;6422:34;;6458:22;;;6419:62;6416:88;;;6484:18;;:::i;6546:334::-;6617:2;6611:9;6673:2;6663:13;;6678:66;6659:86;6647:99;;6776:18;6761:34;;6797:22;;;6758:62;6755:88;;;6823:18;;:::i;:::-;6859:2;6852:22;6546:334;;-1:-1:-1;6546:334:105:o;6885:181::-;6943:4;6976:18;6968:6;6965:30;6962:56;;;6998:18;;:::i;:::-;-1:-1:-1;7043:1:105;7039:14;7055:4;7035:25;;6885:181::o;7071:245::-;7119:4;7152:18;7144:6;7141:30;7138:56;;;7174:18;;:::i;:::-;-1:-1:-1;7231:2:105;7219:15;7236:66;7215:88;7305:4;7211:99;;7071:245::o;7321:250::-;7406:1;7416:113;7430:6;7427:1;7424:13;7416:113;;;7506:11;;;7500:18;7487:11;;;7480:39;7452:2;7445:10;7416:113;;;-1:-1:-1;;7563:1:105;7545:16;;7538:27;7321:250::o;7576:1636::-;7680:6;7711:2;7754;7742:9;7733:7;7729:23;7725:32;7722:52;;;7770:1;7767;7760:12;7722:52;7803:9;7797:16;7832:18;7873:2;7865:6;7862:14;7859:34;;;7889:1;7886;7879:12;7859:34;7927:6;7916:9;7912:22;7902:32;;7972:7;7965:4;7961:2;7957:13;7953:27;7943:55;;7994:1;7991;7984:12;7943:55;8023:2;8017:9;8046:58;8062:41;8100:2;8062:41;:::i;:::-;8046:58;:::i;:::-;8138:15;;;8220:1;8216:10;;;;8208:19;;8204:28;;;8169:12;;;;8244:19;;;8241:39;;;8276:1;8273;8266:12;8241:39;8308:2;8304;8300:11;8320:862;8336:6;8331:3;8328:15;8320:862;;;8415:3;8409:10;8451:2;8438:11;8435:19;8432:109;;;8495:1;8524:2;8520;8513:14;8432:109;8564:20;;8619:2;8611:11;;8607:25;-1:-1:-1;8597:123:105;;8674:1;8703:2;8699;8692:14;8597:123;8757:2;8753;8749:11;8743:18;8784:2;8812:48;8828:31;8856:2;8828:31;:::i;8812:48::-;8887:2;8880:5;8873:17;8931:7;8926:2;8921;8917;8913:11;8909:20;8906:33;8903:126;;;8981:1;9011:3;9006;8999:16;8903:126;9042:67;9106:2;9101;9094:5;9090:14;9085:2;9081;9077:11;9042:67;:::i;:::-;9122:18;;-1:-1:-1;;;9160:12:105;;;;8353;;8320:862;;;-1:-1:-1;9201:5:105;7576:1636;-1:-1:-1;;;;;;;;7576:1636:105:o;9217:184::-;9287:6;9340:2;9328:9;9319:7;9315:23;9311:32;9308:52;;;9356:1;9353;9346:12;9308:52;-1:-1:-1;9379:16:105;;9217:184;-1:-1:-1;9217:184:105:o;9588:462::-;9630:5;9683:3;9676:4;9668:6;9664:17;9660:27;9650:55;;9701:1;9698;9691:12;9650:55;9737:6;9724:20;9768:48;9784:31;9812:2;9784:31;:::i;9768:48::-;9841:2;9832:7;9825:19;9887:3;9880:4;9875:2;9867:6;9863:15;9859:26;9856:35;9853:55;;;9904:1;9901;9894:12;9853:55;9969:2;9962:4;9954:6;9950:17;9943:4;9934:7;9930:18;9917:55;10017:1;9992:16;;;10010:4;9988:27;9981:38;;;;9996:7;9588:462;-1:-1:-1;;;9588:462:105:o;10055:884::-;10107:5;10160:3;10153:4;10145:6;10141:17;10137:27;10127:55;;10178:1;10175;10168:12;10127:55;10214:6;10201:20;10240:4;10264:58;10280:41;10318:2;10280:41;:::i;10264:58::-;10356:15;;;10442:1;10438:10;;;;10426:23;;10422:32;;;10387:12;;;;10466:15;;;10463:35;;;10494:1;10491;10484:12;10463:35;10530:2;10522:6;10518:15;10542:368;10558:6;10553:3;10550:15;10542:368;;;10644:3;10631:17;10680:18;10667:11;10664:35;10661:125;;;10740:1;10769:2;10765;10758:14;10661:125;10811:56;10863:3;10858:2;10844:11;10836:6;10832:24;10828:33;10811:56;:::i;:::-;10799:69;;-1:-1:-1;10888:12:105;;;;10575;;10542:368;;;-1:-1:-1;10928:5:105;10055:884;-1:-1:-1;;;;;;10055:884:105:o;10944:1220::-;11071:6;11079;11132:2;11120:9;11111:7;11107:23;11103:32;11100:52;;;11148:1;11145;11138:12;11100:52;11188:9;11175:23;11217:18;11258:2;11250:6;11247:14;11244:34;;;11274:1;11271;11264:12;11244:34;11312:6;11301:9;11297:22;11287:32;;11357:7;11350:4;11346:2;11342:13;11338:27;11328:55;;11379:1;11376;11369:12;11328:55;11415:2;11402:16;11437:4;11461:58;11477:41;11515:2;11477:41;:::i;11461:58::-;11553:15;;;11635:1;11631:10;;;;11623:19;;11619:28;;;11584:12;;;;11659:19;;;11656:39;;;11691:1;11688;11681:12;11656:39;11715:11;;;;11735:217;11751:6;11746:3;11743:15;11735:217;;;11831:3;11818:17;11848:31;11873:5;11848:31;:::i;:::-;11892:18;;11768:12;;;;11930;;;;11735:217;;;11971:5;-1:-1:-1;;12014:18:105;;12001:32;;-1:-1:-1;;12045:16:105;;;12042:36;;;12074:1;12071;12064:12;12042:36;;12097:61;12150:7;12139:8;12128:9;12124:24;12097:61;:::i;:::-;12087:71;;;10944:1220;;;;;:::o;12169:1201::-;12357:4;12405:2;12394:9;12390:18;12435:6;12424:9;12417:25;12461:2;12499;12494;12483:9;12479:18;12472:30;12522:6;12557;12551:13;12588:6;12580;12573:22;12626:2;12615:9;12611:18;12604:25;;12688:2;12678:6;12675:1;12671:14;12660:9;12656:30;12652:39;12638:53;;12726:2;12718:6;12714:15;12747:1;12757:584;12771:6;12768:1;12765:13;12757:584;;;12860:66;12848:9;12840:6;12836:22;12832:95;12827:3;12820:108;12957:6;12951:13;12999:2;12993:9;13030:8;13022:6;13015:24;13052:74;13117:8;13112:2;13104:6;13100:15;13095:2;13091;13087:11;13052:74;:::i;:::-;13183:2;13169:17;13188:66;13165:90;13153:103;;;;13149:112;;;-1:-1:-1;13319:12:105;;;;13284:15;;;;12793:1;12786:9;12757:584;;;-1:-1:-1;13358:6:105;;12169:1201;-1:-1:-1;;;;;;;;12169:1201:105:o;13375:390::-;13475:4;13533:11;13520:25;13623:66;13612:8;13596:14;13592:29;13588:102;13568:18;13564:127;13554:155;;13705:1;13702;13695:12;13554:155;13726:33;;;;;13375:390;-1:-1:-1;;13375:390:105:o;13770:1093::-;13826:5;13874:4;13862:9;13857:3;13853:19;13849:30;13846:50;;;13892:1;13889;13882:12;13846:50;13925:2;13919:9;13967:4;13959:6;13955:17;13991:18;14059:6;14047:10;14044:22;14039:2;14027:10;14024:18;14021:46;14018:72;;;14070:18;;:::i;:::-;14110:10;14106:2;14099:22;14139:6;14130:15;;14182:9;14169:23;14154:38;;14201:33;14226:7;14201:33;:::i;:::-;14243:23;;;14318:2;14303:18;;14290:32;;14331:33;14290:32;14331:33;:::i;:::-;14397:7;14392:2;14384:6;14380:15;14373:32;14466:2;14455:9;14451:18;14438:32;14433:2;14425:6;14421:15;14414:57;14532:2;14521:9;14517:18;14504:32;14499:2;14491:6;14487:15;14480:57;14589:3;14578:9;14574:19;14561:33;14546:48;;14603:33;14628:7;14603:33;:::i;:::-;14670:7;14664:3;14656:6;14652:16;14645:33;14729:3;14718:9;14714:19;14701:33;14687:47;;14757:2;14749:6;14746:14;14743:34;;;14773:1;14770;14763:12;14743:34;;14811:45;14852:3;14843:6;14832:9;14828:22;14811:45;:::i;:::-;14805:3;14797:6;14793:16;14786:71;;;13770:1093;;;;:::o;14868:423::-;14925:5;14973:4;14961:9;14956:3;14952:19;14948:30;14945:50;;;14991:1;14988;14981:12;14945:50;15013:22;;:::i;:::-;15004:31;;15072:9;15059:23;15091:33;15116:7;15091:33;:::i;:::-;15147:7;15140:5;15133:22;;15215:2;15204:9;15200:18;15187:32;15182:2;15175:5;15171:14;15164:56;15280:2;15269:9;15265:18;15252:32;15247:2;15240:5;15236:14;15229:56;14868:423;;;;:::o;15296:1214::-;15361:5;15414:3;15407:4;15399:6;15395:17;15391:27;15381:55;;15432:1;15429;15422:12;15381:55;15468:6;15455:20;15494:4;15518:58;15534:41;15572:2;15534:41;:::i;15518:58::-;15610:15;;;15672:4;15715:11;;;15703:24;;15699:33;;;15641:12;;;;15598:3;15744:15;;;15741:35;;;15772:1;15769;15762:12;15741:35;15808:2;15800:6;15796:15;15820:661;15836:6;15831:3;15828:15;15820:661;;;15912:2;15906:3;15901;15897:13;15893:22;15890:112;;;15956:1;15985:2;15981;15974:14;15890:112;16028:22;;:::i;:::-;16091:3;16078:17;16108:33;16133:7;16108:33;:::i;:::-;16154:22;;16225:12;;;16212:26;16196:14;;;16189:50;16262:2;16305:12;;;16292:26;16331:33;16292:26;16331:33;:::i;:::-;16384:14;;;16377:31;16421:18;;16459:12;;;;15853;;15820:661;;;-1:-1:-1;16499:5:105;;15296:1214;-1:-1:-1;;;;;;;15296:1214:105:o;16515:1053::-;16631:9;16690:4;16682:5;16666:14;16662:26;16658:37;16655:57;;;16708:1;16705;16698:12;16655:57;16736:22;;:::i;:::-;16794:5;16781:19;16819:18;16860:2;16852:6;16849:14;16846:34;;;16876:1;16873;16866:12;16846:34;16905:63;16953:14;16944:6;16937:5;16933:18;16905:63;:::i;:::-;16896:7;16889:80;17003:60;17048:14;17043:2;17036:5;17032:14;17003:60;:::i;:::-;16998:2;16989:7;16985:16;16978:86;17113:3;17106:5;17102:15;17089:29;17073:45;;17143:2;17133:8;17130:16;17127:36;;;17159:1;17156;17149:12;17127:36;17199:77;17261:14;17250:8;17243:5;17239:20;17199:77;:::i;:::-;17192:4;17183:7;17179:18;17172:105;17326:4;17319:5;17315:16;17302:30;17286:46;;17357:2;17347:8;17344:16;17341:36;;;17373:1;17370;17363:12;17341:36;;17413:54;17452:14;17441:8;17434:5;17430:20;17413:54;:::i;:::-;17406:4;17393:18;;17386:82;-1:-1:-1;17527:3:105;17516:15;;;;17503:29;17497:3;17484:17;;17477:56;-1:-1:-1;17397:7:105;16515:1053::o",
    "linkReferences": {},
    "immutableReferences": {
      "38208": [
        {
          "start": 515,
          "length": 32
        },
        {
          "start": 727,
          "length": 32
        },
        {
          "start": 1829,
          "length": 32
        },
        {
          "start": 2036,
          "length": 32
        }
      ],
      "38210": [
        {
          "start": 1662,
          "length": 32
        }
      ],
      "38213": [
        {
          "start": 1573,
          "length": 32
        }
      ],
      "38216": [
        {
          "start": 1244,
          "length": 32
        },
        {
          "start": 1422,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "multicall(address[],bytes[])": "63fb0b96",
    "owner()": "8da5cb5b",
    "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],address,bytes)": "9943fa89",
    "transferOwnership(address)": "f2fde38b",
    "unwrapWETH(address)": "89a3f136",
    "withdrawETH(address)": "690d8320"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whitelistedCaller\",\"type\":\"address\"},{\"internalType\":\"contract IReactor\",\"name\":\"_reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"contract ISwapRouter02\",\"name\":\"_swapRouter02\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MsgSenderNotReactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"tokensToApprove\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"multicallData\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"additionalValidationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalValidationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder[]\",\"name\":\"resolvedOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"fillData\",\"type\":\"bytes\"}],\"name\":\"reactorCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(address[],bytes[])\":{\"params\":{\"multicallData\":\"Pass into swapRouter02.multicall()\",\"tokensToApprove\":\"Max approve these tokens to swapRouter02\"}},\"reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],address,bytes)\":{\"params\":{\"fillData\":\"It has the below encoded: address[] memory tokensToApproveForSwapRouter02: Max approve these tokens to swapRouter02 address[] memory tokensToApproveForReactor: Max approve these tokens to reactor bytes[] memory multicallData: Pass into swapRouter02.multicall()\",\"filler\":\"This filler must be `whitelistedCaller`\",\"resolvedOrders\":\"The orders to fill\"}},\"unwrapWETH(address)\":{\"params\":{\"recipient\":\"The address receiving ETH\"}},\"withdrawETH(address)\":{\"params\":{\"recipient\":\"The recipient of the ETH\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CallerNotWhitelisted()\":[{\"notice\":\"thrown if reactorCallback is called with a non-whitelisted filler\"}],\"MsgSenderNotReactor()\":[{\"notice\":\"thrown if reactorCallback is called by an adress other than the reactor\"}],\"NativeTransferFailed()\":[{\"notice\":\"Thrown when a native transfer fails\"}]},\"kind\":\"user\",\"methods\":{\"multicall(address[],bytes[])\":{\"notice\":\"This function can be used to convert ERC20s to ETH that remains in this contract\"},\"unwrapWETH(address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to the recipient as ETH. Can only be called by owner.\"},\"withdrawETH(address)\":{\"notice\":\"Transfer all ETH in this contract to the recipient. Can only be called by owner.\"}},\"notice\":\"A fill contract that uses SwapRouter02 to execute trades\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/sample-executors/SwapRouter02Executor.sol\":\"SwapRouter02Executor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2\",\"dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/WETH.sol\":{\"keccak256\":\"0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d\",\"dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e\",\"dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT\"]},\"src/external/ISwapRouter02.sol\":{\"keccak256\":\"0x50ab9b6f7452fd6072619d386c957b2c55ace9cc3da02c7c4e0992ea304fd0f6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ffb498bc9228a2060aae0ab3ca15a104464a6a2dedd8c4199993927b8e72f8b5\",\"dweb:/ipfs/QmdECjw4UHY59q9578LeSDTVFwcqJfRmLHKHh2Y5YWnasR\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5\",\"dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b\",\"dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0xba3507a814d02b4e00e35de21f5dbb8cd9848a858dddcf5fb50185f8412fcbce\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://105bc368d448c88f6d80de6abc9128d2ded70106e1b738558b3793096d591010\",\"dweb:/ipfs/QmQau7C8U9Bht5TUtCHDiCyXhhQeRmYScv9NSCT6WaPNRi\"]},\"src/sample-executors/SwapRouter02Executor.sol\":{\"keccak256\":\"0xcec2e4fa65a4e6766d459446e5b8253a8745cb9a0adae10e2ebbdc0aa4b40a6a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://473659f3075d50fecd9625dc20e8e517e3813fa27fcce4c2fde2b27487a5c4ec\",\"dweb:/ipfs/QmbnCy9hZKVfWyRvJYJYSdyqv3e4acP6zuzEHRZwwTuWSA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_whitelistedCaller",
              "type": "address"
            },
            {
              "internalType": "contract IReactor",
              "name": "_reactor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "contract ISwapRouter02",
              "name": "_swapRouter02",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerNotWhitelisted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MsgSenderNotReactor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NativeTransferFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "tokensToApprove",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "multicallData",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResolvedOrder[]",
              "name": "resolvedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "additionalValidationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "additionalValidationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "fillData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reactorCallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrapWETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawETH"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "multicall(address[],bytes[])": {
            "params": {
              "multicallData": "Pass into swapRouter02.multicall()",
              "tokensToApprove": "Max approve these tokens to swapRouter02"
            }
          },
          "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],address,bytes)": {
            "params": {
              "fillData": "It has the below encoded: address[] memory tokensToApproveForSwapRouter02: Max approve these tokens to swapRouter02 address[] memory tokensToApproveForReactor: Max approve these tokens to reactor bytes[] memory multicallData: Pass into swapRouter02.multicall()",
              "filler": "This filler must be `whitelistedCaller`",
              "resolvedOrders": "The orders to fill"
            }
          },
          "unwrapWETH(address)": {
            "params": {
              "recipient": "The address receiving ETH"
            }
          },
          "withdrawETH(address)": {
            "params": {
              "recipient": "The recipient of the ETH"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "multicall(address[],bytes[])": {
            "notice": "This function can be used to convert ERC20s to ETH that remains in this contract"
          },
          "unwrapWETH(address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to the recipient as ETH. Can only be called by owner."
          },
          "withdrawETH(address)": {
            "notice": "Transfer all ETH in this contract to the recipient. Can only be called by owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/sample-executors/SwapRouter02Executor.sol": "SwapRouter02Executor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb",
        "urls": [
          "bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2",
          "dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/WETH.sol": {
        "keccak256": "0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514",
        "urls": [
          "bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d",
          "dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b",
        "urls": [
          "bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060",
          "dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588",
        "urls": [
          "bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e",
          "dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/external/ISwapRouter02.sol": {
        "keccak256": "0x50ab9b6f7452fd6072619d386c957b2c55ace9cc3da02c7c4e0992ea304fd0f6",
        "urls": [
          "bzz-raw://ffb498bc9228a2060aae0ab3ca15a104464a6a2dedd8c4199993927b8e72f8b5",
          "dweb:/ipfs/QmdECjw4UHY59q9578LeSDTVFwcqJfRmLHKHh2Y5YWnasR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739",
        "urls": [
          "bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5",
          "dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a",
        "urls": [
          "bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b",
          "dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0xba3507a814d02b4e00e35de21f5dbb8cd9848a858dddcf5fb50185f8412fcbce",
        "urls": [
          "bzz-raw://105bc368d448c88f6d80de6abc9128d2ded70106e1b738558b3793096d591010",
          "dweb:/ipfs/QmQau7C8U9Bht5TUtCHDiCyXhhQeRmYScv9NSCT6WaPNRi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/sample-executors/SwapRouter02Executor.sol": {
        "keccak256": "0xcec2e4fa65a4e6766d459446e5b8253a8745cb9a0adae10e2ebbdc0aa4b40a6a",
        "urls": [
          "bzz-raw://473659f3075d50fecd9625dc20e8e517e3813fa27fcce4c2fde2b27487a5c4ec",
          "dweb:/ipfs/QmbnCy9hZKVfWyRvJYJYSdyqv3e4acP6zuzEHRZwwTuWSA"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/sample-executors/SwapRouter02Executor.sol",
    "id": 38519,
    "exportedSymbols": {
      "CurrencyLibrary": [
        35886
      ],
      "ERC20": [
        34410
      ],
      "IReactor": [
        35559
      ],
      "IReactorCallback": [
        35577
      ],
      "ISwapRouter02": [
        35487
      ],
      "OutputToken": [
        35406
      ],
      "Owned": [
        34022
      ],
      "ResolvedOrder": [
        35421
      ],
      "SafeTransferLib": [
        34733
      ],
      "SwapRouter02Executor": [
        38518
      ],
      "WETH": [
        34489
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:4406:65",
    "nodes": [
      {
        "id": 38168,
        "nodeType": "PragmaDirective",
        "src": "45:23:65",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 38170,
        "nodeType": "ImportDirective",
        "src": "70:49:65",
        "nodes": [],
        "absolutePath": "lib/solmate/src/auth/Owned.sol",
        "file": "solmate/src/auth/Owned.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38519,
        "sourceUnit": 34023,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38169,
              "name": "Owned",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34022,
              "src": "78:5:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38172,
        "nodeType": "ImportDirective",
        "src": "120:70:65",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/src/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38519,
        "sourceUnit": 34734,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38171,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34733,
              "src": "128:15:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38174,
        "nodeType": "ImportDirective",
        "src": "191:51:65",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/src/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38519,
        "sourceUnit": 34411,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38173,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34410,
              "src": "199:5:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38176,
        "nodeType": "ImportDirective",
        "src": "243:49:65",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/WETH.sol",
        "file": "solmate/src/tokens/WETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38519,
        "sourceUnit": 34490,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38175,
              "name": "WETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34489,
              "src": "251:4:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38178,
        "nodeType": "ImportDirective",
        "src": "293:68:65",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactorCallback.sol",
        "file": "../interfaces/IReactorCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38519,
        "sourceUnit": 35578,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38177,
              "name": "IReactorCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35577,
              "src": "301:16:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38180,
        "nodeType": "ImportDirective",
        "src": "362:52:65",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactor.sol",
        "file": "../interfaces/IReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38519,
        "sourceUnit": 35560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38179,
              "name": "IReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35559,
              "src": "370:8:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38182,
        "nodeType": "ImportDirective",
        "src": "415:59:65",
        "nodes": [],
        "absolutePath": "src/lib/CurrencyLibrary.sol",
        "file": "../lib/CurrencyLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38519,
        "sourceUnit": 35887,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38181,
              "name": "CurrencyLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35886,
              "src": "423:15:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38185,
        "nodeType": "ImportDirective",
        "src": "475:70:65",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38519,
        "sourceUnit": 35427,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38183,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35421,
              "src": "483:13:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 38184,
              "name": "OutputToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35406,
              "src": "498:11:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38187,
        "nodeType": "ImportDirective",
        "src": "546:60:65",
        "nodes": [],
        "absolutePath": "src/external/ISwapRouter02.sol",
        "file": "../external/ISwapRouter02.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38519,
        "sourceUnit": 35488,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38186,
              "name": "ISwapRouter02",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35487,
              "src": "554:13:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38518,
        "nodeType": "ContractDefinition",
        "src": "677:3773:65",
        "nodes": [
          {
            "id": 38196,
            "nodeType": "UsingForDirective",
            "src": "740:32:65",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 38193,
              "name": "SafeTransferLib",
              "nameLocations": [
                "746:15:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34733,
              "src": "746:15:65"
            },
            "typeName": {
              "id": 38195,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38194,
                "name": "ERC20",
                "nameLocations": [
                  "766:5:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34410,
                "src": "766:5:65"
              },
              "referencedDeclaration": 34410,
              "src": "766:5:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$34410",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 38199,
            "nodeType": "UsingForDirective",
            "src": "777:34:65",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 38197,
              "name": "CurrencyLibrary",
              "nameLocations": [
                "783:15:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35886,
              "src": "783:15:65"
            },
            "typeName": {
              "id": 38198,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "803:7:65",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 38202,
            "nodeType": "ErrorDefinition",
            "src": "899:29:65",
            "nodes": [],
            "documentation": {
              "id": 38200,
              "nodeType": "StructuredDocumentation",
              "src": "817:77:65",
              "text": "@notice thrown if reactorCallback is called with a non-whitelisted filler"
            },
            "errorSelector": "8c6e5d71",
            "name": "CallerNotWhitelisted",
            "nameLocation": "905:20:65",
            "parameters": {
              "id": 38201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:2:65"
            }
          },
          {
            "id": 38205,
            "nodeType": "ErrorDefinition",
            "src": "1021:28:65",
            "nodes": [],
            "documentation": {
              "id": 38203,
              "nodeType": "StructuredDocumentation",
              "src": "933:83:65",
              "text": "@notice thrown if reactorCallback is called by an adress other than the reactor"
            },
            "errorSelector": "933fe52f",
            "name": "MsgSenderNotReactor",
            "nameLocation": "1027:19:65",
            "parameters": {
              "id": 38204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1046:2:65"
            }
          },
          {
            "id": 38208,
            "nodeType": "VariableDeclaration",
            "src": "1055:44:65",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "swapRouter02",
            "nameLocation": "1087:12:65",
            "scope": 38518,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
              "typeString": "contract ISwapRouter02"
            },
            "typeName": {
              "id": 38207,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38206,
                "name": "ISwapRouter02",
                "nameLocations": [
                  "1055:13:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35487,
                "src": "1055:13:65"
              },
              "referencedDeclaration": 35487,
              "src": "1055:13:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                "typeString": "contract ISwapRouter02"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38210,
            "nodeType": "VariableDeclaration",
            "src": "1105:43:65",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "whitelistedCaller",
            "nameLocation": "1131:17:65",
            "scope": 38518,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38209,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1105:7:65",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38213,
            "nodeType": "VariableDeclaration",
            "src": "1154:34:65",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "reactor",
            "nameLocation": "1181:7:65",
            "scope": 38518,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IReactor_$35559",
              "typeString": "contract IReactor"
            },
            "typeName": {
              "id": 38212,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38211,
                "name": "IReactor",
                "nameLocations": [
                  "1154:8:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35559,
                "src": "1154:8:65"
              },
              "referencedDeclaration": 35559,
              "src": "1154:8:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IReactor_$35559",
                "typeString": "contract IReactor"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38216,
            "nodeType": "VariableDeclaration",
            "src": "1194:27:65",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "weth",
            "nameLocation": "1217:4:65",
            "scope": 38518,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WETH_$34489",
              "typeString": "contract WETH"
            },
            "typeName": {
              "id": 38215,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38214,
                "name": "WETH",
                "nameLocations": [
                  "1194:4:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34489,
                "src": "1194:4:65"
              },
              "referencedDeclaration": 34489,
              "src": "1194:4:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WETH_$34489",
                "typeString": "contract WETH"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38256,
            "nodeType": "FunctionDefinition",
            "src": "1228:304:65",
            "nodes": [],
            "body": {
              "id": 38255,
              "nodeType": "Block",
              "src": "1358:174:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38232,
                      "name": "whitelistedCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38210,
                      "src": "1368:17:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38233,
                      "name": "_whitelistedCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38218,
                      "src": "1388:18:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1368:38:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38235,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:38:65"
                },
                {
                  "expression": {
                    "id": 38238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38236,
                      "name": "reactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38213,
                      "src": "1416:7:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IReactor_$35559",
                        "typeString": "contract IReactor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38237,
                      "name": "_reactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38221,
                      "src": "1426:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IReactor_$35559",
                        "typeString": "contract IReactor"
                      }
                    },
                    "src": "1416:18:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReactor_$35559",
                      "typeString": "contract IReactor"
                    }
                  },
                  "id": 38239,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:18:65"
                },
                {
                  "expression": {
                    "id": 38242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38240,
                      "name": "swapRouter02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38208,
                      "src": "1444:12:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                        "typeString": "contract ISwapRouter02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38241,
                      "name": "_swapRouter02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38226,
                      "src": "1459:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                        "typeString": "contract ISwapRouter02"
                      }
                    },
                    "src": "1444:28:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                      "typeString": "contract ISwapRouter02"
                    }
                  },
                  "id": 38243,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:28:65"
                },
                {
                  "expression": {
                    "id": 38253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38244,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38216,
                      "src": "1482:4:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WETH_$34489",
                        "typeString": "contract WETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 38248,
                                  "name": "_swapRouter02",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38226,
                                  "src": "1502:13:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                                    "typeString": "contract ISwapRouter02"
                                  }
                                },
                                "id": 38249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1516:5:65",
                                "memberName": "WETH9",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35486,
                                "src": "1502:19:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 38250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1502:21:65",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1494:8:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 38246,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1494:8:65",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1494:30:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 38245,
                        "name": "WETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34489,
                        "src": "1489:4:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WETH_$34489_$",
                          "typeString": "type(contract WETH)"
                        }
                      },
                      "id": 38252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1489:36:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WETH_$34489",
                        "typeString": "contract WETH"
                      }
                    },
                    "src": "1482:43:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WETH_$34489",
                      "typeString": "contract WETH"
                    }
                  },
                  "id": 38254,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:43:65"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 38229,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38223,
                    "src": "1346:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 38230,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 38228,
                  "name": "Owned",
                  "nameLocations": [
                    "1340:5:65"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34022,
                  "src": "1340:5:65"
                },
                "nodeType": "ModifierInvocation",
                "src": "1340:13:65"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38218,
                  "mutability": "mutable",
                  "name": "_whitelistedCaller",
                  "nameLocation": "1248:18:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38256,
                  "src": "1240:26:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38221,
                  "mutability": "mutable",
                  "name": "_reactor",
                  "nameLocation": "1277:8:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38256,
                  "src": "1268:17:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IReactor_$35559",
                    "typeString": "contract IReactor"
                  },
                  "typeName": {
                    "id": 38220,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38219,
                      "name": "IReactor",
                      "nameLocations": [
                        "1268:8:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35559,
                      "src": "1268:8:65"
                    },
                    "referencedDeclaration": 35559,
                    "src": "1268:8:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReactor_$35559",
                      "typeString": "contract IReactor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38223,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1295:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38256,
                  "src": "1287:14:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1287:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38226,
                  "mutability": "mutable",
                  "name": "_swapRouter02",
                  "nameLocation": "1317:13:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38256,
                  "src": "1303:27:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                    "typeString": "contract ISwapRouter02"
                  },
                  "typeName": {
                    "id": 38225,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38224,
                      "name": "ISwapRouter02",
                      "nameLocations": [
                        "1303:13:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35487,
                      "src": "1303:13:65"
                    },
                    "referencedDeclaration": 35487,
                    "src": "1303:13:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                      "typeString": "contract ISwapRouter02"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:92:65"
            },
            "returnParameters": {
              "id": 38231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:0:65"
            },
            "scope": 38518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38403,
            "nodeType": "FunctionDefinition",
            "src": "1958:1086:65",
            "nodes": [],
            "body": {
              "id": 38402,
              "nodeType": "Block",
              "src": "2086:958:65",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 38274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 38268,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2100:3:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 38269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2104:6:65",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2100:10:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 38272,
                          "name": "reactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38213,
                          "src": "2122:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IReactor_$35559",
                            "typeString": "contract IReactor"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IReactor_$35559",
                            "typeString": "contract IReactor"
                          }
                        ],
                        "id": 38271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2114:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 38270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2114:7:65",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 38273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2114:16:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2100:30:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38279,
                  "nodeType": "IfStatement",
                  "src": "2096:89:65",
                  "trueBody": {
                    "id": 38278,
                    "nodeType": "Block",
                    "src": "2132:53:65",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38275,
                            "name": "MsgSenderNotReactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38205,
                            "src": "2153:19:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2153:21:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38277,
                        "nodeType": "RevertStatement",
                        "src": "2146:28:65"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 38282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38280,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38263,
                      "src": "2198:6:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 38281,
                      "name": "whitelistedCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38210,
                      "src": "2208:17:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2198:27:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38287,
                  "nodeType": "IfStatement",
                  "src": "2194:87:65",
                  "trueBody": {
                    "id": 38286,
                    "nodeType": "Block",
                    "src": "2227:54:65",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38283,
                            "name": "CallerNotWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38202,
                            "src": "2248:20:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2248:22:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38285,
                        "nodeType": "RevertStatement",
                        "src": "2241:29:65"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    38292,
                    38295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38292,
                      "mutability": "mutable",
                      "name": "tokensToApproveForSwapRouter02",
                      "nameLocation": "2309:30:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 38402,
                      "src": "2292:47:65",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2292:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38291,
                        "nodeType": "ArrayTypeName",
                        "src": "2292:9:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38295,
                      "mutability": "mutable",
                      "name": "multicallData",
                      "nameLocation": "2356:13:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 38402,
                      "src": "2341:28:65",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38293,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2341:5:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 38294,
                        "nodeType": "ArrayTypeName",
                        "src": "2341:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38307,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38298,
                        "name": "fillData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38265,
                        "src": "2396:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 38300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2407:7:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 38299,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2407:7:65",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 38301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2407:9:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 38303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2418:5:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 38302,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2418:5:65",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 38304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2418:7:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(bytes memory[] memory)"
                            }
                          }
                        ],
                        "id": 38305,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2406:20:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address[] memory),type(bytes memory[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address[] memory),type(bytes memory[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 38296,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2385:3:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 38297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2389:6:65",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2385:10:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 38306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2385:42:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,bytes memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2291:136:65"
                },
                {
                  "body": {
                    "id": 38336,
                    "nodeType": "Block",
                    "src": "2506:119:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 38327,
                                  "name": "swapRouter02",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38208,
                                  "src": "2581:12:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                                    "typeString": "contract ISwapRouter02"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                                    "typeString": "contract ISwapRouter02"
                                  }
                                ],
                                "id": 38326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2573:7:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 38325,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2573:7:65",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 38328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2573:21:65",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 38331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2601:7:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 38330,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2601:7:65",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 38329,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "2596:4:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 38332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2596:13:65",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 38333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2610:3:65",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "2596:17:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 38320,
                                    "name": "tokensToApproveForSwapRouter02",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38292,
                                    "src": "2526:30:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 38322,
                                  "indexExpression": {
                                    "id": 38321,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38309,
                                    "src": "2557:1:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2526:33:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 38319,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34410,
                                "src": "2520:5:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$34410_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 38323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2520:40:65",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$34410",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 38324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2561:11:65",
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34732,
                            "src": "2520:52:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34410_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$34410_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 38334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2520:94:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38335,
                        "nodeType": "ExpressionStatement",
                        "src": "2520:94:65"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38312,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38309,
                      "src": "2458:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 38313,
                        "name": "tokensToApproveForSwapRouter02",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38292,
                        "src": "2462:30:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 38314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2493:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2462:37:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2458:41:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38337,
                  "initializationExpression": {
                    "assignments": [
                      38309
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 38309,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2451:1:65",
                        "nodeType": "VariableDeclaration",
                        "scope": 38337,
                        "src": "2443:9:65",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2443:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 38311,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 38310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2455:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2443:13:65"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 38317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2501:3:65",
                      "subExpression": {
                        "id": 38316,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38309,
                        "src": "2501:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38318,
                    "nodeType": "ExpressionStatement",
                    "src": "2501:3:65"
                  },
                  "nodeType": "ForStatement",
                  "src": "2438:187:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 38343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2663:7:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 38342,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2663:7:65",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 38341,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2658:4:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2658:13:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 38345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2672:3:65",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2658:17:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38346,
                        "name": "multicallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38295,
                        "src": "2677:13:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 38338,
                        "name": "swapRouter02",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38208,
                        "src": "2635:12:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                          "typeString": "contract ISwapRouter02"
                        }
                      },
                      "id": 38340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2648:9:65",
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35462,
                      "src": "2635:22:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,bytes memory[] memory) payable external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 38347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2635:56:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 38348,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:56:65"
                },
                {
                  "body": {
                    "id": 38400,
                    "nodeType": "Block",
                    "src": "2754:284:65",
                    "statements": [
                      {
                        "assignments": [
                          38362
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 38362,
                            "mutability": "mutable",
                            "name": "order",
                            "nameLocation": "2789:5:65",
                            "nodeType": "VariableDeclaration",
                            "scope": 38400,
                            "src": "2768:26:65",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$35421_memory_ptr",
                              "typeString": "struct ResolvedOrder"
                            },
                            "typeName": {
                              "id": 38361,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 38360,
                                "name": "ResolvedOrder",
                                "nameLocations": [
                                  "2768:13:65"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 35421,
                                "src": "2768:13:65"
                              },
                              "referencedDeclaration": 35421,
                              "src": "2768:13:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResolvedOrder_$35421_storage_ptr",
                                "typeString": "struct ResolvedOrder"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 38366,
                        "initialValue": {
                          "baseExpression": {
                            "id": 38363,
                            "name": "resolvedOrders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38261,
                            "src": "2797:14:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35421_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct ResolvedOrder calldata[] calldata"
                            }
                          },
                          "id": 38365,
                          "indexExpression": {
                            "id": 38364,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38350,
                            "src": "2812:1:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2797:17:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$35421_calldata_ptr",
                            "typeString": "struct ResolvedOrder calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2768:46:65"
                      },
                      {
                        "body": {
                          "id": 38398,
                          "nodeType": "Block",
                          "src": "2879:149:65",
                          "statements": [
                            {
                              "assignments": [
                                38381
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 38381,
                                  "mutability": "mutable",
                                  "name": "output",
                                  "nameLocation": "2916:6:65",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 38398,
                                  "src": "2897:25:65",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OutputToken_$35406_memory_ptr",
                                    "typeString": "struct OutputToken"
                                  },
                                  "typeName": {
                                    "id": 38380,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 38379,
                                      "name": "OutputToken",
                                      "nameLocations": [
                                        "2897:11:65"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 35406,
                                      "src": "2897:11:65"
                                    },
                                    "referencedDeclaration": 35406,
                                    "src": "2897:11:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OutputToken_$35406_storage_ptr",
                                      "typeString": "struct OutputToken"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 38386,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 38382,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38362,
                                    "src": "2925:5:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ResolvedOrder_$35421_memory_ptr",
                                      "typeString": "struct ResolvedOrder memory"
                                    }
                                  },
                                  "id": 38383,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2931:7:65",
                                  "memberName": "outputs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 35416,
                                  "src": "2925:13:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_OutputToken_$35406_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct OutputToken memory[] memory"
                                  }
                                },
                                "id": 38385,
                                "indexExpression": {
                                  "id": 38384,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38368,
                                  "src": "2939:1:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2925:16:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OutputToken_$35406_memory_ptr",
                                  "typeString": "struct OutputToken memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2897:44:65"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 38392,
                                      "name": "output",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38381,
                                      "src": "2981:6:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OutputToken_$35406_memory_ptr",
                                        "typeString": "struct OutputToken memory"
                                      }
                                    },
                                    "id": 38393,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2988:9:65",
                                    "memberName": "recipient",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 35405,
                                    "src": "2981:16:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 38394,
                                      "name": "output",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38381,
                                      "src": "2999:6:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OutputToken_$35406_memory_ptr",
                                        "typeString": "struct OutputToken memory"
                                      }
                                    },
                                    "id": 38395,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3006:6:65",
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 35403,
                                    "src": "2999:13:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 38387,
                                      "name": "output",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38381,
                                      "src": "2959:6:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OutputToken_$35406_memory_ptr",
                                        "typeString": "struct OutputToken memory"
                                      }
                                    },
                                    "id": 38390,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2966:5:65",
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 35401,
                                    "src": "2959:12:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 38391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2972:8:65",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 35824,
                                  "src": "2959:21:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 38396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2959:54:65",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 38397,
                              "nodeType": "ExpressionStatement",
                              "src": "2959:54:65"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 38375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 38371,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38368,
                            "src": "2848:1:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 38372,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38362,
                                "src": "2852:5:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$35421_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "id": 38373,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2858:7:65",
                              "memberName": "outputs",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35416,
                              "src": "2852:13:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_OutputToken_$35406_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct OutputToken memory[] memory"
                              }
                            },
                            "id": 38374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2866:6:65",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2852:20:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2848:24:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 38399,
                        "initializationExpression": {
                          "assignments": [
                            38368
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 38368,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "2841:1:65",
                              "nodeType": "VariableDeclaration",
                              "scope": 38399,
                              "src": "2833:9:65",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 38367,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2833:7:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 38370,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 38369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2845:1:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2833:13:65"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 38377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2874:3:65",
                            "subExpression": {
                              "id": 38376,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38368,
                              "src": "2874:1:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 38378,
                          "nodeType": "ExpressionStatement",
                          "src": "2874:3:65"
                        },
                        "nodeType": "ForStatement",
                        "src": "2828:200:65"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38353,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38350,
                      "src": "2722:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 38354,
                        "name": "resolvedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38261,
                        "src": "2726:14:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35421_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ResolvedOrder calldata[] calldata"
                        }
                      },
                      "id": 38355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2741:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2726:21:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2722:25:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38401,
                  "initializationExpression": {
                    "assignments": [
                      38350
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 38350,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2715:1:65",
                        "nodeType": "VariableDeclaration",
                        "scope": 38401,
                        "src": "2707:9:65",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2707:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 38352,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 38351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2719:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2707:13:65"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 38358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2749:3:65",
                      "subExpression": {
                        "id": 38357,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38350,
                        "src": "2749:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38359,
                    "nodeType": "ExpressionStatement",
                    "src": "2749:3:65"
                  },
                  "nodeType": "ForStatement",
                  "src": "2702:336:65"
                }
              ]
            },
            "baseFunctions": [
              35576
            ],
            "documentation": {
              "id": 38257,
              "nodeType": "StructuredDocumentation",
              "src": "1538:415:65",
              "text": "@param resolvedOrders The orders to fill\n @param filler This filler must be `whitelistedCaller`\n @param fillData It has the below encoded:\n address[] memory tokensToApproveForSwapRouter02: Max approve these tokens to swapRouter02\n address[] memory tokensToApproveForReactor: Max approve these tokens to reactor\n bytes[] memory multicallData: Pass into swapRouter02.multicall()"
            },
            "functionSelector": "9943fa89",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reactorCallback",
            "nameLocation": "1967:15:65",
            "parameters": {
              "id": 38266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38261,
                  "mutability": "mutable",
                  "name": "resolvedOrders",
                  "nameLocation": "2008:14:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38403,
                  "src": "1983:39:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35421_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct ResolvedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38259,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 38258,
                        "name": "ResolvedOrder",
                        "nameLocations": [
                          "1983:13:65"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 35421,
                        "src": "1983:13:65"
                      },
                      "referencedDeclaration": 35421,
                      "src": "1983:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$35421_storage_ptr",
                        "typeString": "struct ResolvedOrder"
                      }
                    },
                    "id": 38260,
                    "nodeType": "ArrayTypeName",
                    "src": "1983:15:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35421_storage_$dyn_storage_ptr",
                      "typeString": "struct ResolvedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38263,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "2032:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38403,
                  "src": "2024:14:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38265,
                  "mutability": "mutable",
                  "name": "fillData",
                  "nameLocation": "2055:8:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38403,
                  "src": "2040:23:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38264,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1982:82:65"
            },
            "returnParameters": {
              "id": 38267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2086:0:65"
            },
            "scope": 38518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38456,
            "nodeType": "FunctionDefinition",
            "src": "3283:336:65",
            "nodes": [],
            "body": {
              "id": 38455,
              "nodeType": "Block",
              "src": "3387:232:65",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 38442,
                    "nodeType": "Block",
                    "src": "3450:97:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 38433,
                                  "name": "swapRouter02",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38208,
                                  "src": "3503:12:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                                    "typeString": "contract ISwapRouter02"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                                    "typeString": "contract ISwapRouter02"
                                  }
                                ],
                                "id": 38432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3495:7:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 38431,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3495:7:65",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 38434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3495:21:65",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 38437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3523:7:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 38436,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3523:7:65",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 38435,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3518:4:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 38438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3518:13:65",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 38439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3532:3:65",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "3518:17:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 38427,
                                "name": "tokensToApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38408,
                                "src": "3464:15:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC20_$34410_$dyn_calldata_ptr",
                                  "typeString": "contract ERC20[] calldata"
                                }
                              },
                              "id": 38429,
                              "indexExpression": {
                                "id": 38428,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38417,
                                "src": "3480:1:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3464:18:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$34410",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 38430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3483:11:65",
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34732,
                            "src": "3464:30:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34410_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$34410_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 38440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3464:72:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38441,
                        "nodeType": "ExpressionStatement",
                        "src": "3464:72:65"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38420,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38417,
                      "src": "3417:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 38421,
                        "name": "tokensToApprove",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38408,
                        "src": "3421:15:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$34410_$dyn_calldata_ptr",
                          "typeString": "contract ERC20[] calldata"
                        }
                      },
                      "id": 38422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3437:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3421:22:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3417:26:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38443,
                  "initializationExpression": {
                    "assignments": [
                      38417
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 38417,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3410:1:65",
                        "nodeType": "VariableDeclaration",
                        "scope": 38443,
                        "src": "3402:9:65",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3402:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 38419,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 38418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3414:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3402:13:65"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 38425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3445:3:65",
                      "subExpression": {
                        "id": 38424,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38417,
                        "src": "3445:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38426,
                    "nodeType": "ExpressionStatement",
                    "src": "3445:3:65"
                  },
                  "nodeType": "ForStatement",
                  "src": "3397:150:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 38449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3584:7:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 38448,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3584:7:65",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 38447,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3579:4:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3579:13:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 38451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3593:3:65",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3579:17:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38452,
                        "name": "multicallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38411,
                        "src": "3598:13:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 38444,
                        "name": "swapRouter02",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38208,
                        "src": "3556:12:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter02_$35487",
                          "typeString": "contract ISwapRouter02"
                        }
                      },
                      "id": 38446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3569:9:65",
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35462,
                      "src": "3556:22:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,bytes memory[] memory) payable external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 38453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3556:56:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 38454,
                  "nodeType": "ExpressionStatement",
                  "src": "3556:56:65"
                }
              ]
            },
            "documentation": {
              "id": 38404,
              "nodeType": "StructuredDocumentation",
              "src": "3050:228:65",
              "text": "@notice This function can be used to convert ERC20s to ETH that remains in this contract\n @param tokensToApprove Max approve these tokens to swapRouter02\n @param multicallData Pass into swapRouter02.multicall()"
            },
            "functionSelector": "63fb0b96",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38414,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38413,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3377:9:65"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33985,
                  "src": "3377:9:65"
                },
                "nodeType": "ModifierInvocation",
                "src": "3377:9:65"
              }
            ],
            "name": "multicall",
            "nameLocation": "3292:9:65",
            "parameters": {
              "id": 38412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38408,
                  "mutability": "mutable",
                  "name": "tokensToApprove",
                  "nameLocation": "3319:15:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38456,
                  "src": "3302:32:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC20_$34410_$dyn_calldata_ptr",
                    "typeString": "contract ERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38406,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 38405,
                        "name": "ERC20",
                        "nameLocations": [
                          "3302:5:65"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34410,
                        "src": "3302:5:65"
                      },
                      "referencedDeclaration": 34410,
                      "src": "3302:5:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34410",
                        "typeString": "contract ERC20"
                      }
                    },
                    "id": 38407,
                    "nodeType": "ArrayTypeName",
                    "src": "3302:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$34410_$dyn_storage_ptr",
                      "typeString": "contract ERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38411,
                  "mutability": "mutable",
                  "name": "multicallData",
                  "nameLocation": "3353:13:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38456,
                  "src": "3336:30:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38409,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3336:5:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 38410,
                    "nodeType": "ArrayTypeName",
                    "src": "3336:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3301:66:65"
            },
            "returnParameters": {
              "id": 38415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3387:0:65"
            },
            "scope": 38518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38492,
            "nodeType": "FunctionDefinition",
            "src": "3796:238:65",
            "nodes": [],
            "body": {
              "id": 38491,
              "nodeType": "Block",
              "src": "3854:180:65",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38465,
                      "mutability": "mutable",
                      "name": "balanceWETH",
                      "nameLocation": "3872:11:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 38491,
                      "src": "3864:19:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38464,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3864:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38473,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38470,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3909:4:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter02Executor_$38518",
                              "typeString": "contract SwapRouter02Executor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter02Executor_$38518",
                              "typeString": "contract SwapRouter02Executor"
                            }
                          ],
                          "id": 38469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3901:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3901:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3901:13:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38466,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38216,
                        "src": "3886:4:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WETH_$34489",
                          "typeString": "contract WETH"
                        }
                      },
                      "id": 38467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3891:9:65",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34053,
                      "src": "3886:14:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 38472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3886:29:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3864:51:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38477,
                        "name": "balanceWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38465,
                        "src": "3940:11:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38474,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38216,
                        "src": "3926:4:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WETH_$34489",
                          "typeString": "contract WETH"
                        }
                      },
                      "id": 38476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3931:8:65",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34481,
                      "src": "3926:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 38478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3926:26:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38479,
                  "nodeType": "ExpressionStatement",
                  "src": "3926:26:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38483,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38459,
                        "src": "3994:9:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 38486,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4013:4:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapRouter02Executor_$38518",
                                "typeString": "contract SwapRouter02Executor"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapRouter02Executor_$38518",
                                "typeString": "contract SwapRouter02Executor"
                              }
                            ],
                            "id": 38485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4005:7:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38484,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4005:7:65",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4005:13:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4019:7:65",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4005:21:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38480,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34733,
                        "src": "3962:15:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$34733_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 38482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3978:15:65",
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34670,
                      "src": "3962:31:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 38489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3962:65:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38490,
                  "nodeType": "ExpressionStatement",
                  "src": "3962:65:65"
                }
              ]
            },
            "documentation": {
              "id": 38457,
              "nodeType": "StructuredDocumentation",
              "src": "3625:166:65",
              "text": "@notice Unwraps the contract's WETH9 balance and sends it to the recipient as ETH. Can only be called by owner.\n @param recipient The address receiving ETH"
            },
            "functionSelector": "89a3f136",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38462,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38461,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3844:9:65"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33985,
                  "src": "3844:9:65"
                },
                "nodeType": "ModifierInvocation",
                "src": "3844:9:65"
              }
            ],
            "name": "unwrapWETH",
            "nameLocation": "3805:10:65",
            "parameters": {
              "id": 38460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38459,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3824:9:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38492,
                  "src": "3816:17:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3816:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3815:19:65"
            },
            "returnParameters": {
              "id": 38463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3854:0:65"
            },
            "scope": 38518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38512,
            "nodeType": "FunctionDefinition",
            "src": "4187:141:65",
            "nodes": [],
            "body": {
              "id": 38511,
              "nodeType": "Block",
              "src": "4246:82:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38503,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38495,
                        "src": "4288:9:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 38506,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4307:4:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapRouter02Executor_$38518",
                                "typeString": "contract SwapRouter02Executor"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapRouter02Executor_$38518",
                                "typeString": "contract SwapRouter02Executor"
                              }
                            ],
                            "id": 38505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4299:7:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38504,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4299:7:65",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4299:13:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4313:7:65",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4299:21:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38500,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34733,
                        "src": "4256:15:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$34733_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 38502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4272:15:65",
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34670,
                      "src": "4256:31:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 38509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4256:65:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38510,
                  "nodeType": "ExpressionStatement",
                  "src": "4256:65:65"
                }
              ]
            },
            "documentation": {
              "id": 38493,
              "nodeType": "StructuredDocumentation",
              "src": "4040:142:65",
              "text": "@notice Transfer all ETH in this contract to the recipient. Can only be called by owner.\n @param recipient The recipient of the ETH"
            },
            "functionSelector": "690d8320",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38497,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4236:9:65"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33985,
                  "src": "4236:9:65"
                },
                "nodeType": "ModifierInvocation",
                "src": "4236:9:65"
              }
            ],
            "name": "withdrawETH",
            "nameLocation": "4196:11:65",
            "parameters": {
              "id": 38496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38495,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4216:9:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38512,
                  "src": "4208:17:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4208:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4207:19:65"
            },
            "returnParameters": {
              "id": 38499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4246:0:65"
            },
            "scope": 38518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38517,
            "nodeType": "FunctionDefinition",
            "src": "4419:29:65",
            "nodes": [],
            "body": {
              "id": 38516,
              "nodeType": "Block",
              "src": "4446:2:65",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 38513,
              "nodeType": "StructuredDocumentation",
              "src": "4334:80:65",
              "text": "@notice Necessary for this contract to receive ETH when calling unwrapWETH()"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4426:2:65"
            },
            "returnParameters": {
              "id": 38515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4446:0:65"
            },
            "scope": 38518,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38189,
              "name": "IReactorCallback",
              "nameLocations": [
                "710:16:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35577,
              "src": "710:16:65"
            },
            "id": 38190,
            "nodeType": "InheritanceSpecifier",
            "src": "710:16:65"
          },
          {
            "baseName": {
              "id": 38191,
              "name": "Owned",
              "nameLocations": [
                "728:5:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34022,
              "src": "728:5:65"
            },
            "id": 38192,
            "nodeType": "InheritanceSpecifier",
            "src": "728:5:65"
          }
        ],
        "canonicalName": "SwapRouter02Executor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 38188,
          "nodeType": "StructuredDocumentation",
          "src": "608:69:65",
          "text": "@notice A fill contract that uses SwapRouter02 to execute trades"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38518,
          34022,
          35577
        ],
        "name": "SwapRouter02Executor",
        "nameLocation": "686:20:65",
        "scope": 38519,
        "usedErrors": [
          35753,
          38202,
          38205
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 65
}