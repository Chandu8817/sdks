{
  "abi": [
    {
      "inputs": [],
      "name": "OrdersLengthIncorrect",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        }
      ],
      "name": "getReactor",
      "outputs": [
        {
          "internalType": "contract IReactor",
          "name": "reactor",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "validationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder",
          "name": "result",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "validationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder[]",
          "name": "resolvedOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "reactorCallback",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610e72806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d69146100465780637671d07b1461006f5780639943fa89146100b0575b600080fd5b6100596100543660046104e2565b6100c5565b604051610066919061061e565b60405180910390f35b61008b61007d366004610748565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6100c36100be36600461095b565b610221565b005b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040838101518401810151815180830183528581526020808201869052835190810184526000815292517f05afc97700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216926305afc977926101af92913091600401610afb565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b50610217816102c4565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216301461024357600080fd5b825160011461027e576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360008151811061029357610293610b8d565b60200260200101516040516020016102ab919061061e565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561034057815182602001fd5b8180602001905181019061021b9190610d6a565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103ab576103ab610359565b60405290565b6040516060810167ffffffffffffffff811182821017156103ab576103ab610359565b60405160a0810167ffffffffffffffff811182821017156103ab576103ab610359565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561043e5761043e610359565b604052919050565b600067ffffffffffffffff82111561046057610460610359565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261049d57600080fd5b81356104b06104ab82610446565b6103f7565b8181528460208386010111156104c557600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104f557600080fd5b823567ffffffffffffffff8082111561050d57600080fd5b6105198683870161048c565b9350602085013591508082111561052f57600080fd5b5061053c8582860161048c565b9150509250929050565b60005b83811015610561578181015183820152602001610549565b50506000910152565b60008151808452610582816020860160208601610546565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015610613578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040918201511690880152606090960195908201906001016105c8565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a084015261069a6101c084018261056a565b905060208401516106d86040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a086015261071383836105b4565b925060608601519150808584030160c086015250610731828261056a565b915050608084015160e08401528091505092915050565b60006020828403121561075a57600080fd5b813567ffffffffffffffff81111561077157600080fd5b61077d8482850161048c565b949350505050565b600067ffffffffffffffff82111561079f5761079f610359565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff811681146107cb57600080fd5b50565b8035610354816107a9565b600060c082840312156107eb57600080fd5b6107f3610388565b90508135610800816107a9565b81526020820135610810816107a9565b8060208301525060408201356040820152606082013560608201526080820135610839816107a9565b608082015260a082013567ffffffffffffffff81111561085857600080fd5b6108648482850161048c565b60a08301525092915050565b60006060828403121561088257600080fd5b61088a6103b1565b90508135610897816107a9565b80825250602082013560208201526040820135604082015292915050565b600082601f8301126108c657600080fd5b813560206108d66104ab83610785565b828152606092830285018201928282019190878511156108f557600080fd5b8387015b8581101561094e5781818a0312156109115760008081fd5b6109196103b1565b8135610924816107a9565b8152818601358682015260408083013561093d816107a9565b9082015284529284019281016108f9565b5090979650505050505050565b60008060006060848603121561097057600080fd5b833567ffffffffffffffff8082111561098857600080fd5b818601915086601f83011261099c57600080fd5b813560206109ac6104ab83610785565b82815260059290921b8401810191818101908a8411156109cb57600080fd5b8286015b84811015610abc578035868111156109e657600080fd5b870160e0818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215610a1a57600080fd5b610a226103d4565b8582013588811115610a3357600080fd5b610a418f88838601016107d9565b825250610a518e60408401610870565b8682015260a082013588811115610a685760008081fd5b610a768f88838601016108b5565b60408301525060c082013588811115610a8f5760008081fd5b610a9d8f888386010161048c565b60608301525060e09190910135608082015283529183019183016109cf565b509750610acc90508882016107ce565b955050506040860135915080821115610ae457600080fd5b50610af18682870161048c565b9150509250925092565b606081526000845160406060840152610b1760a084018261056a565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b52828261056a565b91505073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610b83818561056a565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610bcd57600080fd5b8151610bdb6104ab82610446565b818152846020838601011115610bf057600080fd5b61077d826020830160208701610546565b600060c08284031215610c1357600080fd5b610c1b610388565b90508151610c28816107a9565b81526020820151610c38816107a9565b8060208301525060408201516040820152606082015160608201526080820151610c61816107a9565b608082015260a082015167ffffffffffffffff811115610c8057600080fd5b61086484828501610bbc565b600060608284031215610c9e57600080fd5b610ca66103b1565b90508151610cb3816107a9565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610ce257600080fd5b81516020610cf26104ab83610785565b82815260609283028501820192828201919087851115610d1157600080fd5b8387015b8581101561094e5781818a031215610d2d5760008081fd5b610d356103b1565b8151610d40816107a9565b81528186015186820152604080830151610d59816107a9565b908201528452928401928101610d15565b600060208284031215610d7c57600080fd5b815167ffffffffffffffff80821115610d9457600080fd5b9083019060e08286031215610da857600080fd5b610db06103d4565b825182811115610dbf57600080fd5b610dcb87828601610c01565b825250610ddb8660208501610c8c565b6020820152608083015182811115610df257600080fd5b610dfe87828601610cd1565b60408301525060a083015182811115610e1657600080fd5b610e2287828601610bbc565b60608301525060c09290920151608083015250939250505056fea2646970667358221220b0117c147fef2725a54fb3df443229b9ac32ed5984df4af223e4891e4ac10b0164736f6c63430008130033",
    "sourceMap": "471:2044:42:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d69146100465780637671d07b1461006f5780639943fa89146100b0575b600080fd5b6100596100543660046104e2565b6100c5565b604051610066919061061e565b60405180910390f35b61008b61007d366004610748565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6100c36100be36600461095b565b610221565b005b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040838101518401810151815180830183528581526020808201869052835190810184526000815292517f05afc97700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216926305afc977926101af92913091600401610afb565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b50610217816102c4565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216301461024357600080fd5b825160011461027e576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360008151811061029357610293610b8d565b60200260200101516040516020016102ab919061061e565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561034057815182602001fd5b8180602001905181019061021b9190610d6a565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103ab576103ab610359565b60405290565b6040516060810167ffffffffffffffff811182821017156103ab576103ab610359565b60405160a0810167ffffffffffffffff811182821017156103ab576103ab610359565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561043e5761043e610359565b604052919050565b600067ffffffffffffffff82111561046057610460610359565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261049d57600080fd5b81356104b06104ab82610446565b6103f7565b8181528460208386010111156104c557600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104f557600080fd5b823567ffffffffffffffff8082111561050d57600080fd5b6105198683870161048c565b9350602085013591508082111561052f57600080fd5b5061053c8582860161048c565b9150509250929050565b60005b83811015610561578181015183820152602001610549565b50506000910152565b60008151808452610582816020860160208601610546565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015610613578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040918201511690880152606090960195908201906001016105c8565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a084015261069a6101c084018261056a565b905060208401516106d86040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a086015261071383836105b4565b925060608601519150808584030160c086015250610731828261056a565b915050608084015160e08401528091505092915050565b60006020828403121561075a57600080fd5b813567ffffffffffffffff81111561077157600080fd5b61077d8482850161048c565b949350505050565b600067ffffffffffffffff82111561079f5761079f610359565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff811681146107cb57600080fd5b50565b8035610354816107a9565b600060c082840312156107eb57600080fd5b6107f3610388565b90508135610800816107a9565b81526020820135610810816107a9565b8060208301525060408201356040820152606082013560608201526080820135610839816107a9565b608082015260a082013567ffffffffffffffff81111561085857600080fd5b6108648482850161048c565b60a08301525092915050565b60006060828403121561088257600080fd5b61088a6103b1565b90508135610897816107a9565b80825250602082013560208201526040820135604082015292915050565b600082601f8301126108c657600080fd5b813560206108d66104ab83610785565b828152606092830285018201928282019190878511156108f557600080fd5b8387015b8581101561094e5781818a0312156109115760008081fd5b6109196103b1565b8135610924816107a9565b8152818601358682015260408083013561093d816107a9565b9082015284529284019281016108f9565b5090979650505050505050565b60008060006060848603121561097057600080fd5b833567ffffffffffffffff8082111561098857600080fd5b818601915086601f83011261099c57600080fd5b813560206109ac6104ab83610785565b82815260059290921b8401810191818101908a8411156109cb57600080fd5b8286015b84811015610abc578035868111156109e657600080fd5b870160e0818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215610a1a57600080fd5b610a226103d4565b8582013588811115610a3357600080fd5b610a418f88838601016107d9565b825250610a518e60408401610870565b8682015260a082013588811115610a685760008081fd5b610a768f88838601016108b5565b60408301525060c082013588811115610a8f5760008081fd5b610a9d8f888386010161048c565b60608301525060e09190910135608082015283529183019183016109cf565b509750610acc90508882016107ce565b955050506040860135915080821115610ae457600080fd5b50610af18682870161048c565b9150509250925092565b606081526000845160406060840152610b1760a084018261056a565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b52828261056a565b91505073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610b83818561056a565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610bcd57600080fd5b8151610bdb6104ab82610446565b818152846020838601011115610bf057600080fd5b61077d826020830160208701610546565b600060c08284031215610c1357600080fd5b610c1b610388565b90508151610c28816107a9565b81526020820151610c38816107a9565b8060208301525060408201516040820152606082015160608201526080820151610c61816107a9565b608082015260a082015167ffffffffffffffff811115610c8057600080fd5b61086484828501610bbc565b600060608284031215610c9e57600080fd5b610ca66103b1565b90508151610cb3816107a9565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610ce257600080fd5b81516020610cf26104ab83610785565b82815260609283028501820192828201919087851115610d1157600080fd5b8387015b8581101561094e5781818a031215610d2d5760008081fd5b610d356103b1565b8151610d40816107a9565b81528186015186820152604080830151610d59816107a9565b908201528452928401928101610d15565b600060208284031215610d7c57600080fd5b815167ffffffffffffffff80821115610d9457600080fd5b9083019060e08286031215610da857600080fd5b610db06103d4565b825182811115610dbf57600080fd5b610dcb87828601610c01565b825250610ddb8660208501610c8c565b6020820152608083015182811115610df257600080fd5b610dfe87828601610cd1565b60408301525060a083015182811115610e1657600080fd5b610e2287828601610bbc565b60608301525060c09290920151608083015250939250505056fea2646970667358221220b0117c147fef2725a54fb3df443229b9ac32ed5984df4af223e4891e4ac10b0164736f6c63430008130033",
    "sourceMap": "471:2044:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1025:296;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1519:276;;;;;;:::i;:::-;1672:17;1661:29;;;1748;1720:58;;;;1714:65;;1519:276;;;;6220:42:100;6208:55;;;6190:74;;6178:2;6163:18;1519:276:42;6026:244:100;2122:391:42;;;;;;:::i;:::-;;:::i;:::-;;1025:296;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:17:42;1661:29;;;1748;1720:58;;;;1714:65;1175:23;;;;;;;;;;;;;;;;;1206:9;;;;;;;-1:-1:-1;1206:9:42;;1139:77;;;;;:35;;;;;;;:77;;1175:23;1200:4;;1139:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1135:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:25;1297:6;1279:17;:25::i;:::-;1270:34;;1228:87;1135:180;1025:296;;;;:::o;2122:391::-;2248:23;;;2266:4;2248:23;2240:32;;;;;;2286:14;:21;2311:1;2286:26;2282:87;;2335:23;;;;;;;;;;;;;;2282:87;2378:18;2410:14;2425:1;2410:17;;;;;;;;:::i;:::-;;;;;;;2399:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;2378:50;;2490:5;2484:12;2476:5;2472:2;2468:14;2461:36;1801:315;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1913:13:42;;-1:-1:-1;;;1909:201:42;;;2005:6;1999:13;1990:6;1986:2;1982:15;1975:38;1909:201;2075:6;2064:35;;;;;;;;;;;;:::i;1909:201::-;1801:315;;;:::o;14:184:100:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:253;275:2;269:9;317:4;305:17;;352:18;337:34;;373:22;;;334:62;331:88;;;399:18;;:::i;:::-;435:2;428:22;203:253;:::o;461:::-;533:2;527:9;575:4;563:17;;610:18;595:34;;631:22;;;592:62;589:88;;;657:18;;:::i;719:253::-;791:2;785:9;833:4;821:17;;868:18;853:34;;889:22;;;850:62;847:88;;;915:18;;:::i;977:334::-;1048:2;1042:9;1104:2;1094:13;;1109:66;1090:86;1078:99;;1207:18;1192:34;;1228:22;;;1189:62;1186:88;;;1254:18;;:::i;:::-;1290:2;1283:22;977:334;;-1:-1:-1;977:334:100:o;1316:245::-;1364:4;1397:18;1389:6;1386:30;1383:56;;;1419:18;;:::i;:::-;-1:-1:-1;1476:2:100;1464:15;1481:66;1460:88;1550:4;1456:99;;1316:245::o;1566:462::-;1608:5;1661:3;1654:4;1646:6;1642:17;1638:27;1628:55;;1679:1;1676;1669:12;1628:55;1715:6;1702:20;1746:48;1762:31;1790:2;1762:31;:::i;:::-;1746:48;:::i;:::-;1819:2;1810:7;1803:19;1865:3;1858:4;1853:2;1845:6;1841:15;1837:26;1834:35;1831:55;;;1882:1;1879;1872:12;1831:55;1947:2;1940:4;1932:6;1928:17;1921:4;1912:7;1908:18;1895:55;1995:1;1970:16;;;1988:4;1966:27;1959:38;;;;1974:7;1566:462;-1:-1:-1;;;1566:462:100:o;2033:539::-;2119:6;2127;2180:2;2168:9;2159:7;2155:23;2151:32;2148:52;;;2196:1;2193;2186:12;2148:52;2236:9;2223:23;2265:18;2306:2;2298:6;2295:14;2292:34;;;2322:1;2319;2312:12;2292:34;2345:49;2386:7;2377:6;2366:9;2362:22;2345:49;:::i;:::-;2335:59;;2447:2;2436:9;2432:18;2419:32;2403:48;;2476:2;2466:8;2463:16;2460:36;;;2492:1;2489;2482:12;2460:36;;2515:51;2558:7;2547:8;2536:9;2532:24;2515:51;:::i;:::-;2505:61;;;2033:539;;;;;:::o;2577:250::-;2662:1;2672:113;2686:6;2683:1;2680:13;2672:113;;;2762:11;;;2756:18;2743:11;;;2736:39;2708:2;2701:10;2672:113;;;-1:-1:-1;;2819:1:100;2801:16;;2794:27;2577:250::o;2832:329::-;2873:3;2911:5;2905:12;2938:6;2933:3;2926:19;2954:76;3023:6;3016:4;3011:3;3007:14;3000:4;2993:5;2989:16;2954:76;:::i;:::-;3075:2;3063:15;3080:66;3059:88;3050:98;;;;3150:4;3046:109;;2832:329;-1:-1:-1;;2832:329:100:o;3427:696::-;3491:3;3529:5;3523:12;3556:6;3551:3;3544:19;3582:4;3611:2;3606:3;3602:12;3595:19;;3648:2;3641:5;3637:14;3669:1;3679:419;3693:6;3690:1;3687:13;3679:419;;;3752:13;;3859:9;;3788:42;3855:18;;;3843:31;;3914:11;;;3908:18;3894:12;;;3887:40;3950:4;3998:11;;;3992:18;3988:27;3974:12;;;3967:49;4045:4;4036:14;;;;4073:15;;;;3715:1;3708:9;3679:419;;;-1:-1:-1;4114:3:100;;3427:696;-1:-1:-1;;;;;3427:696:100:o;4128:1568::-;4321:2;4310:9;4303:21;4284:4;4359:6;4353:13;4402:4;4397:2;4386:9;4382:18;4375:32;4426:42;4530:2;4515:12;4509:19;4505:28;4499:3;4488:9;4484:19;4477:57;4605:2;4599;4585:12;4581:21;4575:28;4571:37;4565:3;4554:9;4550:19;4543:66;4670:4;4656:12;4652:23;4646:30;4640:3;4629:9;4625:19;4618:59;4738:4;4724:12;4720:23;4714:30;4708:3;4697:9;4693:19;4686:59;4818:2;4810:4;4796:12;4792:23;4786:30;4782:39;4776:3;4765:9;4761:19;4754:68;;4877:4;4863:12;4859:23;4853:30;4831:52;;4920:4;4914:3;4903:9;4899:19;4892:33;4945:53;4993:3;4982:9;4978:19;4962:14;4945:53;:::i;:::-;4934:64;;5047:2;5039:6;5035:15;5029:22;5060:66;5120:4;5109:9;5105:20;5089:14;3246:12;;3260:42;3242:61;3230:74;;3353:4;3342:16;;;3336:23;3320:14;;;3313:47;3409:4;3398:16;;;3392:23;3376:14;;3369:47;3166:256;5060:66;;5175:4;5167:6;5163:17;5157:24;5200:66;5329:2;5317:9;5312:3;5308:19;5304:28;5297:4;5286:9;5282:20;5275:58;5356:60;5412:3;5396:14;5356:60;:::i;:::-;5342:74;;5465:4;5457:6;5453:17;5447:24;5425:46;;5537:2;5525:9;5517:6;5513:22;5509:31;5502:4;5491:9;5487:20;5480:61;;5564:40;5597:6;5581:14;5564:40;:::i;:::-;5550:54;;;5660:4;5652:6;5648:17;5642:24;5635:4;5624:9;5620:20;5613:54;5684:6;5676:14;;;4128:1568;;;;:::o;5701:320::-;5769:6;5822:2;5810:9;5801:7;5797:23;5793:32;5790:52;;;5838:1;5835;5828:12;5790:52;5878:9;5865:23;5911:18;5903:6;5900:30;5897:50;;;5943:1;5940;5933:12;5897:50;5966:49;6007:7;5998:6;5987:9;5983:22;5966:49;:::i;:::-;5956:59;5701:320;-1:-1:-1;;;;5701:320:100:o;6275:196::-;6348:4;6381:18;6373:6;6370:30;6367:56;;;6403:18;;:::i;:::-;-1:-1:-1;6448:1:100;6444:14;6460:4;6440:25;;6275:196::o;6476:164::-;6572:42;6565:5;6561:54;6554:5;6551:65;6541:93;;6630:1;6627;6620:12;6541:93;6476:164;:::o;6645:144::-;6713:20;;6742:41;6713:20;6742:41;:::i;6794:924::-;6850:5;6898:4;6886:9;6881:3;6877:19;6873:30;6870:50;;;6916:1;6913;6906:12;6870:50;6938:22;;:::i;:::-;6929:31;;6997:9;6984:23;7016:43;7051:7;7016:43;:::i;:::-;7068:22;;7142:2;7127:18;;7114:32;7155:43;7114:32;7155:43;:::i;:::-;7230:7;7225:2;7218:5;7214:14;7207:31;;7298:2;7287:9;7283:18;7270:32;7265:2;7258:5;7254:14;7247:56;7363:2;7352:9;7348:18;7335:32;7330:2;7323:5;7319:14;7312:56;7420:3;7409:9;7405:19;7392:33;7434:43;7469:7;7434:43;:::i;:::-;7504:3;7493:15;;7486:32;7569:3;7554:19;;7541:33;7597:18;7586:30;;7583:50;;;7629:1;7626;7619:12;7583:50;7666:45;7707:3;7698:6;7687:9;7683:22;7666:45;:::i;:::-;7660:3;7653:5;7649:15;7642:70;;6794:924;;;;:::o;7723:433::-;7780:5;7828:4;7816:9;7811:3;7807:19;7803:30;7800:50;;;7846:1;7843;7836:12;7800:50;7868:22;;:::i;:::-;7859:31;;7927:9;7914:23;7946:43;7981:7;7946:43;:::i;:::-;8012:7;8005:5;7998:22;;8080:2;8069:9;8065:18;8052:32;8047:2;8040:5;8036:14;8029:56;8145:2;8134:9;8130:18;8117:32;8112:2;8105:5;8101:14;8094:56;7723:433;;;;:::o;8161:1249::-;8226:5;8279:3;8272:4;8264:6;8260:17;8256:27;8246:55;;8297:1;8294;8287:12;8246:55;8333:6;8320:20;8359:4;8383:73;8399:56;8452:2;8399:56;:::i;8383:73::-;8490:15;;;8552:4;8595:11;;;8583:24;;8579:33;;;8521:12;;;;8478:3;8624:15;;;8621:35;;;8652:1;8649;8642:12;8621:35;8688:2;8680:6;8676:15;8700:681;8716:6;8711:3;8708:15;8700:681;;;8792:2;8786:3;8781;8777:13;8773:22;8770:112;;;8836:1;8865:2;8861;8854:14;8770:112;8908:22;;:::i;:::-;8971:3;8958:17;8988:43;9023:7;8988:43;:::i;:::-;9044:22;;9115:12;;;9102:26;9086:14;;;9079:50;9152:2;9195:12;;;9182:26;9221:43;9182:26;9221:43;:::i;:::-;9284:14;;;9277:31;9321:18;;9359:12;;;;8733;;8700:681;;;-1:-1:-1;9399:5:100;;8161:1249;-1:-1:-1;;;;;;;8161:1249:100:o;9415:2449::-;9558:6;9566;9574;9627:2;9615:9;9606:7;9602:23;9598:32;9595:52;;;9643:1;9640;9633:12;9595:52;9683:9;9670:23;9712:18;9753:2;9745:6;9742:14;9739:34;;;9769:1;9766;9759:12;9739:34;9807:6;9796:9;9792:22;9782:32;;9852:7;9845:4;9841:2;9837:13;9833:27;9823:55;;9874:1;9871;9864:12;9823:55;9910:2;9897:16;9932:4;9956:73;9972:56;10025:2;9972:56;:::i;9956:73::-;10063:15;;;10145:1;10141:10;;;;10133:19;;10129:28;;;10094:12;;;;10169:19;;;10166:39;;;10201:1;10198;10191:12;10166:39;10233:2;10229;10225:11;10245:1358;10261:6;10256:3;10253:15;10245:1358;;;10347:3;10334:17;10383:2;10370:11;10367:19;10364:39;;;10399:1;10396;10389:12;10364:39;10426:20;;10557:4;10470:16;;;10488:66;10466:89;10462:100;10459:120;;;10575:1;10572;10565:12;10459:120;10605:22;;:::i;:::-;10677:2;10673;10669:11;10656:25;10710:2;10700:8;10697:16;10694:36;;;10726:1;10723;10716:12;10694:36;10757:64;10813:7;10808:2;10797:8;10793:2;10789:17;10785:26;10757:64;:::i;:::-;10750:5;10743:79;;10858:52;10902:7;10895:4;10891:2;10887:13;10858:52;:::i;:::-;10853:2;10846:5;10842:14;10835:76;10961:4;10957:2;10953:13;10940:27;10996:2;10986:8;10983:16;10980:106;;;11040:1;11069:2;11065;11058:14;10980:106;11124:76;11192:7;11187:2;11176:8;11172:2;11168:17;11164:26;11124:76;:::i;:::-;11117:4;11110:5;11106:16;11099:102;;11251:3;11247:2;11243:12;11230:26;11285:2;11275:8;11272:16;11269:106;;;11329:1;11358:2;11354;11347:14;11269:106;11411:53;11456:7;11451:2;11440:8;11436:2;11432:17;11428:26;11411:53;:::i;:::-;11406:2;11395:14;;11388:77;-1:-1:-1;11523:4:100;11515:13;;;;11502:27;11496:3;11485:15;;11478:52;11543:18;;11581:12;;;;10278;;10245:1358;;;-1:-1:-1;11622:5:100;-1:-1:-1;11646:38:100;;-1:-1:-1;11665:18:100;;;11646:38;:::i;:::-;11636:48;;;;11737:4;11726:9;11722:20;11709:34;11693:50;;11768:2;11758:8;11755:16;11752:36;;;11784:1;11781;11774:12;11752:36;;11807:51;11850:7;11839:8;11828:9;11824:24;11807:51;:::i;:::-;11797:61;;;9415:2449;;;;;:::o;11869:896::-;12153:2;12142:9;12135:21;12116:4;12191:6;12185:13;12234:4;12229:2;12218:9;12214:18;12207:32;12262:51;12308:3;12297:9;12293:19;12279:12;12262:51;:::i;:::-;12248:65;;12362:4;12354:6;12350:17;12344:24;12433:66;12421:9;12413:6;12409:22;12405:95;12399:3;12388:9;12384:19;12377:124;12521:40;12554:6;12538:14;12521:40;:::i;:::-;12510:51;;;12611:42;12603:6;12599:55;12592:4;12581:9;12577:20;12570:85;12702:9;12697:3;12693:19;12686:4;12675:9;12671:20;12664:49;12730:29;12755:3;12747:6;12730:29;:::i;:::-;12722:37;11869:896;-1:-1:-1;;;;;;11869:896:100:o;12770:184::-;12822:77;12819:1;12812:88;12919:4;12916:1;12909:15;12943:4;12940:1;12933:15;12959:441;13012:5;13065:3;13058:4;13050:6;13046:17;13042:27;13032:55;;13083:1;13080;13073:12;13032:55;13112:6;13106:13;13143:48;13159:31;13187:2;13159:31;:::i;13143:48::-;13216:2;13207:7;13200:19;13262:3;13255:4;13250:2;13242:6;13238:15;13234:26;13231:35;13228:55;;;13279:1;13276;13269:12;13228:55;13292:77;13366:2;13359:4;13350:7;13346:18;13339:4;13331:6;13327:17;13292:77;:::i;13405:904::-;13472:5;13520:4;13508:9;13503:3;13499:19;13495:30;13492:50;;;13538:1;13535;13528:12;13492:50;13560:22;;:::i;:::-;13551:31;;13612:9;13606:16;13631:43;13666:7;13631:43;:::i;:::-;13683:22;;13750:2;13735:18;;13729:25;13763:43;13729:25;13763:43;:::i;:::-;13838:7;13833:2;13826:5;13822:14;13815:31;;13899:2;13888:9;13884:18;13878:25;13873:2;13866:5;13862:14;13855:49;13957:2;13946:9;13942:18;13936:25;13931:2;13924:5;13920:14;13913:49;14007:3;13996:9;13992:19;13986:26;14021:43;14056:7;14021:43;:::i;:::-;14091:3;14080:15;;14073:32;14149:3;14134:19;;14128:26;14177:18;14166:30;;14163:50;;;14209:1;14206;14199:12;14163:50;14246:56;14298:3;14289:6;14278:9;14274:22;14246:56;:::i;14314:423::-;14382:5;14430:4;14418:9;14413:3;14409:19;14405:30;14402:50;;;14448:1;14445;14438:12;14402:50;14470:22;;:::i;:::-;14461:31;;14522:9;14516:16;14541:43;14576:7;14541:43;:::i;:::-;14607:7;14600:5;14593:22;;14668:2;14657:9;14653:18;14647:25;14642:2;14635:5;14631:14;14624:49;14726:2;14715:9;14711:18;14705:25;14700:2;14693:5;14689:14;14682:49;14314:423;;;;:::o;14742:1232::-;14818:5;14871:3;14864:4;14856:6;14852:17;14848:27;14838:55;;14889:1;14886;14879:12;14838:55;14918:6;14912:13;14944:4;14968:73;14984:56;15037:2;14984:56;:::i;14968:73::-;15075:15;;;15137:4;15180:11;;;15168:24;;15164:33;;;15106:12;;;;15063:3;15209:15;;;15206:35;;;15237:1;15234;15227:12;15206:35;15273:2;15265:6;15261:15;15285:660;15301:6;15296:3;15293:15;15285:660;;;15377:2;15371:3;15366;15362:13;15358:22;15355:112;;;15421:1;15450:2;15446;15439:14;15355:112;15493:22;;:::i;:::-;15549:3;15543:10;15566:43;15601:7;15566:43;:::i;:::-;15622:22;;15686:12;;;15680:19;15664:14;;;15657:43;15723:2;15759:12;;;15753:19;15785:43;15753:19;15785:43;:::i;:::-;15848:14;;;15841:31;15885:18;;15923:12;;;;15318;;15285:660;;15979:1163;16081:6;16134:2;16122:9;16113:7;16109:23;16105:32;16102:52;;;16150:1;16147;16140:12;16102:52;16183:9;16177:16;16212:18;16253:2;16245:6;16242:14;16239:34;;;16269:1;16266;16259:12;16239:34;16292:22;;;;16348:4;16330:16;;;16326:27;16323:47;;;16366:1;16363;16356:12;16323:47;16392:22;;:::i;:::-;16445:2;16439:9;16473:2;16463:8;16460:16;16457:36;;;16489:1;16486;16479:12;16457:36;16516:66;16574:7;16563:8;16559:2;16555:17;16516:66;:::i;:::-;16509:5;16502:81;;16615:61;16668:7;16663:2;16659;16655:11;16615:61;:::i;:::-;16610:2;16603:5;16599:14;16592:85;16716:3;16712:2;16708:12;16702:19;16746:2;16736:8;16733:16;16730:36;;;16762:1;16759;16752:12;16730:36;16800:78;16870:7;16859:8;16855:2;16851:17;16800:78;:::i;:::-;16793:4;16786:5;16782:16;16775:104;;16918:4;16914:2;16910:13;16904:20;16949:2;16939:8;16936:16;16933:36;;;16965:1;16962;16955:12;16933:36;17003:55;17050:7;17039:8;17035:2;17031:17;17003:55;:::i;:::-;16996:4;16985:16;;16978:81;-1:-1:-1;17106:3:100;17098:12;;;;17092:19;17086:3;17075:15;;17068:44;-1:-1:-1;16989:5:100;15979:1163;-1:-1:-1;;;15979:1163:100:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getReactor(bytes)": "7671d07b",
    "quote(bytes,bytes)": "41d88d69",
    "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],address,bytes)": "9943fa89"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OrdersLengthIncorrect\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"}],\"name\":\"getReactor\",\"outputs\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"validationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"validationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder[]\",\"name\":\"resolvedOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"reactorCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"note this is meant to be used as an off-chain lens contract to pre-validate generic orders\",\"kind\":\"dev\",\"methods\":{\"getReactor(bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\"},\"returns\":{\"reactor\":\"reactor\"}},\"quote(bytes,bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\",\"sig\":\"The order signature\"},\"returns\":{\"result\":\"The ResolvedOrder\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getReactor(bytes)\":{\"notice\":\"Return the reactor of a given order (abi.encoded bytes).\"},\"quote(bytes,bytes)\":{\"notice\":\"Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order\"}},\"notice\":\"Quoter contract for orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/OrderQuoter.sol\":\"OrderQuoter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x4f2c7c1826779a4f444e5b36553102e4cff85ddb7d1ff65c15a6d6e978dcc8c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa48b04a7f9b986687fc4e6984db2fd5760b5827d537c019d351b95414f8394e\",\"dweb:/ipfs/QmeDbBY8M8dgeornLuB8m99gu915mRTZQ1Ggenio9BRHf2\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0x27255bf4fd142ba38ca6c9d5ef53ea50b8c91bf4fc51c4b14fe7b837d037619d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0a96479450525a0ab28deedcf18afe6ab9579fe1a4059a6e3d5d1b859132f84b\",\"dweb:/ipfs/QmZdofDthhjzyT7sLy2epjBCeeDny1qaKJPQewdCPyrFVn\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd\",\"dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/base/ProtocolFees.sol\":{\"keccak256\":\"0xbf7b87a78a68814eb18f19c7355d4aee43c42572c7952b3372031107cdf8d327\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4cc3b26dcb9cc905af155cdc14e8d61a2946bcead9624ad8f65f0e508a0240a3\",\"dweb:/ipfs/QmdLJSe1qhBhu1nzUS3KBZMY9UbyqutuYGqUT1dyzhTW8y\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541\",\"dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0xa0b7346c8b4ea54153beb89f56e018bee28987f9e1cfca42c94fd8b06aa448f3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://439ce2d58b44684ce406a6fbda3cb029f93d9e08543ef38f03807e0749e5f546\",\"dweb:/ipfs/QmT1dQMsViyh2HYiUSD2jidpY6VHTKiQbjht5txkvz37xS\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xbf03d767ae7ab46fc07254f47f09e8c27bf7f028b209e786eec259d746761d79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d85f1cee66c5881edff597871ebf6236eacd90241d16c1f718cbc2d7636de884\",\"dweb:/ipfs/QmUwQAqeeZgvbsfJJMmPsbybEC5CUw4uCKqaW7P4hQtrbu\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5\",\"dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b\",\"dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lens/OrderQuoter.sol\":{\"keccak256\":\"0x9701cf4d46764db4b1633e35af11c5da83cb2970b122fe978c38b0b497402fac\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://40550f9ef47848f2815c28555f938ac883bfbc00cb8166926b30b4ff02887e81\",\"dweb:/ipfs/Qmdx6mUyKz4hYzeebVzKymPDxVP7GR1sL3ZBrr3iwYVPDf\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0x211d20c3094670fab45f32dc23bd38eafbb25406dc7d919c90fb84bf73ff928c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d2dbdfd043edbfafca499176c001311da64edcb3f61b06d1712b2c349598044\",\"dweb:/ipfs/QmT4HBxCk28cfH9gzuFR9ARW8zEFtN9H1YZ4aX7pcwRR14\"]},\"src/lib/ExpectedBalanceLib.sol\":{\"keccak256\":\"0x04b4ccd6b73bf815c1f9c32b3b8c5d1fd089ce35091cc5ed97ae2abe621d8f64\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c784b4d331d35b91bd28be8c75836b5c159cc84f4bb24110a4d92a94ed5dd80f\",\"dweb:/ipfs/QmeN38cSsaaaKQZTtSPQxJMPzXfG6ibDVi7HqZBBpZuxQQ\"]},\"src/lib/ResolvedOrderLib.sol\":{\"keccak256\":\"0x484526a9695c67c129f3f6e416a349b3f82c7e9faded71e6e1acda42a76f595f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58733b37a4bf3bbadfb5b4c72121aee20efa8fa760fbe0adb82c55947040a616\",\"dweb:/ipfs/QmXiM6L7fRp4CLdR9yMrusudTTESq7pUKtfGvhMYHU56VJ\"]},\"src/reactors/BaseReactor.sol\":{\"keccak256\":\"0x372fb4a9f87bb981ce91157f92bca3d7e3964f01cac99b88c6a2d163c81f25f9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f55e0fc0ea1ad32b985643d244a4a953b656c26a7a2e50bddb4175b45892fd31\",\"dweb:/ipfs/QmXbNpY6dKJTNmbfMjn6drGQc8FA17tDViUjbvK6Qdw4dR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "OrdersLengthIncorrect"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getReactor",
          "outputs": [
            {
              "internalType": "contract IReactor",
              "name": "reactor",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quote",
          "outputs": [
            {
              "internalType": "struct ResolvedOrder",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "validationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "validationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResolvedOrder[]",
              "name": "resolvedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "validationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "validationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reactorCallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getReactor(bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member"
            },
            "returns": {
              "reactor": "reactor"
            }
          },
          "quote(bytes,bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member",
              "sig": "The order signature"
            },
            "returns": {
              "result": "The ResolvedOrder"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getReactor(bytes)": {
            "notice": "Return the reactor of a given order (abi.encoded bytes)."
          },
          "quote(bytes,bytes)": {
            "notice": "Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/OrderQuoter.sol": "OrderQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x4f2c7c1826779a4f444e5b36553102e4cff85ddb7d1ff65c15a6d6e978dcc8c8",
        "urls": [
          "bzz-raw://aa48b04a7f9b986687fc4e6984db2fd5760b5827d537c019d351b95414f8394e",
          "dweb:/ipfs/QmeDbBY8M8dgeornLuB8m99gu915mRTZQ1Ggenio9BRHf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e",
        "urls": [
          "bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d",
          "dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0x27255bf4fd142ba38ca6c9d5ef53ea50b8c91bf4fc51c4b14fe7b837d037619d",
        "urls": [
          "bzz-raw://0a96479450525a0ab28deedcf18afe6ab9579fe1a4059a6e3d5d1b859132f84b",
          "dweb:/ipfs/QmZdofDthhjzyT7sLy2epjBCeeDny1qaKJPQewdCPyrFVn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169",
        "urls": [
          "bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd",
          "dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ProtocolFees.sol": {
        "keccak256": "0xbf7b87a78a68814eb18f19c7355d4aee43c42572c7952b3372031107cdf8d327",
        "urls": [
          "bzz-raw://4cc3b26dcb9cc905af155cdc14e8d61a2946bcead9624ad8f65f0e508a0240a3",
          "dweb:/ipfs/QmdLJSe1qhBhu1nzUS3KBZMY9UbyqutuYGqUT1dyzhTW8y"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62",
        "urls": [
          "bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541",
          "dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0xa0b7346c8b4ea54153beb89f56e018bee28987f9e1cfca42c94fd8b06aa448f3",
        "urls": [
          "bzz-raw://439ce2d58b44684ce406a6fbda3cb029f93d9e08543ef38f03807e0749e5f546",
          "dweb:/ipfs/QmT1dQMsViyh2HYiUSD2jidpY6VHTKiQbjht5txkvz37xS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0xbf03d767ae7ab46fc07254f47f09e8c27bf7f028b209e786eec259d746761d79",
        "urls": [
          "bzz-raw://d85f1cee66c5881edff597871ebf6236eacd90241d16c1f718cbc2d7636de884",
          "dweb:/ipfs/QmUwQAqeeZgvbsfJJMmPsbybEC5CUw4uCKqaW7P4hQtrbu"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739",
        "urls": [
          "bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5",
          "dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a",
        "urls": [
          "bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b",
          "dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lens/OrderQuoter.sol": {
        "keccak256": "0x9701cf4d46764db4b1633e35af11c5da83cb2970b122fe978c38b0b497402fac",
        "urls": [
          "bzz-raw://40550f9ef47848f2815c28555f938ac883bfbc00cb8166926b30b4ff02887e81",
          "dweb:/ipfs/Qmdx6mUyKz4hYzeebVzKymPDxVP7GR1sL3ZBrr3iwYVPDf"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0x211d20c3094670fab45f32dc23bd38eafbb25406dc7d919c90fb84bf73ff928c",
        "urls": [
          "bzz-raw://0d2dbdfd043edbfafca499176c001311da64edcb3f61b06d1712b2c349598044",
          "dweb:/ipfs/QmT4HBxCk28cfH9gzuFR9ARW8zEFtN9H1YZ4aX7pcwRR14"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExpectedBalanceLib.sol": {
        "keccak256": "0x04b4ccd6b73bf815c1f9c32b3b8c5d1fd089ce35091cc5ed97ae2abe621d8f64",
        "urls": [
          "bzz-raw://c784b4d331d35b91bd28be8c75836b5c159cc84f4bb24110a4d92a94ed5dd80f",
          "dweb:/ipfs/QmeN38cSsaaaKQZTtSPQxJMPzXfG6ibDVi7HqZBBpZuxQQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ResolvedOrderLib.sol": {
        "keccak256": "0x484526a9695c67c129f3f6e416a349b3f82c7e9faded71e6e1acda42a76f595f",
        "urls": [
          "bzz-raw://58733b37a4bf3bbadfb5b4c72121aee20efa8fa760fbe0adb82c55947040a616",
          "dweb:/ipfs/QmXiM6L7fRp4CLdR9yMrusudTTESq7pUKtfGvhMYHU56VJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseReactor.sol": {
        "keccak256": "0x372fb4a9f87bb981ce91157f92bca3d7e3964f01cac99b88c6a2d163c81f25f9",
        "urls": [
          "bzz-raw://f55e0fc0ea1ad32b985643d244a4a953b656c26a7a2e50bddb4175b45892fd31",
          "dweb:/ipfs/QmXbNpY6dKJTNmbfMjn6drGQc8FA17tDViUjbvK6Qdw4dR"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/OrderQuoter.sol",
    "id": 30392,
    "exportedSymbols": {
      "BaseReactor": [
        32297
      ],
      "IReactor": [
        30219
      ],
      "IReactorCallback": [
        30237
      ],
      "OrderInfo": [
        30051
      ],
      "OrderQuoter": [
        30391
      ],
      "ResolvedOrder": [
        30081
      ],
      "SignedOrder": [
        30086
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2471:42",
    "nodes": [
      {
        "id": 30255,
        "nodeType": "PragmaDirective",
        "src": "45:23:42",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 30257,
        "nodeType": "ImportDirective",
        "src": "70:68:42",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactorCallback.sol",
        "file": "../interfaces/IReactorCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30392,
        "sourceUnit": 30238,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30256,
              "name": "IReactorCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30237,
              "src": "78:16:42",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30259,
        "nodeType": "ImportDirective",
        "src": "139:52:42",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactor.sol",
        "file": "../interfaces/IReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30392,
        "sourceUnit": 30220,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30258,
              "name": "IReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30219,
              "src": "147:8:42",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30261,
        "nodeType": "ImportDirective",
        "src": "192:56:42",
        "nodes": [],
        "absolutePath": "src/reactors/BaseReactor.sol",
        "file": "../reactors/BaseReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30392,
        "sourceUnit": 32298,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30260,
              "name": "BaseReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32297,
              "src": "200:11:42",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30265,
        "nodeType": "ImportDirective",
        "src": "249:81:42",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30392,
        "sourceUnit": 30087,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30262,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30051,
              "src": "257:9:42",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 30263,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30081,
              "src": "268:13:42",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 30264,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30086,
              "src": "283:11:42",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30391,
        "nodeType": "ContractDefinition",
        "src": "471:2044:42",
        "nodes": [
          {
            "id": 30270,
            "nodeType": "ErrorDefinition",
            "src": "518:30:42",
            "nodes": [],
            "errorSelector": "06ee9878",
            "name": "OrdersLengthIncorrect",
            "nameLocation": "524:21:42",
            "parameters": {
              "id": 30269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:2:42"
            }
          },
          {
            "id": 30273,
            "nodeType": "VariableDeclaration",
            "src": "554:39:42",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ORDER_INFO_OFFSET",
            "nameLocation": "571:17:42",
            "scope": 30391,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30271,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 30272,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "591:2:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "internal"
          },
          {
            "id": 30315,
            "nodeType": "FunctionDefinition",
            "src": "1025:296:42",
            "nodes": [],
            "body": {
              "id": 30314,
              "nodeType": "Block",
              "src": "1125:196:42",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 30300,
                        "nodeType": "Block",
                        "src": "1217:2:42",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 30301,
                      "nodeType": "TryCatchClause",
                      "src": "1217:2:42"
                    },
                    {
                      "block": {
                        "id": 30311,
                        "nodeType": "Block",
                        "src": "1256:59:42",
                        "statements": [
                          {
                            "expression": {
                              "id": 30309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 30305,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30282,
                                "src": "1270:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 30307,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30303,
                                    "src": "1297:6:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 30306,
                                  "name": "parseRevertReason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30350,
                                  "src": "1279:17:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$30081_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct ResolvedOrder memory)"
                                  }
                                },
                                "id": 30308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1279:25:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "src": "1270:34:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                                "typeString": "struct ResolvedOrder memory"
                              }
                            },
                            "id": 30310,
                            "nodeType": "ExpressionStatement",
                            "src": "1270:34:42"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 30312,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 30304,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 30303,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1248:6:42",
                            "nodeType": "VariableDeclaration",
                            "scope": 30312,
                            "src": "1235:19:42",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 30302,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1235:5:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1234:21:42"
                      },
                      "src": "1228:87:42"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30291,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30276,
                            "src": "1187:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 30292,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30278,
                            "src": "1194:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30290,
                          "name": "SignedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30086,
                          "src": "1175:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SignedOrder_$30086_storage_ptr_$",
                            "typeString": "type(struct SignedOrder storage pointer)"
                          }
                        },
                        "id": 30293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1175:23:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$30086_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        }
                      },
                      {
                        "id": 30294,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1200:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OrderQuoter_$30391",
                          "typeString": "contract OrderQuoter"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 30297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1212:2:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 30296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1206:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 30295,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1206:5:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1206:9:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$30086_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_OrderQuoter_$30391",
                          "typeString": "contract OrderQuoter"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30286,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30276,
                                "src": "1159:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 30285,
                              "name": "getReactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30326,
                              "src": "1148:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_contract$_IReactor_$30219_$",
                                "typeString": "function (bytes memory) pure returns (contract IReactor)"
                              }
                            },
                            "id": 30287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1148:17:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IReactor_$30219",
                              "typeString": "contract IReactor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IReactor_$30219",
                              "typeString": "contract IReactor"
                            }
                          ],
                          "id": 30284,
                          "name": "IReactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30219,
                          "src": "1139:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IReactor_$30219_$",
                            "typeString": "type(contract IReactor)"
                          }
                        },
                        "id": 30288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1139:27:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IReactor_$30219",
                          "typeString": "contract IReactor"
                        }
                      },
                      "id": 30289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1167:7:42",
                      "memberName": "execute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30205,
                      "src": "1139:35:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_SignedOrder_$30086_memory_ptr_$_t_contract$_IReactorCallback_$30237_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct SignedOrder memory,contract IReactorCallback,bytes memory) payable external"
                      }
                    },
                    "id": 30299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:77:42",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30313,
                  "nodeType": "TryStatement",
                  "src": "1135:180:42"
                }
              ]
            },
            "documentation": {
              "id": 30274,
              "nodeType": "StructuredDocumentation",
              "src": "600:420:42",
              "text": "@notice Quote the given order, returning the ResolvedOrder object which defines\n the current input and output token amounts required to satisfy it\n Also bubbles up any reverts that would occur during the processing of the order\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @param sig The order signature\n @return result The ResolvedOrder"
            },
            "functionSelector": "41d88d69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quote",
            "nameLocation": "1034:5:42",
            "parameters": {
              "id": 30279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30276,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1053:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30315,
                  "src": "1040:18:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30275,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30278,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1073:3:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30315,
                  "src": "1060:16:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30277,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:38:42"
            },
            "returnParameters": {
              "id": 30283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30282,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1117:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30315,
                  "src": "1096:27:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 30281,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30280,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1096:13:42"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30081,
                      "src": "1096:13:42"
                    },
                    "referencedDeclaration": 30081,
                    "src": "1096:13:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$30081_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1095:29:42"
            },
            "scope": 30391,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30326,
            "nodeType": "FunctionDefinition",
            "src": "1519:276:42",
            "nodes": [],
            "body": {
              "id": 30325,
              "nodeType": "Block",
              "src": "1598:197:42",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1617:172:42",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1631:59:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "order",
                              "nodeType": "YulIdentifier",
                              "src": "1665:5:42"
                            },
                            {
                              "name": "ORDER_INFO_OFFSET",
                              "nodeType": "YulIdentifier",
                              "src": "1672:17:42"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1661:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1661:29:42"
                        },
                        "variables": [
                          {
                            "name": "orderInfoOffsetPointer",
                            "nodeType": "YulTypedName",
                            "src": "1635:22:42",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1703:76:42",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "orderInfoOffsetPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1724:22:42"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "orderInfoOffsetPointer",
                                      "nodeType": "YulIdentifier",
                                      "src": "1754:22:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1748:5:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1748:29:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1720:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1720:58:42"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1714:5:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1714:65:42"
                        },
                        "variableNames": [
                          {
                            "name": "reactor",
                            "nodeType": "YulIdentifier",
                            "src": "1703:7:42"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 30273,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1672:17:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30318,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1665:5:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30322,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1703:7:42",
                      "valueSize": 1
                    }
                  ],
                  "id": 30324,
                  "nodeType": "InlineAssembly",
                  "src": "1608:181:42"
                }
              ]
            },
            "documentation": {
              "id": 30316,
              "nodeType": "StructuredDocumentation",
              "src": "1327:187:42",
              "text": "@notice Return the reactor of a given order (abi.encoded bytes).\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @return reactor"
            },
            "functionSelector": "7671d07b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReactor",
            "nameLocation": "1528:10:42",
            "parameters": {
              "id": 30319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30318,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1552:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30326,
                  "src": "1539:18:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30317,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:20:42"
            },
            "returnParameters": {
              "id": 30323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30322,
                  "mutability": "mutable",
                  "name": "reactor",
                  "nameLocation": "1589:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30326,
                  "src": "1580:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IReactor_$30219",
                    "typeString": "contract IReactor"
                  },
                  "typeName": {
                    "id": 30321,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30320,
                      "name": "IReactor",
                      "nameLocations": [
                        "1580:8:42"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30219,
                      "src": "1580:8:42"
                    },
                    "referencedDeclaration": 30219,
                    "src": "1580:8:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReactor_$30219",
                      "typeString": "contract IReactor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1579:18:42"
            },
            "scope": 30391,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30350,
            "nodeType": "FunctionDefinition",
            "src": "1801:315:42",
            "nodes": [],
            "body": {
              "id": 30349,
              "nodeType": "Block",
              "src": "1899:217:42",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 30334,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30328,
                        "src": "1913:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 30335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1920:6:42",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1913:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 30336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1929:3:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "1913:19:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 30347,
                    "nodeType": "Block",
                    "src": "2043:67:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30342,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30328,
                              "src": "2075:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 30343,
                                  "name": "ResolvedOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30081,
                                  "src": "2084:13:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$30081_storage_ptr_$",
                                    "typeString": "type(struct ResolvedOrder storage pointer)"
                                  }
                                }
                              ],
                              "id": 30344,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2083:15:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$30081_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$30081_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 30340,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2064:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 30341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2068:6:42",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "2064:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2064:35:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "functionReturnParameters": 30333,
                        "id": 30346,
                        "nodeType": "Return",
                        "src": "2057:42:42"
                      }
                    ]
                  },
                  "id": 30348,
                  "nodeType": "IfStatement",
                  "src": "1909:201:42",
                  "trueBody": {
                    "id": 30339,
                    "nodeType": "Block",
                    "src": "1934:103:42",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1957:70:42",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1986:2:42",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1990:6:42"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1982:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1982:15:42"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2005:6:42"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1999:5:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1999:13:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1975:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1975:38:42"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1975:38:42"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 30328,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1990:6:42",
                            "valueSize": 1
                          },
                          {
                            "declaration": 30328,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2005:6:42",
                            "valueSize": 1
                          }
                        ],
                        "id": 30338,
                        "nodeType": "InlineAssembly",
                        "src": "1948:79:42"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parseRevertReason",
            "nameLocation": "1810:17:42",
            "parameters": {
              "id": 30329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30328,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "1841:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30350,
                  "src": "1828:19:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30327,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1827:21:42"
            },
            "returnParameters": {
              "id": 30333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30332,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1892:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30350,
                  "src": "1871:26:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 30331,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30330,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1871:13:42"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30081,
                      "src": "1871:13:42"
                    },
                    "referencedDeclaration": 30081,
                    "src": "1871:13:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$30081_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1870:28:42"
            },
            "scope": 30391,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 30390,
            "nodeType": "FunctionDefinition",
            "src": "2122:391:42",
            "nodes": [],
            "body": {
              "id": 30389,
              "nodeType": "Block",
              "src": "2230:283:42",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30362,
                          "name": "filler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30356,
                          "src": "2248:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 30365,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2266:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OrderQuoter_$30391",
                                "typeString": "contract OrderQuoter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OrderQuoter_$30391",
                                "typeString": "contract OrderQuoter"
                              }
                            ],
                            "id": 30364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2258:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2258:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2258:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2248:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2240:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 30368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:32:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30369,
                  "nodeType": "ExpressionStatement",
                  "src": "2240:32:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 30370,
                        "name": "resolvedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30354,
                        "src": "2286:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$30081_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ResolvedOrder memory[] memory"
                        }
                      },
                      "id": 30371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2301:6:42",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2286:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 30372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2311:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2286:26:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30378,
                  "nodeType": "IfStatement",
                  "src": "2282:87:42",
                  "trueBody": {
                    "id": 30377,
                    "nodeType": "Block",
                    "src": "2314:55:42",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30374,
                            "name": "OrdersLengthIncorrect",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30270,
                            "src": "2335:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2335:23:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30376,
                        "nodeType": "RevertStatement",
                        "src": "2328:30:42"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    30380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30380,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2391:5:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30389,
                      "src": "2378:18:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 30379,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2378:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30387,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 30383,
                          "name": "resolvedOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30354,
                          "src": "2410:14:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$30081_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ResolvedOrder memory[] memory"
                          }
                        },
                        "id": 30385,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 30384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2425:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2410:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$30081_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 30381,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2399:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 30382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2403:6:42",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2399:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 30386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:29:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2378:50:42"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2447:60:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2472:2:42",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2476:5:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2468:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2468:14:42"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2490:5:42"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2484:5:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2484:12:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2461:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2461:36:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2461:36:42"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 30380,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2476:5:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30380,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2490:5:42",
                      "valueSize": 1
                    }
                  ],
                  "id": 30388,
                  "nodeType": "InlineAssembly",
                  "src": "2438:69:42"
                }
              ]
            },
            "baseFunctions": [
              30236
            ],
            "functionSelector": "9943fa89",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reactorCallback",
            "nameLocation": "2131:15:42",
            "parameters": {
              "id": 30359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30354,
                  "mutability": "mutable",
                  "name": "resolvedOrders",
                  "nameLocation": "2170:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30390,
                  "src": "2147:37:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$30081_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ResolvedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30352,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30351,
                        "name": "ResolvedOrder",
                        "nameLocations": [
                          "2147:13:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 30081,
                        "src": "2147:13:42"
                      },
                      "referencedDeclaration": 30081,
                      "src": "2147:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$30081_storage_ptr",
                        "typeString": "struct ResolvedOrder"
                      }
                    },
                    "id": 30353,
                    "nodeType": "ArrayTypeName",
                    "src": "2147:15:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$30081_storage_$dyn_storage_ptr",
                      "typeString": "struct ResolvedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30356,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "2194:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30390,
                  "src": "2186:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30358,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30390,
                  "src": "2202:12:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30357,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2146:69:42"
            },
            "returnParameters": {
              "id": 30360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2230:0:42"
            },
            "scope": 30391,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30267,
              "name": "IReactorCallback",
              "nameLocations": [
                "495:16:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30237,
              "src": "495:16:42"
            },
            "id": 30268,
            "nodeType": "InheritanceSpecifier",
            "src": "495:16:42"
          }
        ],
        "canonicalName": "OrderQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 30266,
          "nodeType": "StructuredDocumentation",
          "src": "332:139:42",
          "text": "@notice Quoter contract for orders\n @dev note this is meant to be used as an off-chain lens contract to pre-validate generic orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30391,
          30237
        ],
        "name": "OrderQuoter",
        "nameLocation": "480:11:42",
        "scope": 30392,
        "usedErrors": [
          30270
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 42
}