{
  "abi": [
    {
      "inputs": [],
      "name": "OrdersLengthIncorrect",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        }
      ],
      "name": "getReactor",
      "outputs": [
        {
          "internalType": "contract IReactor",
          "name": "reactor",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder",
          "name": "result",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder[]",
          "name": "resolvedOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "reactorCallback",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610e72806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d69146100465780637671d07b1461006f5780639943fa89146100b0575b600080fd5b6100596100543660046104e2565b6100c5565b604051610066919061061e565b60405180910390f35b61008b61007d366004610748565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6100c36100be36600461095b565b610221565b005b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040838101518401810151815180830183528581526020808201869052835190810184526000815292517f05afc97700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216926305afc977926101af92913091600401610afb565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b50610217816102c4565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216301461024357600080fd5b825160011461027e576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360008151811061029357610293610b8d565b60200260200101516040516020016102ab919061061e565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561034057815182602001fd5b8180602001905181019061021b9190610d6a565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103ab576103ab610359565b60405290565b6040516060810167ffffffffffffffff811182821017156103ab576103ab610359565b60405160a0810167ffffffffffffffff811182821017156103ab576103ab610359565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561043e5761043e610359565b604052919050565b600067ffffffffffffffff82111561046057610460610359565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261049d57600080fd5b81356104b06104ab82610446565b6103f7565b8181528460208386010111156104c557600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104f557600080fd5b823567ffffffffffffffff8082111561050d57600080fd5b6105198683870161048c565b9350602085013591508082111561052f57600080fd5b5061053c8582860161048c565b9150509250929050565b60005b83811015610561578181015183820152602001610549565b50506000910152565b60008151808452610582816020860160208601610546565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015610613578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040918201511690880152606090960195908201906001016105c8565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a084015261069a6101c084018261056a565b905060208401516106d86040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a086015261071383836105b4565b925060608601519150808584030160c086015250610731828261056a565b915050608084015160e08401528091505092915050565b60006020828403121561075a57600080fd5b813567ffffffffffffffff81111561077157600080fd5b61077d8482850161048c565b949350505050565b600067ffffffffffffffff82111561079f5761079f610359565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff811681146107cb57600080fd5b50565b8035610354816107a9565b600060c082840312156107eb57600080fd5b6107f3610388565b90508135610800816107a9565b81526020820135610810816107a9565b8060208301525060408201356040820152606082013560608201526080820135610839816107a9565b608082015260a082013567ffffffffffffffff81111561085857600080fd5b6108648482850161048c565b60a08301525092915050565b60006060828403121561088257600080fd5b61088a6103b1565b90508135610897816107a9565b80825250602082013560208201526040820135604082015292915050565b600082601f8301126108c657600080fd5b813560206108d66104ab83610785565b828152606092830285018201928282019190878511156108f557600080fd5b8387015b8581101561094e5781818a0312156109115760008081fd5b6109196103b1565b8135610924816107a9565b8152818601358682015260408083013561093d816107a9565b9082015284529284019281016108f9565b5090979650505050505050565b60008060006060848603121561097057600080fd5b833567ffffffffffffffff8082111561098857600080fd5b818601915086601f83011261099c57600080fd5b813560206109ac6104ab83610785565b82815260059290921b8401810191818101908a8411156109cb57600080fd5b8286015b84811015610abc578035868111156109e657600080fd5b870160e0818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215610a1a57600080fd5b610a226103d4565b8582013588811115610a3357600080fd5b610a418f88838601016107d9565b825250610a518e60408401610870565b8682015260a082013588811115610a685760008081fd5b610a768f88838601016108b5565b60408301525060c082013588811115610a8f5760008081fd5b610a9d8f888386010161048c565b60608301525060e09190910135608082015283529183019183016109cf565b509750610acc90508882016107ce565b955050506040860135915080821115610ae457600080fd5b50610af18682870161048c565b9150509250925092565b606081526000845160406060840152610b1760a084018261056a565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b52828261056a565b91505073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610b83818561056a565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610bcd57600080fd5b8151610bdb6104ab82610446565b818152846020838601011115610bf057600080fd5b61077d826020830160208701610546565b600060c08284031215610c1357600080fd5b610c1b610388565b90508151610c28816107a9565b81526020820151610c38816107a9565b8060208301525060408201516040820152606082015160608201526080820151610c61816107a9565b608082015260a082015167ffffffffffffffff811115610c8057600080fd5b61086484828501610bbc565b600060608284031215610c9e57600080fd5b610ca66103b1565b90508151610cb3816107a9565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610ce257600080fd5b81516020610cf26104ab83610785565b82815260609283028501820192828201919087851115610d1157600080fd5b8387015b8581101561094e5781818a031215610d2d5760008081fd5b610d356103b1565b8151610d40816107a9565b81528186015186820152604080830151610d59816107a9565b908201528452928401928101610d15565b600060208284031215610d7c57600080fd5b815167ffffffffffffffff80821115610d9457600080fd5b9083019060e08286031215610da857600080fd5b610db06103d4565b825182811115610dbf57600080fd5b610dcb87828601610c01565b825250610ddb8660208501610c8c565b6020820152608083015182811115610df257600080fd5b610dfe87828601610cd1565b60408301525060a083015182811115610e1657600080fd5b610e2287828601610bbc565b60608301525060c09290920151608083015250939250505056fea2646970667358221220d802f24c5a31dd0bf72a4e8ac13ae748856e2289d8a143beb270edbd1d7f4fae64736f6c63430008130033",
    "sourceMap": "471:2115:50:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d69146100465780637671d07b1461006f5780639943fa89146100b0575b600080fd5b6100596100543660046104e2565b6100c5565b604051610066919061061e565b60405180910390f35b61008b61007d366004610748565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6100c36100be36600461095b565b610221565b005b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040838101518401810151815180830183528581526020808201869052835190810184526000815292517f05afc97700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216926305afc977926101af92913091600401610afb565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b50610217816102c4565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216301461024357600080fd5b825160011461027e576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360008151811061029357610293610b8d565b60200260200101516040516020016102ab919061061e565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561034057815182602001fd5b8180602001905181019061021b9190610d6a565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103ab576103ab610359565b60405290565b6040516060810167ffffffffffffffff811182821017156103ab576103ab610359565b60405160a0810167ffffffffffffffff811182821017156103ab576103ab610359565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561043e5761043e610359565b604052919050565b600067ffffffffffffffff82111561046057610460610359565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261049d57600080fd5b81356104b06104ab82610446565b6103f7565b8181528460208386010111156104c557600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104f557600080fd5b823567ffffffffffffffff8082111561050d57600080fd5b6105198683870161048c565b9350602085013591508082111561052f57600080fd5b5061053c8582860161048c565b9150509250929050565b60005b83811015610561578181015183820152602001610549565b50506000910152565b60008151808452610582816020860160208601610546565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015610613578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040918201511690880152606090960195908201906001016105c8565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a084015261069a6101c084018261056a565b905060208401516106d86040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a086015261071383836105b4565b925060608601519150808584030160c086015250610731828261056a565b915050608084015160e08401528091505092915050565b60006020828403121561075a57600080fd5b813567ffffffffffffffff81111561077157600080fd5b61077d8482850161048c565b949350505050565b600067ffffffffffffffff82111561079f5761079f610359565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff811681146107cb57600080fd5b50565b8035610354816107a9565b600060c082840312156107eb57600080fd5b6107f3610388565b90508135610800816107a9565b81526020820135610810816107a9565b8060208301525060408201356040820152606082013560608201526080820135610839816107a9565b608082015260a082013567ffffffffffffffff81111561085857600080fd5b6108648482850161048c565b60a08301525092915050565b60006060828403121561088257600080fd5b61088a6103b1565b90508135610897816107a9565b80825250602082013560208201526040820135604082015292915050565b600082601f8301126108c657600080fd5b813560206108d66104ab83610785565b828152606092830285018201928282019190878511156108f557600080fd5b8387015b8581101561094e5781818a0312156109115760008081fd5b6109196103b1565b8135610924816107a9565b8152818601358682015260408083013561093d816107a9565b9082015284529284019281016108f9565b5090979650505050505050565b60008060006060848603121561097057600080fd5b833567ffffffffffffffff8082111561098857600080fd5b818601915086601f83011261099c57600080fd5b813560206109ac6104ab83610785565b82815260059290921b8401810191818101908a8411156109cb57600080fd5b8286015b84811015610abc578035868111156109e657600080fd5b870160e0818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215610a1a57600080fd5b610a226103d4565b8582013588811115610a3357600080fd5b610a418f88838601016107d9565b825250610a518e60408401610870565b8682015260a082013588811115610a685760008081fd5b610a768f88838601016108b5565b60408301525060c082013588811115610a8f5760008081fd5b610a9d8f888386010161048c565b60608301525060e09190910135608082015283529183019183016109cf565b509750610acc90508882016107ce565b955050506040860135915080821115610ae457600080fd5b50610af18682870161048c565b9150509250925092565b606081526000845160406060840152610b1760a084018261056a565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b52828261056a565b91505073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610b83818561056a565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610bcd57600080fd5b8151610bdb6104ab82610446565b818152846020838601011115610bf057600080fd5b61077d826020830160208701610546565b600060c08284031215610c1357600080fd5b610c1b610388565b90508151610c28816107a9565b81526020820151610c38816107a9565b8060208301525060408201516040820152606082015160608201526080820151610c61816107a9565b608082015260a082015167ffffffffffffffff811115610c8057600080fd5b61086484828501610bbc565b600060608284031215610c9e57600080fd5b610ca66103b1565b90508151610cb3816107a9565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610ce257600080fd5b81516020610cf26104ab83610785565b82815260609283028501820192828201919087851115610d1157600080fd5b8387015b8581101561094e5781818a031215610d2d5760008081fd5b610d356103b1565b8151610d40816107a9565b81528186015186820152604080830151610d59816107a9565b908201528452928401928101610d15565b600060208284031215610d7c57600080fd5b815167ffffffffffffffff80821115610d9457600080fd5b9083019060e08286031215610da857600080fd5b610db06103d4565b825182811115610dbf57600080fd5b610dcb87828601610c01565b825250610ddb8660208501610c8c565b6020820152608083015182811115610df257600080fd5b610dfe87828601610cd1565b60408301525060a083015182811115610e1657600080fd5b610e2287828601610bbc565b60608301525060c09290920151608083015250939250505056fea2646970667358221220d802f24c5a31dd0bf72a4e8ac13ae748856e2289d8a143beb270edbd1d7f4fae64736f6c63430008130033",
    "sourceMap": "471:2115:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:296;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1590:276;;;;;;:::i;:::-;1743:17;1732:29;;;1819;1791:58;;;;1785:65;;1590:276;;;;6220:42:103;6208:55;;;6190:74;;6178:2;6163:18;1590:276:50;6026:244:103;2193:391:50;;;;;;:::i;:::-;;:::i;:::-;;1096:296;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:17:50;1732:29;;;1819;1791:58;;;;1785:65;1246:23;;;;;;;;;;;;;;;;;1277:9;;;;;;;-1:-1:-1;1277:9:50;;1210:77;;;;;:35;;;;;;;:77;;1246:23;1271:4;;1210:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1350:25;1368:6;1350:17;:25::i;:::-;1341:34;;1299:87;1206:180;1096:296;;;;:::o;2193:391::-;2319:23;;;2337:4;2319:23;2311:32;;;;;;2357:14;:21;2382:1;2357:26;2353:87;;2406:23;;;;;;;;;;;;;;2353:87;2449:18;2481:14;2496:1;2481:17;;;;;;;;:::i;:::-;;;;;;;2470:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;2449:50;;2561:5;2555:12;2547:5;2543:2;2539:14;2532:36;1872:315;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:13:50;;-1:-1:-1;;;1980:201:50;;;2076:6;2070:13;2061:6;2057:2;2053:15;2046:38;1980:201;2146:6;2135:35;;;;;;;;;;;;:::i;1980:201::-;1872:315;;;:::o;14:184:103:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:253;275:2;269:9;317:4;305:17;;352:18;337:34;;373:22;;;334:62;331:88;;;399:18;;:::i;:::-;435:2;428:22;203:253;:::o;461:::-;533:2;527:9;575:4;563:17;;610:18;595:34;;631:22;;;592:62;589:88;;;657:18;;:::i;719:253::-;791:2;785:9;833:4;821:17;;868:18;853:34;;889:22;;;850:62;847:88;;;915:18;;:::i;977:334::-;1048:2;1042:9;1104:2;1094:13;;1109:66;1090:86;1078:99;;1207:18;1192:34;;1228:22;;;1189:62;1186:88;;;1254:18;;:::i;:::-;1290:2;1283:22;977:334;;-1:-1:-1;977:334:103:o;1316:245::-;1364:4;1397:18;1389:6;1386:30;1383:56;;;1419:18;;:::i;:::-;-1:-1:-1;1476:2:103;1464:15;1481:66;1460:88;1550:4;1456:99;;1316:245::o;1566:462::-;1608:5;1661:3;1654:4;1646:6;1642:17;1638:27;1628:55;;1679:1;1676;1669:12;1628:55;1715:6;1702:20;1746:48;1762:31;1790:2;1762:31;:::i;:::-;1746:48;:::i;:::-;1819:2;1810:7;1803:19;1865:3;1858:4;1853:2;1845:6;1841:15;1837:26;1834:35;1831:55;;;1882:1;1879;1872:12;1831:55;1947:2;1940:4;1932:6;1928:17;1921:4;1912:7;1908:18;1895:55;1995:1;1970:16;;;1988:4;1966:27;1959:38;;;;1974:7;1566:462;-1:-1:-1;;;1566:462:103:o;2033:539::-;2119:6;2127;2180:2;2168:9;2159:7;2155:23;2151:32;2148:52;;;2196:1;2193;2186:12;2148:52;2236:9;2223:23;2265:18;2306:2;2298:6;2295:14;2292:34;;;2322:1;2319;2312:12;2292:34;2345:49;2386:7;2377:6;2366:9;2362:22;2345:49;:::i;:::-;2335:59;;2447:2;2436:9;2432:18;2419:32;2403:48;;2476:2;2466:8;2463:16;2460:36;;;2492:1;2489;2482:12;2460:36;;2515:51;2558:7;2547:8;2536:9;2532:24;2515:51;:::i;:::-;2505:61;;;2033:539;;;;;:::o;2577:250::-;2662:1;2672:113;2686:6;2683:1;2680:13;2672:113;;;2762:11;;;2756:18;2743:11;;;2736:39;2708:2;2701:10;2672:113;;;-1:-1:-1;;2819:1:103;2801:16;;2794:27;2577:250::o;2832:329::-;2873:3;2911:5;2905:12;2938:6;2933:3;2926:19;2954:76;3023:6;3016:4;3011:3;3007:14;3000:4;2993:5;2989:16;2954:76;:::i;:::-;3075:2;3063:15;3080:66;3059:88;3050:98;;;;3150:4;3046:109;;2832:329;-1:-1:-1;;2832:329:103:o;3427:696::-;3491:3;3529:5;3523:12;3556:6;3551:3;3544:19;3582:4;3611:2;3606:3;3602:12;3595:19;;3648:2;3641:5;3637:14;3669:1;3679:419;3693:6;3690:1;3687:13;3679:419;;;3752:13;;3859:9;;3788:42;3855:18;;;3843:31;;3914:11;;;3908:18;3894:12;;;3887:40;3950:4;3998:11;;;3992:18;3988:27;3974:12;;;3967:49;4045:4;4036:14;;;;4073:15;;;;3715:1;3708:9;3679:419;;;-1:-1:-1;4114:3:103;;3427:696;-1:-1:-1;;;;;3427:696:103:o;4128:1568::-;4321:2;4310:9;4303:21;4284:4;4359:6;4353:13;4402:4;4397:2;4386:9;4382:18;4375:32;4426:42;4530:2;4515:12;4509:19;4505:28;4499:3;4488:9;4484:19;4477:57;4605:2;4599;4585:12;4581:21;4575:28;4571:37;4565:3;4554:9;4550:19;4543:66;4670:4;4656:12;4652:23;4646:30;4640:3;4629:9;4625:19;4618:59;4738:4;4724:12;4720:23;4714:30;4708:3;4697:9;4693:19;4686:59;4818:2;4810:4;4796:12;4792:23;4786:30;4782:39;4776:3;4765:9;4761:19;4754:68;;4877:4;4863:12;4859:23;4853:30;4831:52;;4920:4;4914:3;4903:9;4899:19;4892:33;4945:53;4993:3;4982:9;4978:19;4962:14;4945:53;:::i;:::-;4934:64;;5047:2;5039:6;5035:15;5029:22;5060:66;5120:4;5109:9;5105:20;5089:14;3246:12;;3260:42;3242:61;3230:74;;3353:4;3342:16;;;3336:23;3320:14;;;3313:47;3409:4;3398:16;;;3392:23;3376:14;;3369:47;3166:256;5060:66;;5175:4;5167:6;5163:17;5157:24;5200:66;5329:2;5317:9;5312:3;5308:19;5304:28;5297:4;5286:9;5282:20;5275:58;5356:60;5412:3;5396:14;5356:60;:::i;:::-;5342:74;;5465:4;5457:6;5453:17;5447:24;5425:46;;5537:2;5525:9;5517:6;5513:22;5509:31;5502:4;5491:9;5487:20;5480:61;;5564:40;5597:6;5581:14;5564:40;:::i;:::-;5550:54;;;5660:4;5652:6;5648:17;5642:24;5635:4;5624:9;5620:20;5613:54;5684:6;5676:14;;;4128:1568;;;;:::o;5701:320::-;5769:6;5822:2;5810:9;5801:7;5797:23;5793:32;5790:52;;;5838:1;5835;5828:12;5790:52;5878:9;5865:23;5911:18;5903:6;5900:30;5897:50;;;5943:1;5940;5933:12;5897:50;5966:49;6007:7;5998:6;5987:9;5983:22;5966:49;:::i;:::-;5956:59;5701:320;-1:-1:-1;;;;5701:320:103:o;6275:196::-;6348:4;6381:18;6373:6;6370:30;6367:56;;;6403:18;;:::i;:::-;-1:-1:-1;6448:1:103;6444:14;6460:4;6440:25;;6275:196::o;6476:164::-;6572:42;6565:5;6561:54;6554:5;6551:65;6541:93;;6630:1;6627;6620:12;6541:93;6476:164;:::o;6645:144::-;6713:20;;6742:41;6713:20;6742:41;:::i;6794:924::-;6850:5;6898:4;6886:9;6881:3;6877:19;6873:30;6870:50;;;6916:1;6913;6906:12;6870:50;6938:22;;:::i;:::-;6929:31;;6997:9;6984:23;7016:43;7051:7;7016:43;:::i;:::-;7068:22;;7142:2;7127:18;;7114:32;7155:43;7114:32;7155:43;:::i;:::-;7230:7;7225:2;7218:5;7214:14;7207:31;;7298:2;7287:9;7283:18;7270:32;7265:2;7258:5;7254:14;7247:56;7363:2;7352:9;7348:18;7335:32;7330:2;7323:5;7319:14;7312:56;7420:3;7409:9;7405:19;7392:33;7434:43;7469:7;7434:43;:::i;:::-;7504:3;7493:15;;7486:32;7569:3;7554:19;;7541:33;7597:18;7586:30;;7583:50;;;7629:1;7626;7619:12;7583:50;7666:45;7707:3;7698:6;7687:9;7683:22;7666:45;:::i;:::-;7660:3;7653:5;7649:15;7642:70;;6794:924;;;;:::o;7723:433::-;7780:5;7828:4;7816:9;7811:3;7807:19;7803:30;7800:50;;;7846:1;7843;7836:12;7800:50;7868:22;;:::i;:::-;7859:31;;7927:9;7914:23;7946:43;7981:7;7946:43;:::i;:::-;8012:7;8005:5;7998:22;;8080:2;8069:9;8065:18;8052:32;8047:2;8040:5;8036:14;8029:56;8145:2;8134:9;8130:18;8117:32;8112:2;8105:5;8101:14;8094:56;7723:433;;;;:::o;8161:1249::-;8226:5;8279:3;8272:4;8264:6;8260:17;8256:27;8246:55;;8297:1;8294;8287:12;8246:55;8333:6;8320:20;8359:4;8383:73;8399:56;8452:2;8399:56;:::i;8383:73::-;8490:15;;;8552:4;8595:11;;;8583:24;;8579:33;;;8521:12;;;;8478:3;8624:15;;;8621:35;;;8652:1;8649;8642:12;8621:35;8688:2;8680:6;8676:15;8700:681;8716:6;8711:3;8708:15;8700:681;;;8792:2;8786:3;8781;8777:13;8773:22;8770:112;;;8836:1;8865:2;8861;8854:14;8770:112;8908:22;;:::i;:::-;8971:3;8958:17;8988:43;9023:7;8988:43;:::i;:::-;9044:22;;9115:12;;;9102:26;9086:14;;;9079:50;9152:2;9195:12;;;9182:26;9221:43;9182:26;9221:43;:::i;:::-;9284:14;;;9277:31;9321:18;;9359:12;;;;8733;;8700:681;;;-1:-1:-1;9399:5:103;;8161:1249;-1:-1:-1;;;;;;;8161:1249:103:o;9415:2449::-;9558:6;9566;9574;9627:2;9615:9;9606:7;9602:23;9598:32;9595:52;;;9643:1;9640;9633:12;9595:52;9683:9;9670:23;9712:18;9753:2;9745:6;9742:14;9739:34;;;9769:1;9766;9759:12;9739:34;9807:6;9796:9;9792:22;9782:32;;9852:7;9845:4;9841:2;9837:13;9833:27;9823:55;;9874:1;9871;9864:12;9823:55;9910:2;9897:16;9932:4;9956:73;9972:56;10025:2;9972:56;:::i;9956:73::-;10063:15;;;10145:1;10141:10;;;;10133:19;;10129:28;;;10094:12;;;;10169:19;;;10166:39;;;10201:1;10198;10191:12;10166:39;10233:2;10229;10225:11;10245:1358;10261:6;10256:3;10253:15;10245:1358;;;10347:3;10334:17;10383:2;10370:11;10367:19;10364:39;;;10399:1;10396;10389:12;10364:39;10426:20;;10557:4;10470:16;;;10488:66;10466:89;10462:100;10459:120;;;10575:1;10572;10565:12;10459:120;10605:22;;:::i;:::-;10677:2;10673;10669:11;10656:25;10710:2;10700:8;10697:16;10694:36;;;10726:1;10723;10716:12;10694:36;10757:64;10813:7;10808:2;10797:8;10793:2;10789:17;10785:26;10757:64;:::i;:::-;10750:5;10743:79;;10858:52;10902:7;10895:4;10891:2;10887:13;10858:52;:::i;:::-;10853:2;10846:5;10842:14;10835:76;10961:4;10957:2;10953:13;10940:27;10996:2;10986:8;10983:16;10980:106;;;11040:1;11069:2;11065;11058:14;10980:106;11124:76;11192:7;11187:2;11176:8;11172:2;11168:17;11164:26;11124:76;:::i;:::-;11117:4;11110:5;11106:16;11099:102;;11251:3;11247:2;11243:12;11230:26;11285:2;11275:8;11272:16;11269:106;;;11329:1;11358:2;11354;11347:14;11269:106;11411:53;11456:7;11451:2;11440:8;11436:2;11432:17;11428:26;11411:53;:::i;:::-;11406:2;11395:14;;11388:77;-1:-1:-1;11523:4:103;11515:13;;;;11502:27;11496:3;11485:15;;11478:52;11543:18;;11581:12;;;;10278;;10245:1358;;;-1:-1:-1;11622:5:103;-1:-1:-1;11646:38:103;;-1:-1:-1;11665:18:103;;;11646:38;:::i;:::-;11636:48;;;;11737:4;11726:9;11722:20;11709:34;11693:50;;11768:2;11758:8;11755:16;11752:36;;;11784:1;11781;11774:12;11752:36;;11807:51;11850:7;11839:8;11828:9;11824:24;11807:51;:::i;:::-;11797:61;;;9415:2449;;;;;:::o;11869:896::-;12153:2;12142:9;12135:21;12116:4;12191:6;12185:13;12234:4;12229:2;12218:9;12214:18;12207:32;12262:51;12308:3;12297:9;12293:19;12279:12;12262:51;:::i;:::-;12248:65;;12362:4;12354:6;12350:17;12344:24;12433:66;12421:9;12413:6;12409:22;12405:95;12399:3;12388:9;12384:19;12377:124;12521:40;12554:6;12538:14;12521:40;:::i;:::-;12510:51;;;12611:42;12603:6;12599:55;12592:4;12581:9;12577:20;12570:85;12702:9;12697:3;12693:19;12686:4;12675:9;12671:20;12664:49;12730:29;12755:3;12747:6;12730:29;:::i;:::-;12722:37;11869:896;-1:-1:-1;;;;;;11869:896:103:o;12770:184::-;12822:77;12819:1;12812:88;12919:4;12916:1;12909:15;12943:4;12940:1;12933:15;12959:441;13012:5;13065:3;13058:4;13050:6;13046:17;13042:27;13032:55;;13083:1;13080;13073:12;13032:55;13112:6;13106:13;13143:48;13159:31;13187:2;13159:31;:::i;13143:48::-;13216:2;13207:7;13200:19;13262:3;13255:4;13250:2;13242:6;13238:15;13234:26;13231:35;13228:55;;;13279:1;13276;13269:12;13228:55;13292:77;13366:2;13359:4;13350:7;13346:18;13339:4;13331:6;13327:17;13292:77;:::i;13405:904::-;13472:5;13520:4;13508:9;13503:3;13499:19;13495:30;13492:50;;;13538:1;13535;13528:12;13492:50;13560:22;;:::i;:::-;13551:31;;13612:9;13606:16;13631:43;13666:7;13631:43;:::i;:::-;13683:22;;13750:2;13735:18;;13729:25;13763:43;13729:25;13763:43;:::i;:::-;13838:7;13833:2;13826:5;13822:14;13815:31;;13899:2;13888:9;13884:18;13878:25;13873:2;13866:5;13862:14;13855:49;13957:2;13946:9;13942:18;13936:25;13931:2;13924:5;13920:14;13913:49;14007:3;13996:9;13992:19;13986:26;14021:43;14056:7;14021:43;:::i;:::-;14091:3;14080:15;;14073:32;14149:3;14134:19;;14128:26;14177:18;14166:30;;14163:50;;;14209:1;14206;14199:12;14163:50;14246:56;14298:3;14289:6;14278:9;14274:22;14246:56;:::i;14314:423::-;14382:5;14430:4;14418:9;14413:3;14409:19;14405:30;14402:50;;;14448:1;14445;14438:12;14402:50;14470:22;;:::i;:::-;14461:31;;14522:9;14516:16;14541:43;14576:7;14541:43;:::i;:::-;14607:7;14600:5;14593:22;;14668:2;14657:9;14653:18;14647:25;14642:2;14635:5;14631:14;14624:49;14726:2;14715:9;14711:18;14705:25;14700:2;14693:5;14689:14;14682:49;14314:423;;;;:::o;14742:1232::-;14818:5;14871:3;14864:4;14856:6;14852:17;14848:27;14838:55;;14889:1;14886;14879:12;14838:55;14918:6;14912:13;14944:4;14968:73;14984:56;15037:2;14984:56;:::i;14968:73::-;15075:15;;;15137:4;15180:11;;;15168:24;;15164:33;;;15106:12;;;;15063:3;15209:15;;;15206:35;;;15237:1;15234;15227:12;15206:35;15273:2;15265:6;15261:15;15285:660;15301:6;15296:3;15293:15;15285:660;;;15377:2;15371:3;15366;15362:13;15358:22;15355:112;;;15421:1;15450:2;15446;15439:14;15355:112;15493:22;;:::i;:::-;15549:3;15543:10;15566:43;15601:7;15566:43;:::i;:::-;15622:22;;15686:12;;;15680:19;15664:14;;;15657:43;15723:2;15759:12;;;15753:19;15785:43;15753:19;15785:43;:::i;:::-;15848:14;;;15841:31;15885:18;;15923:12;;;;15318;;15285:660;;15979:1163;16081:6;16134:2;16122:9;16113:7;16109:23;16105:32;16102:52;;;16150:1;16147;16140:12;16102:52;16183:9;16177:16;16212:18;16253:2;16245:6;16242:14;16239:34;;;16269:1;16266;16259:12;16239:34;16292:22;;;;16348:4;16330:16;;;16326:27;16323:47;;;16366:1;16363;16356:12;16323:47;16392:22;;:::i;:::-;16445:2;16439:9;16473:2;16463:8;16460:16;16457:36;;;16489:1;16486;16479:12;16457:36;16516:66;16574:7;16563:8;16559:2;16555:17;16516:66;:::i;:::-;16509:5;16502:81;;16615:61;16668:7;16663:2;16659;16655:11;16615:61;:::i;:::-;16610:2;16603:5;16599:14;16592:85;16716:3;16712:2;16708:12;16702:19;16746:2;16736:8;16733:16;16730:36;;;16762:1;16759;16752:12;16730:36;16800:78;16870:7;16859:8;16855:2;16851:17;16800:78;:::i;:::-;16793:4;16786:5;16782:16;16775:104;;16918:4;16914:2;16910:13;16904:20;16949:2;16939:8;16936:16;16933:36;;;16965:1;16962;16955:12;16933:36;17003:55;17050:7;17039:8;17035:2;17031:17;17003:55;:::i;:::-;16996:4;16985:16;;16978:81;-1:-1:-1;17106:3:103;17098:12;;;;17092:19;17086:3;17075:15;;17068:44;-1:-1:-1;16989:5:103;15979:1163;-1:-1:-1;;;15979:1163:103:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getReactor(bytes)": "7671d07b",
    "quote(bytes,bytes)": "41d88d69",
    "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],address,bytes)": "9943fa89"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OrdersLengthIncorrect\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"}],\"name\":\"getReactor\",\"outputs\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"additionalValidationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalValidationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"additionalValidationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalValidationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder[]\",\"name\":\"resolvedOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"reactorCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"note this is meant to be used as an off-chain lens contract to pre-validate generic orders\",\"kind\":\"dev\",\"methods\":{\"getReactor(bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\"},\"returns\":{\"reactor\":\"reactor\"}},\"quote(bytes,bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\",\"sig\":\"The order signature\"},\"returns\":{\"result\":\"The ResolvedOrder\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"OrdersLengthIncorrect()\":[{\"notice\":\"thrown if reactorCallback receives more than one order\"}]},\"kind\":\"user\",\"methods\":{\"getReactor(bytes)\":{\"notice\":\"Return the reactor of a given order (abi.encoded bytes).\"},\"quote(bytes,bytes)\":{\"notice\":\"Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order\"}},\"notice\":\"Quoter contract for orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/OrderQuoter.sol\":\"OrderQuoter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2\",\"dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]},\"src/base/ProtocolFees.sol\":{\"keccak256\":\"0xa6a8588465e1e10db4b85385280b3678ed69ea33d4c740cd54480859cb8c425d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f281c905d6b2114f52136f3b79e0e4ffabbeae2423f6a680a960229a191b2179\",\"dweb:/ipfs/QmWeNkB8r7NaSjPeVoLRQN5fM9pxL3kxERnHjL8RUdgr23\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541\",\"dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e\",\"dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c\",\"dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5\",\"dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b\",\"dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lens/OrderQuoter.sol\":{\"keccak256\":\"0x0f20eed10c1fa2a9bca68f587e8086a87891d143c72b0cd08b35a0dfc8a8cb30\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b64681c3848b565f3d90a56a45ac8afbd1503e1de614b62ab32090683e90b04d\",\"dweb:/ipfs/QmeS75HMwZCLZQhDaTvsLK3dbQYwDDii4ptFYvMFCKDME5\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0xba3507a814d02b4e00e35de21f5dbb8cd9848a858dddcf5fb50185f8412fcbce\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://105bc368d448c88f6d80de6abc9128d2ded70106e1b738558b3793096d591010\",\"dweb:/ipfs/QmQau7C8U9Bht5TUtCHDiCyXhhQeRmYScv9NSCT6WaPNRi\"]},\"src/lib/ExpectedBalanceLib.sol\":{\"keccak256\":\"0x04b4ccd6b73bf815c1f9c32b3b8c5d1fd089ce35091cc5ed97ae2abe621d8f64\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c784b4d331d35b91bd28be8c75836b5c159cc84f4bb24110a4d92a94ed5dd80f\",\"dweb:/ipfs/QmeN38cSsaaaKQZTtSPQxJMPzXfG6ibDVi7HqZBBpZuxQQ\"]},\"src/lib/ResolvedOrderLib.sol\":{\"keccak256\":\"0x61f9eb65793208a9229333fd8526013202c2f7bb0bd1ccf593bcd708855927a9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://101a8469a76377c6677f53fea37bd7e73e9b2f0265bfcb05a1cbf99d302c0975\",\"dweb:/ipfs/QmTfhW4fRcygpmeHu9XdL3SjRLQEq5FYpnDAvGmy4HQ92d\"]},\"src/reactors/BaseReactor.sol\":{\"keccak256\":\"0x4efd9514e94d8d156830f34f978397105a5aa62e55ebe05cc0ec2570bc980d44\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://14bac9c1a69e85873193c775363c2aae0874b975ffcaaf558d194b782e80e69d\",\"dweb:/ipfs/QmTJWQeGWAJrZykVnSF1cCUUg6bt8q45VV6hdXuzZJc6oq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "OrdersLengthIncorrect"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getReactor",
          "outputs": [
            {
              "internalType": "contract IReactor",
              "name": "reactor",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quote",
          "outputs": [
            {
              "internalType": "struct ResolvedOrder",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "additionalValidationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "additionalValidationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResolvedOrder[]",
              "name": "resolvedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "additionalValidationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "additionalValidationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reactorCallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getReactor(bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member"
            },
            "returns": {
              "reactor": "reactor"
            }
          },
          "quote(bytes,bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member",
              "sig": "The order signature"
            },
            "returns": {
              "result": "The ResolvedOrder"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getReactor(bytes)": {
            "notice": "Return the reactor of a given order (abi.encoded bytes)."
          },
          "quote(bytes,bytes)": {
            "notice": "Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/OrderQuoter.sol": "OrderQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb",
        "urls": [
          "bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2",
          "dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b",
        "urls": [
          "bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060",
          "dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ProtocolFees.sol": {
        "keccak256": "0xa6a8588465e1e10db4b85385280b3678ed69ea33d4c740cd54480859cb8c425d",
        "urls": [
          "bzz-raw://f281c905d6b2114f52136f3b79e0e4ffabbeae2423f6a680a960229a191b2179",
          "dweb:/ipfs/QmWeNkB8r7NaSjPeVoLRQN5fM9pxL3kxERnHjL8RUdgr23"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62",
        "urls": [
          "bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541",
          "dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588",
        "urls": [
          "bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e",
          "dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c",
        "urls": [
          "bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c",
          "dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x6dfb8dffb88df0a79c96fc33f56badc0bde364b6303bcb71ba899afad5620739",
        "urls": [
          "bzz-raw://5b77ef5a017da630f874e8f53364c0c89cf1edf10a4f73240507d80156158ee5",
          "dweb:/ipfs/QmShFdCExRqJTyUpBRX6JEp81ZsCSQLGUCtvUXLGULkTQv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0x2a67397eaa1c59584339a9e85d3b3b52e8e6d4eb7278744fffa412864228155a",
        "urls": [
          "bzz-raw://4f73b9962494208d7ddac8dd200979251c4bcf161da02e2332d1f3112e75081b",
          "dweb:/ipfs/Qmes2Ko4ZD9XqxcbbguZFp4bHvmWhAw94VtBA3NiDuSJfF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lens/OrderQuoter.sol": {
        "keccak256": "0x0f20eed10c1fa2a9bca68f587e8086a87891d143c72b0cd08b35a0dfc8a8cb30",
        "urls": [
          "bzz-raw://b64681c3848b565f3d90a56a45ac8afbd1503e1de614b62ab32090683e90b04d",
          "dweb:/ipfs/QmeS75HMwZCLZQhDaTvsLK3dbQYwDDii4ptFYvMFCKDME5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0xba3507a814d02b4e00e35de21f5dbb8cd9848a858dddcf5fb50185f8412fcbce",
        "urls": [
          "bzz-raw://105bc368d448c88f6d80de6abc9128d2ded70106e1b738558b3793096d591010",
          "dweb:/ipfs/QmQau7C8U9Bht5TUtCHDiCyXhhQeRmYScv9NSCT6WaPNRi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExpectedBalanceLib.sol": {
        "keccak256": "0x04b4ccd6b73bf815c1f9c32b3b8c5d1fd089ce35091cc5ed97ae2abe621d8f64",
        "urls": [
          "bzz-raw://c784b4d331d35b91bd28be8c75836b5c159cc84f4bb24110a4d92a94ed5dd80f",
          "dweb:/ipfs/QmeN38cSsaaaKQZTtSPQxJMPzXfG6ibDVi7HqZBBpZuxQQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ResolvedOrderLib.sol": {
        "keccak256": "0x61f9eb65793208a9229333fd8526013202c2f7bb0bd1ccf593bcd708855927a9",
        "urls": [
          "bzz-raw://101a8469a76377c6677f53fea37bd7e73e9b2f0265bfcb05a1cbf99d302c0975",
          "dweb:/ipfs/QmTfhW4fRcygpmeHu9XdL3SjRLQEq5FYpnDAvGmy4HQ92d"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseReactor.sol": {
        "keccak256": "0x4efd9514e94d8d156830f34f978397105a5aa62e55ebe05cc0ec2570bc980d44",
        "urls": [
          "bzz-raw://14bac9c1a69e85873193c775363c2aae0874b975ffcaaf558d194b782e80e69d",
          "dweb:/ipfs/QmTJWQeGWAJrZykVnSF1cCUUg6bt8q45VV6hdXuzZJc6oq"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/OrderQuoter.sol",
    "id": 35670,
    "exportedSymbols": {
      "BaseReactor": [
        37551
      ],
      "IReactor": [
        35496
      ],
      "IReactorCallback": [
        35514
      ],
      "OrderInfo": [
        35328
      ],
      "OrderQuoter": [
        35669
      ],
      "ResolvedOrder": [
        35358
      ],
      "SignedOrder": [
        35363
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2542:50",
    "nodes": [
      {
        "id": 35532,
        "nodeType": "PragmaDirective",
        "src": "45:23:50",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 35534,
        "nodeType": "ImportDirective",
        "src": "70:68:50",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactorCallback.sol",
        "file": "../interfaces/IReactorCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35670,
        "sourceUnit": 35515,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35533,
              "name": "IReactorCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35514,
              "src": "78:16:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35536,
        "nodeType": "ImportDirective",
        "src": "139:52:50",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactor.sol",
        "file": "../interfaces/IReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35670,
        "sourceUnit": 35497,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35535,
              "name": "IReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35496,
              "src": "147:8:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35538,
        "nodeType": "ImportDirective",
        "src": "192:56:50",
        "nodes": [],
        "absolutePath": "src/reactors/BaseReactor.sol",
        "file": "../reactors/BaseReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35670,
        "sourceUnit": 37552,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35537,
              "name": "BaseReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37551,
              "src": "200:11:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35542,
        "nodeType": "ImportDirective",
        "src": "249:81:50",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35670,
        "sourceUnit": 35364,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35539,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35328,
              "src": "257:9:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 35540,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35358,
              "src": "268:13:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 35541,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35363,
              "src": "283:11:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35669,
        "nodeType": "ContractDefinition",
        "src": "471:2115:50",
        "nodes": [
          {
            "id": 35548,
            "nodeType": "ErrorDefinition",
            "src": "589:30:50",
            "nodes": [],
            "documentation": {
              "id": 35546,
              "nodeType": "StructuredDocumentation",
              "src": "518:66:50",
              "text": "@notice thrown if reactorCallback receives more than one order"
            },
            "errorSelector": "06ee9878",
            "name": "OrdersLengthIncorrect",
            "nameLocation": "595:21:50",
            "parameters": {
              "id": 35547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:2:50"
            }
          },
          {
            "id": 35551,
            "nodeType": "VariableDeclaration",
            "src": "625:39:50",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ORDER_INFO_OFFSET",
            "nameLocation": "642:17:50",
            "scope": 35669,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35549,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "625:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 35550,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "662:2:50",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "internal"
          },
          {
            "id": 35593,
            "nodeType": "FunctionDefinition",
            "src": "1096:296:50",
            "nodes": [],
            "body": {
              "id": 35592,
              "nodeType": "Block",
              "src": "1196:196:50",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 35578,
                        "nodeType": "Block",
                        "src": "1288:2:50",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 35579,
                      "nodeType": "TryCatchClause",
                      "src": "1288:2:50"
                    },
                    {
                      "block": {
                        "id": 35589,
                        "nodeType": "Block",
                        "src": "1327:59:50",
                        "statements": [
                          {
                            "expression": {
                              "id": 35587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 35583,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35560,
                                "src": "1341:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 35585,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35581,
                                    "src": "1368:6:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 35584,
                                  "name": "parseRevertReason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35628,
                                  "src": "1350:17:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$35358_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct ResolvedOrder memory)"
                                  }
                                },
                                "id": 35586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1350:25:50",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "src": "1341:34:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                                "typeString": "struct ResolvedOrder memory"
                              }
                            },
                            "id": 35588,
                            "nodeType": "ExpressionStatement",
                            "src": "1341:34:50"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 35590,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 35582,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 35581,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1319:6:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 35590,
                            "src": "1306:19:50",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 35580,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1306:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1305:21:50"
                      },
                      "src": "1299:87:50"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35569,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35554,
                            "src": "1258:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 35570,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35556,
                            "src": "1265:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 35568,
                          "name": "SignedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35363,
                          "src": "1246:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SignedOrder_$35363_storage_ptr_$",
                            "typeString": "type(struct SignedOrder storage pointer)"
                          }
                        },
                        "id": 35571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:23:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$35363_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        }
                      },
                      {
                        "id": 35572,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1271:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OrderQuoter_$35669",
                          "typeString": "contract OrderQuoter"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 35575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1283:2:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 35574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1277:5:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 35573,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1277:5:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1277:9:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$35363_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_OrderQuoter_$35669",
                          "typeString": "contract OrderQuoter"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35564,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35554,
                                "src": "1230:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 35563,
                              "name": "getReactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35604,
                              "src": "1219:10:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_contract$_IReactor_$35496_$",
                                "typeString": "function (bytes memory) pure returns (contract IReactor)"
                              }
                            },
                            "id": 35565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1219:17:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IReactor_$35496",
                              "typeString": "contract IReactor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IReactor_$35496",
                              "typeString": "contract IReactor"
                            }
                          ],
                          "id": 35562,
                          "name": "IReactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35496,
                          "src": "1210:8:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IReactor_$35496_$",
                            "typeString": "type(contract IReactor)"
                          }
                        },
                        "id": 35566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1210:27:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IReactor_$35496",
                          "typeString": "contract IReactor"
                        }
                      },
                      "id": 35567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1238:7:50",
                      "memberName": "execute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35482,
                      "src": "1210:35:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_SignedOrder_$35363_memory_ptr_$_t_contract$_IReactorCallback_$35514_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct SignedOrder memory,contract IReactorCallback,bytes memory) payable external"
                      }
                    },
                    "id": 35577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1210:77:50",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35591,
                  "nodeType": "TryStatement",
                  "src": "1206:180:50"
                }
              ]
            },
            "documentation": {
              "id": 35552,
              "nodeType": "StructuredDocumentation",
              "src": "671:420:50",
              "text": "@notice Quote the given order, returning the ResolvedOrder object which defines\n the current input and output token amounts required to satisfy it\n Also bubbles up any reverts that would occur during the processing of the order\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @param sig The order signature\n @return result The ResolvedOrder"
            },
            "functionSelector": "41d88d69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quote",
            "nameLocation": "1105:5:50",
            "parameters": {
              "id": 35557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35554,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1124:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35593,
                  "src": "1111:18:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35553,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35556,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1144:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35593,
                  "src": "1131:16:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35555,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1110:38:50"
            },
            "returnParameters": {
              "id": 35561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35560,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1188:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35593,
                  "src": "1167:27:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 35559,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35558,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1167:13:50"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35358,
                      "src": "1167:13:50"
                    },
                    "referencedDeclaration": 35358,
                    "src": "1167:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35358_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:29:50"
            },
            "scope": 35669,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35604,
            "nodeType": "FunctionDefinition",
            "src": "1590:276:50",
            "nodes": [],
            "body": {
              "id": 35603,
              "nodeType": "Block",
              "src": "1669:197:50",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1688:172:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1702:59:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "order",
                              "nodeType": "YulIdentifier",
                              "src": "1736:5:50"
                            },
                            {
                              "name": "ORDER_INFO_OFFSET",
                              "nodeType": "YulIdentifier",
                              "src": "1743:17:50"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1732:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1732:29:50"
                        },
                        "variables": [
                          {
                            "name": "orderInfoOffsetPointer",
                            "nodeType": "YulTypedName",
                            "src": "1706:22:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1774:76:50",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "orderInfoOffsetPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1795:22:50"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "orderInfoOffsetPointer",
                                      "nodeType": "YulIdentifier",
                                      "src": "1825:22:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1819:5:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1819:29:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1791:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1791:58:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1785:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1785:65:50"
                        },
                        "variableNames": [
                          {
                            "name": "reactor",
                            "nodeType": "YulIdentifier",
                            "src": "1774:7:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 35551,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1743:17:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35596,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1736:5:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35600,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1774:7:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 35602,
                  "nodeType": "InlineAssembly",
                  "src": "1679:181:50"
                }
              ]
            },
            "documentation": {
              "id": 35594,
              "nodeType": "StructuredDocumentation",
              "src": "1398:187:50",
              "text": "@notice Return the reactor of a given order (abi.encoded bytes).\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @return reactor"
            },
            "functionSelector": "7671d07b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReactor",
            "nameLocation": "1599:10:50",
            "parameters": {
              "id": 35597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35596,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1623:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35604,
                  "src": "1610:18:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35595,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1609:20:50"
            },
            "returnParameters": {
              "id": 35601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35600,
                  "mutability": "mutable",
                  "name": "reactor",
                  "nameLocation": "1660:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35604,
                  "src": "1651:16:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IReactor_$35496",
                    "typeString": "contract IReactor"
                  },
                  "typeName": {
                    "id": 35599,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35598,
                      "name": "IReactor",
                      "nameLocations": [
                        "1651:8:50"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35496,
                      "src": "1651:8:50"
                    },
                    "referencedDeclaration": 35496,
                    "src": "1651:8:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReactor_$35496",
                      "typeString": "contract IReactor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:18:50"
            },
            "scope": 35669,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35628,
            "nodeType": "FunctionDefinition",
            "src": "1872:315:50",
            "nodes": [],
            "body": {
              "id": 35627,
              "nodeType": "Block",
              "src": "1970:217:50",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 35612,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35606,
                        "src": "1984:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 35613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1991:6:50",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1984:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 35614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2000:3:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "1984:19:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 35625,
                    "nodeType": "Block",
                    "src": "2114:67:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35620,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35606,
                              "src": "2146:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 35621,
                                  "name": "ResolvedOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35358,
                                  "src": "2155:13:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$35358_storage_ptr_$",
                                    "typeString": "type(struct ResolvedOrder storage pointer)"
                                  }
                                }
                              ],
                              "id": 35622,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2154:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$35358_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$35358_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 35618,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2135:3:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 35619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2139:6:50",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "2135:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2135:35:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "functionReturnParameters": 35611,
                        "id": 35624,
                        "nodeType": "Return",
                        "src": "2128:42:50"
                      }
                    ]
                  },
                  "id": 35626,
                  "nodeType": "IfStatement",
                  "src": "1980:201:50",
                  "trueBody": {
                    "id": 35617,
                    "nodeType": "Block",
                    "src": "2005:103:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2028:70:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2057:2:50",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2061:6:50"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2053:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2053:15:50"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2076:6:50"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2070:5:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2070:13:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2046:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2046:38:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2046:38:50"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 35606,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2061:6:50",
                            "valueSize": 1
                          },
                          {
                            "declaration": 35606,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2076:6:50",
                            "valueSize": 1
                          }
                        ],
                        "id": 35616,
                        "nodeType": "InlineAssembly",
                        "src": "2019:79:50"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parseRevertReason",
            "nameLocation": "1881:17:50",
            "parameters": {
              "id": 35607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35606,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "1912:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35628,
                  "src": "1899:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35605,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1898:21:50"
            },
            "returnParameters": {
              "id": 35611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35610,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1963:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35628,
                  "src": "1942:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 35609,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35608,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1942:13:50"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35358,
                      "src": "1942:13:50"
                    },
                    "referencedDeclaration": 35358,
                    "src": "1942:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35358_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1941:28:50"
            },
            "scope": 35669,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 35668,
            "nodeType": "FunctionDefinition",
            "src": "2193:391:50",
            "nodes": [],
            "body": {
              "id": 35667,
              "nodeType": "Block",
              "src": "2301:283:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35640,
                          "name": "filler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35634,
                          "src": "2319:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 35643,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2337:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OrderQuoter_$35669",
                                "typeString": "contract OrderQuoter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OrderQuoter_$35669",
                                "typeString": "contract OrderQuoter"
                              }
                            ],
                            "id": 35642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2329:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35641,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2329:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2329:13:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2319:23:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 35639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2311:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 35646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:32:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35647,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:32:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 35648,
                        "name": "resolvedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35632,
                        "src": "2357:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35358_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ResolvedOrder memory[] memory"
                        }
                      },
                      "id": 35649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2372:6:50",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2357:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 35650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2382:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2357:26:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35656,
                  "nodeType": "IfStatement",
                  "src": "2353:87:50",
                  "trueBody": {
                    "id": 35655,
                    "nodeType": "Block",
                    "src": "2385:55:50",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35652,
                            "name": "OrdersLengthIncorrect",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35548,
                            "src": "2406:21:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2406:23:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35654,
                        "nodeType": "RevertStatement",
                        "src": "2399:30:50"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    35658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35658,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2462:5:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 35667,
                      "src": "2449:18:50",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 35657,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2449:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35665,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 35661,
                          "name": "resolvedOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35632,
                          "src": "2481:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35358_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ResolvedOrder memory[] memory"
                          }
                        },
                        "id": 35663,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 35662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2496:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2481:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$35358_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 35659,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2470:3:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 35660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2474:6:50",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2470:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 35664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2470:29:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2449:50:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2518:60:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2543:2:50",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2547:5:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2539:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2539:14:50"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2561:5:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2555:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2555:12:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2532:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2532:36:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2532:36:50"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 35658,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2547:5:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35658,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2561:5:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 35666,
                  "nodeType": "InlineAssembly",
                  "src": "2509:69:50"
                }
              ]
            },
            "baseFunctions": [
              35513
            ],
            "functionSelector": "9943fa89",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reactorCallback",
            "nameLocation": "2202:15:50",
            "parameters": {
              "id": 35637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35632,
                  "mutability": "mutable",
                  "name": "resolvedOrders",
                  "nameLocation": "2241:14:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35668,
                  "src": "2218:37:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35358_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ResolvedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35630,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 35629,
                        "name": "ResolvedOrder",
                        "nameLocations": [
                          "2218:13:50"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 35358,
                        "src": "2218:13:50"
                      },
                      "referencedDeclaration": 35358,
                      "src": "2218:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$35358_storage_ptr",
                        "typeString": "struct ResolvedOrder"
                      }
                    },
                    "id": 35631,
                    "nodeType": "ArrayTypeName",
                    "src": "2218:15:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35358_storage_$dyn_storage_ptr",
                      "typeString": "struct ResolvedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35634,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "2265:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35668,
                  "src": "2257:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2257:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35668,
                  "src": "2273:12:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35635,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2217:69:50"
            },
            "returnParameters": {
              "id": 35638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2301:0:50"
            },
            "scope": 35669,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35544,
              "name": "IReactorCallback",
              "nameLocations": [
                "495:16:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35514,
              "src": "495:16:50"
            },
            "id": 35545,
            "nodeType": "InheritanceSpecifier",
            "src": "495:16:50"
          }
        ],
        "canonicalName": "OrderQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35543,
          "nodeType": "StructuredDocumentation",
          "src": "332:139:50",
          "text": "@notice Quoter contract for orders\n @dev note this is meant to be used as an off-chain lens contract to pre-validate generic orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35669,
          35514
        ],
        "name": "OrderQuoter",
        "nameLocation": "480:11:50",
        "scope": 35670,
        "usedErrors": [
          35548
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 50
}