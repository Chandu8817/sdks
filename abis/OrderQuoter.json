{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        }
      ],
      "name": "getReactor",
      "outputs": [
        {
          "internalType": "address",
          "name": "reactor",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "validationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isFeeOutput",
                  "type": "bool"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder",
          "name": "result",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "validationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isFeeOutput",
                  "type": "bool"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder[]",
          "name": "resolvedOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "reactorCallback",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610e9e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632213f3a91461004657806341d88d691461005b5780637671d07b14610084575b600080fd5b6100596100543660046106c1565b6100c5565b005b61006e610069366004610861565b61012d565b60405161007b91906109ab565b60405180910390f35b6100a0610092366004610ad5565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007b565b73ffffffffffffffffffffffffffffffffffffffff821630146100e757600080fd5b6000836000815181106100fc576100fc610b12565b602002602001015160405160200161011491906109ab565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040838101518401810151815180830183528581526020808201869052835190810184526000815292517f05afc97700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216926305afc9779261021792913091600401610b41565b600060405180830381600087803b15801561023157600080fd5b505af1925050508015610242575060015b610283573d808015610270576040519150601f19603f3d011682016040523d82523d6000602084013e610275565b606091505b5061027f81610289565b9150505b92915050565b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561030557815182602001fd5b818060200190518101906102839190610d96565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103705761037061031e565b60405290565b6040516060810167ffffffffffffffff811182821017156103705761037061031e565b6040516080810167ffffffffffffffff811182821017156103705761037061031e565b60405160a0810167ffffffffffffffff811182821017156103705761037061031e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156104265761042661031e565b604052919050565b600067ffffffffffffffff8211156104485761044861031e565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461047457600080fd5b50565b803561031981610452565b600067ffffffffffffffff82111561049c5761049c61031e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126104d957600080fd5b81356104ec6104e782610482565b6103df565b81815284602083860101111561050157600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561053057600080fd5b61053861034d565b9050813561054581610452565b8152602082013561055581610452565b806020830152506040820135604082015260608201356060820152608082013561057e81610452565b608082015260a082013567ffffffffffffffff81111561059d57600080fd5b6105a9848285016104c8565b60a08301525092915050565b6000606082840312156105c757600080fd5b6105cf610376565b905081356105dc81610452565b80825250602082013560208201526040820135604082015292915050565b801515811461047457600080fd5b600082601f83011261061957600080fd5b813560206106296104e78361042e565b82815260079290921b8401810191818101908684111561064857600080fd5b8286015b848110156106b657608081890312156106655760008081fd5b61066d610399565b813561067881610452565b8152818501358582015260408083013561069181610452565b908201526060828101356106a4816105fa565b9082015283529183019160800161064c565b509695505050505050565b6000806000606084860312156106d657600080fd5b833567ffffffffffffffff808211156106ee57600080fd5b818601915086601f83011261070257600080fd5b813560206107126104e78361042e565b82815260059290921b8401810191818101908a84111561073157600080fd5b8286015b848110156108225780358681111561074c57600080fd5b870160e0818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001121561078057600080fd5b6107886103bc565b858201358881111561079957600080fd5b6107a78f888386010161051e565b8252506107b78e604084016105b5565b8682015260a0820135888111156107ce5760008081fd5b6107dc8f8883860101610608565b60408301525060c0820135888111156107f55760008081fd5b6108038f88838601016104c8565b60608301525060e0919091013560808201528352918301918301610735565b5097506108329050888201610477565b95505050604086013591508082111561084a57600080fd5b50610857868287016104c8565b9150509250925092565b6000806040838503121561087457600080fd5b823567ffffffffffffffff8082111561088c57600080fd5b610898868387016104c8565b935060208501359150808211156108ae57600080fd5b506108bb858286016104c8565b9150509250929050565b60005b838110156108e05781810151838201526020016108c8565b50506000910152565b600081518084526109018160208601602086016108c5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156109a0578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040808301519091169089015260609081015115159088015260809096019590820190600101610947565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a0840152610a276101c08401826108e9565b90506020840151610a656040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a0860152610aa08383610933565b925060608601519150808584030160c086015250610abe82826108e9565b915050608084015160e08401528091505092915050565b600060208284031215610ae757600080fd5b813567ffffffffffffffff811115610afe57600080fd5b610b0a848285016104c8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b606081526000845160406060840152610b5d60a08401826108e9565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b9882826108e9565b91505073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610bc981856108e9565b9695505050505050565b600082601f830112610be457600080fd5b8151610bf26104e782610482565b818152846020838601011115610c0757600080fd5b610b0a8260208301602087016108c5565b600060c08284031215610c2a57600080fd5b610c3261034d565b90508151610c3f81610452565b81526020820151610c4f81610452565b8060208301525060408201516040820152606082015160608201526080820151610c7881610452565b608082015260a082015167ffffffffffffffff811115610c9757600080fd5b6105a984828501610bd3565b600060608284031215610cb557600080fd5b610cbd610376565b90508151610cca81610452565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610cf957600080fd5b81516020610d096104e78361042e565b82815260079290921b84018101918181019086841115610d2857600080fd5b8286015b848110156106b65760808189031215610d455760008081fd5b610d4d610399565b8151610d5881610452565b81528185015185820152604080830151610d7181610452565b90820152606082810151610d84816105fa565b90820152835291830191608001610d2c565b600060208284031215610da857600080fd5b815167ffffffffffffffff80821115610dc057600080fd5b9083019060e08286031215610dd457600080fd5b610ddc6103bc565b825182811115610deb57600080fd5b610df787828601610c18565b825250610e078660208501610ca3565b6020820152608083015182811115610e1e57600080fd5b610e2a87828601610ce8565b60408301525060a083015182811115610e4257600080fd5b610e4e87828601610bd3565b60608301525060c09290920151608083015250939250505056fea26469706673582212202c91d2a01ecff032510bb0d50a7a754d9ed132430d2f912fcb8362cbc62e92e864736f6c63430008110033",
    "sourceMap": "419:1923:36:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632213f3a91461004657806341d88d691461005b5780637671d07b14610084575b600080fd5b6100596100543660046106c1565b6100c5565b005b61006e610069366004610861565b61012d565b60405161007b91906109ab565b60405180910390f35b6100a0610092366004610ad5565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007b565b73ffffffffffffffffffffffffffffffffffffffff821630146100e757600080fd5b6000836000815181106100fc576100fc610b12565b602002602001015160405160200161011491906109ab565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040838101518401810151815180830183528581526020808201869052835190810184526000815292517f05afc97700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216926305afc9779261021792913091600401610b41565b600060405180830381600087803b15801561023157600080fd5b505af1925050508015610242575060015b610283573d808015610270576040519150601f19603f3d011682016040523d82523d6000602084013e610275565b606091505b5061027f81610289565b9150505b92915050565b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561030557815182602001fd5b818060200190518101906102839190610d96565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103705761037061031e565b60405290565b6040516060810167ffffffffffffffff811182821017156103705761037061031e565b6040516080810167ffffffffffffffff811182821017156103705761037061031e565b60405160a0810167ffffffffffffffff811182821017156103705761037061031e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156104265761042661031e565b604052919050565b600067ffffffffffffffff8211156104485761044861031e565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461047457600080fd5b50565b803561031981610452565b600067ffffffffffffffff82111561049c5761049c61031e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126104d957600080fd5b81356104ec6104e782610482565b6103df565b81815284602083860101111561050157600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561053057600080fd5b61053861034d565b9050813561054581610452565b8152602082013561055581610452565b806020830152506040820135604082015260608201356060820152608082013561057e81610452565b608082015260a082013567ffffffffffffffff81111561059d57600080fd5b6105a9848285016104c8565b60a08301525092915050565b6000606082840312156105c757600080fd5b6105cf610376565b905081356105dc81610452565b80825250602082013560208201526040820135604082015292915050565b801515811461047457600080fd5b600082601f83011261061957600080fd5b813560206106296104e78361042e565b82815260079290921b8401810191818101908684111561064857600080fd5b8286015b848110156106b657608081890312156106655760008081fd5b61066d610399565b813561067881610452565b8152818501358582015260408083013561069181610452565b908201526060828101356106a4816105fa565b9082015283529183019160800161064c565b509695505050505050565b6000806000606084860312156106d657600080fd5b833567ffffffffffffffff808211156106ee57600080fd5b818601915086601f83011261070257600080fd5b813560206107126104e78361042e565b82815260059290921b8401810191818101908a84111561073157600080fd5b8286015b848110156108225780358681111561074c57600080fd5b870160e0818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001121561078057600080fd5b6107886103bc565b858201358881111561079957600080fd5b6107a78f888386010161051e565b8252506107b78e604084016105b5565b8682015260a0820135888111156107ce5760008081fd5b6107dc8f8883860101610608565b60408301525060c0820135888111156107f55760008081fd5b6108038f88838601016104c8565b60608301525060e0919091013560808201528352918301918301610735565b5097506108329050888201610477565b95505050604086013591508082111561084a57600080fd5b50610857868287016104c8565b9150509250925092565b6000806040838503121561087457600080fd5b823567ffffffffffffffff8082111561088c57600080fd5b610898868387016104c8565b935060208501359150808211156108ae57600080fd5b506108bb858286016104c8565b9150509250929050565b60005b838110156108e05781810151838201526020016108c8565b50506000910152565b600081518084526109018160208601602086016108c5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156109a0578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040808301519091169089015260609081015115159088015260809096019590820190600101610947565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a0840152610a276101c08401826108e9565b90506020840151610a656040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a0860152610aa08383610933565b925060608601519150808584030160c086015250610abe82826108e9565b915050608084015160e08401528091505092915050565b600060208284031215610ae757600080fd5b813567ffffffffffffffff811115610afe57600080fd5b610b0a848285016104c8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b606081526000845160406060840152610b5d60a08401826108e9565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b9882826108e9565b91505073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610bc981856108e9565b9695505050505050565b600082601f830112610be457600080fd5b8151610bf26104e782610482565b818152846020838601011115610c0757600080fd5b610b0a8260208301602087016108c5565b600060c08284031215610c2a57600080fd5b610c3261034d565b90508151610c3f81610452565b81526020820151610c4f81610452565b8060208301525060408201516040820152606082015160608201526080820151610c7881610452565b608082015260a082015167ffffffffffffffff811115610c9757600080fd5b6105a984828501610bd3565b600060608284031215610cb557600080fd5b610cbd610376565b90508151610cca81610452565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610cf957600080fd5b81516020610d096104e78361042e565b82815260079290921b84018101918181019086841115610d2857600080fd5b8286015b848110156106b65760808189031215610d455760008081fd5b610d4d610399565b8151610d5881610452565b81528185015185820152604080830151610d7181610452565b90820152606082810151610d84816105fa565b90820152835291830191608001610d2c565b600060208284031215610da857600080fd5b815167ffffffffffffffff80821115610dc057600080fd5b9083019060e08286031215610dd457600080fd5b610ddc6103bc565b825182811115610deb57600080fd5b610df787828601610c18565b825250610e078660208501610ca3565b6020820152608083015182811115610e1e57600080fd5b610e2a87828601610ce8565b60408301525060a083015182811115610e4257600080fd5b610e4e87828601610bd3565b60608301525060c09290920151608083015250939250505056fea26469706673582212202c91d2a01ecff032510bb0d50a7a754d9ed132430d2f912fcb8362cbc62e92e864736f6c63430008110033",
    "sourceMap": "419:1923:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2045:295;;;;;;:::i;:::-;;:::i;:::-;;937:308;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1443:275;;;;;;:::i;:::-;1595:17;1584:29;;;1671;1643:58;;;;1637:65;;1443:275;;;;12339:42:73;12327:55;;;12309:74;;12297:2;12282:18;1443:275:36;12163:226:73;2045:295:36;2171:23;;;2189:4;2171:23;2163:32;;;;;;2205:18;2237:14;2252:1;2237:17;;;;;;;;:::i;:::-;;;;;;;2226:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;2205:50;;2317:5;2311:12;2303:5;2299:2;2295:14;2288:36;937:308;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:17:36;1584:29;;;1671;1643:58;;;;1637:65;1090:23;;;;;;;;;;;;;;;;;1130:9;;;;;;;-1:-1:-1;1130:9:36;;1051:89;;;;;:38;;;;;;;:89;;1090:23;1123:4;;1051:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1047:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:25;1221:6;1203:17;:25::i;:::-;1194:34;;1152:87;1047:192;937:308;;;;:::o;1724:315::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:13:36;;-1:-1:-1;;;1832:201:36;;;1928:6;1922:13;1913:6;1909:2;1905:15;1898:38;1832:201;1998:6;1987:35;;;;;;;;;;;;:::i;1832:201::-;1724:315;;;:::o;14:184:73:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:253;275:2;269:9;317:4;305:17;;352:18;337:34;;373:22;;;334:62;331:88;;;399:18;;:::i;:::-;435:2;428:22;203:253;:::o;461:::-;533:2;527:9;575:4;563:17;;610:18;595:34;;631:22;;;592:62;589:88;;;657:18;;:::i;719:253::-;791:2;785:9;833:4;821:17;;868:18;853:34;;889:22;;;850:62;847:88;;;915:18;;:::i;977:253::-;1049:2;1043:9;1091:4;1079:17;;1126:18;1111:34;;1147:22;;;1108:62;1105:88;;;1173:18;;:::i;1235:334::-;1306:2;1300:9;1362:2;1352:13;;1367:66;1348:86;1336:99;;1465:18;1450:34;;1486:22;;;1447:62;1444:88;;;1512:18;;:::i;:::-;1548:2;1541:22;1235:334;;-1:-1:-1;1235:334:73:o;1574:196::-;1647:4;1680:18;1672:6;1669:30;1666:56;;;1702:18;;:::i;:::-;-1:-1:-1;1747:1:73;1743:14;1759:4;1739:25;;1574:196::o;1775:154::-;1861:42;1854:5;1850:54;1843:5;1840:65;1830:93;;1919:1;1916;1909:12;1830:93;1775:154;:::o;1934:134::-;2002:20;;2031:31;2002:20;2031:31;:::i;2073:245::-;2121:4;2154:18;2146:6;2143:30;2140:56;;;2176:18;;:::i;:::-;-1:-1:-1;2233:2:73;2221:15;2238:66;2217:88;2307:4;2213:99;;2073:245::o;2323:462::-;2365:5;2418:3;2411:4;2403:6;2399:17;2395:27;2385:55;;2436:1;2433;2426:12;2385:55;2472:6;2459:20;2503:48;2519:31;2547:2;2519:31;:::i;:::-;2503:48;:::i;:::-;2576:2;2567:7;2560:19;2622:3;2615:4;2610:2;2602:6;2598:15;2594:26;2591:35;2588:55;;;2639:1;2636;2629:12;2588:55;2704:2;2697:4;2689:6;2685:17;2678:4;2669:7;2665:18;2652:55;2752:1;2727:16;;;2745:4;2723:27;2716:38;;;;2731:7;2323:462;-1:-1:-1;;;2323:462:73:o;2790:894::-;2846:5;2894:4;2882:9;2877:3;2873:19;2869:30;2866:50;;;2912:1;2909;2902:12;2866:50;2934:22;;:::i;:::-;2925:31;;2993:9;2980:23;3012:33;3037:7;3012:33;:::i;:::-;3054:22;;3128:2;3113:18;;3100:32;3141:33;3100:32;3141:33;:::i;:::-;3206:7;3201:2;3194:5;3190:14;3183:31;;3274:2;3263:9;3259:18;3246:32;3241:2;3234:5;3230:14;3223:56;3339:2;3328:9;3324:18;3311:32;3306:2;3299:5;3295:14;3288:56;3396:3;3385:9;3381:19;3368:33;3410;3435:7;3410:33;:::i;:::-;3470:3;3459:15;;3452:32;3535:3;3520:19;;3507:33;3563:18;3552:30;;3549:50;;;3595:1;3592;3585:12;3549:50;3632:45;3673:3;3664:6;3653:9;3649:22;3632:45;:::i;:::-;3626:3;3619:5;3615:15;3608:70;;2790:894;;;;:::o;3689:423::-;3746:5;3794:4;3782:9;3777:3;3773:19;3769:30;3766:50;;;3812:1;3809;3802:12;3766:50;3834:22;;:::i;:::-;3825:31;;3893:9;3880:23;3912:33;3937:7;3912:33;:::i;:::-;3968:7;3961:5;3954:22;;4036:2;4025:9;4021:18;4008:32;4003:2;3996:5;3992:14;3985:56;4101:2;4090:9;4086:18;4073:32;4068:2;4061:5;4057:14;4050:56;3689:423;;;;:::o;4117:118::-;4203:5;4196:13;4189:21;4182:5;4179:32;4169:60;;4225:1;4222;4215:12;4240:1375;4305:5;4358:3;4351:4;4343:6;4339:17;4335:27;4325:55;;4376:1;4373;4366:12;4325:55;4412:6;4399:20;4438:4;4462:73;4478:56;4531:2;4478:56;:::i;4462:73::-;4569:15;;;4655:1;4651:10;;;;4639:23;;4635:32;;;4600:12;;;;4679:15;;;4676:35;;;4707:1;4704;4697:12;4676:35;4743:2;4735:6;4731:15;4755:831;4771:6;4766:3;4763:15;4755:831;;;4849:4;4843:3;4838;4834:13;4830:24;4827:114;;;4895:1;4924:2;4920;4913:14;4827:114;4967:22;;:::i;:::-;5030:3;5017:17;5047:33;5072:7;5047:33;:::i;:::-;5093:22;;5164:12;;;5151:26;5135:14;;;5128:50;5201:2;5244:12;;;5231:26;5270:33;5231:26;5270:33;:::i;:::-;5323:14;;;5316:31;5370:2;5413:12;;;5400:26;5439:30;5400:26;5439:30;:::i;:::-;5489:14;;;5482:31;5526:18;;5564:12;;;;4797:4;4788:14;4755:831;;;-1:-1:-1;5604:5:73;4240:1375;-1:-1:-1;;;;;;4240:1375:73:o;5620:2449::-;5763:6;5771;5779;5832:2;5820:9;5811:7;5807:23;5803:32;5800:52;;;5848:1;5845;5838:12;5800:52;5888:9;5875:23;5917:18;5958:2;5950:6;5947:14;5944:34;;;5974:1;5971;5964:12;5944:34;6012:6;6001:9;5997:22;5987:32;;6057:7;6050:4;6046:2;6042:13;6038:27;6028:55;;6079:1;6076;6069:12;6028:55;6115:2;6102:16;6137:4;6161:73;6177:56;6230:2;6177:56;:::i;6161:73::-;6268:15;;;6350:1;6346:10;;;;6338:19;;6334:28;;;6299:12;;;;6374:19;;;6371:39;;;6406:1;6403;6396:12;6371:39;6438:2;6434;6430:11;6450:1358;6466:6;6461:3;6458:15;6450:1358;;;6552:3;6539:17;6588:2;6575:11;6572:19;6569:39;;;6604:1;6601;6594:12;6569:39;6631:20;;6762:4;6675:16;;;6693:66;6671:89;6667:100;6664:120;;;6780:1;6777;6770:12;6664:120;6810:22;;:::i;:::-;6882:2;6878;6874:11;6861:25;6915:2;6905:8;6902:16;6899:36;;;6931:1;6928;6921:12;6899:36;6962:64;7018:7;7013:2;7002:8;6998:2;6994:17;6990:26;6962:64;:::i;:::-;6955:5;6948:79;;7063:52;7107:7;7100:4;7096:2;7092:13;7063:52;:::i;:::-;7058:2;7051:5;7047:14;7040:76;7166:4;7162:2;7158:13;7145:27;7201:2;7191:8;7188:16;7185:106;;;7245:1;7274:2;7270;7263:14;7185:106;7329:76;7397:7;7392:2;7381:8;7377:2;7373:17;7369:26;7329:76;:::i;:::-;7322:4;7315:5;7311:16;7304:102;;7456:3;7452:2;7448:12;7435:26;7490:2;7480:8;7477:16;7474:106;;;7534:1;7563:2;7559;7552:14;7474:106;7616:53;7661:7;7656:2;7645:8;7641:2;7637:17;7633:26;7616:53;:::i;:::-;7611:2;7600:14;;7593:77;-1:-1:-1;7728:4:73;7720:13;;;;7707:27;7701:3;7690:15;;7683:52;7748:18;;7786:12;;;;6483;;6450:1358;;;-1:-1:-1;7827:5:73;-1:-1:-1;7851:38:73;;-1:-1:-1;7870:18:73;;;7851:38;:::i;:::-;7841:48;;;;7942:4;7931:9;7927:20;7914:34;7898:50;;7973:2;7963:8;7960:16;7957:36;;;7989:1;7986;7979:12;7957:36;;8012:51;8055:7;8044:8;8033:9;8029:24;8012:51;:::i;:::-;8002:61;;;5620:2449;;;;;:::o;8074:539::-;8160:6;8168;8221:2;8209:9;8200:7;8196:23;8192:32;8189:52;;;8237:1;8234;8227:12;8189:52;8277:9;8264:23;8306:18;8347:2;8339:6;8336:14;8333:34;;;8363:1;8360;8353:12;8333:34;8386:49;8427:7;8418:6;8407:9;8403:22;8386:49;:::i;:::-;8376:59;;8488:2;8477:9;8473:18;8460:32;8444:48;;8517:2;8507:8;8504:16;8501:36;;;8533:1;8530;8523:12;8501:36;;8556:51;8599:7;8588:8;8577:9;8573:24;8556:51;:::i;:::-;8546:61;;;8074:539;;;;;:::o;8618:250::-;8703:1;8713:113;8727:6;8724:1;8721:13;8713:113;;;8803:11;;;8797:18;8784:11;;;8777:39;8749:2;8742:10;8713:113;;;-1:-1:-1;;8860:1:73;8842:16;;8835:27;8618:250::o;8873:329::-;8914:3;8952:5;8946:12;8979:6;8974:3;8967:19;8995:76;9064:6;9057:4;9052:3;9048:14;9041:4;9034:5;9030:16;8995:76;:::i;:::-;9116:2;9104:15;9121:66;9100:88;9091:98;;;;9191:4;9087:109;;8873:329;-1:-1:-1;;8873:329:73:o;9468:792::-;9532:3;9570:5;9564:12;9597:6;9592:3;9585:19;9623:4;9652:2;9647:3;9643:12;9636:19;;9689:2;9682:5;9678:14;9710:1;9720:515;9734:6;9731:1;9728:13;9720:515;;;9793:13;;9900:9;;9829:42;9896:18;;;9884:31;;9955:11;;;9949:18;9935:12;;;9928:40;9991:4;10039:11;;;10033:18;10029:27;;;10015:12;;;10008:49;10080:4;10138:11;;;10132:18;10125:26;10118:34;10104:12;;;10097:56;10182:4;10173:14;;;;10210:15;;;;9756:1;9749:9;9720:515;;;-1:-1:-1;10251:3:73;;9468:792;-1:-1:-1;;;;;9468:792:73:o;10265:1568::-;10458:2;10447:9;10440:21;10421:4;10496:6;10490:13;10539:4;10534:2;10523:9;10519:18;10512:32;10563:42;10667:2;10652:12;10646:19;10642:28;10636:3;10625:9;10621:19;10614:57;10742:2;10736;10722:12;10718:21;10712:28;10708:37;10702:3;10691:9;10687:19;10680:66;10807:4;10793:12;10789:23;10783:30;10777:3;10766:9;10762:19;10755:59;10875:4;10861:12;10857:23;10851:30;10845:3;10834:9;10830:19;10823:59;10955:2;10947:4;10933:12;10929:23;10923:30;10919:39;10913:3;10902:9;10898:19;10891:68;;11014:4;11000:12;10996:23;10990:30;10968:52;;11057:4;11051:3;11040:9;11036:19;11029:33;11082:53;11130:3;11119:9;11115:19;11099:14;11082:53;:::i;:::-;11071:64;;11184:2;11176:6;11172:15;11166:22;11197:66;11257:4;11246:9;11242:20;11226:14;9287:12;;9301:42;9283:61;9271:74;;9394:4;9383:16;;;9377:23;9361:14;;;9354:47;9450:4;9439:16;;;9433:23;9417:14;;9410:47;9207:256;11197:66;;11312:4;11304:6;11300:17;11294:24;11337:66;11466:2;11454:9;11449:3;11445:19;11441:28;11434:4;11423:9;11419:20;11412:58;11493:60;11549:3;11533:14;11493:60;:::i;:::-;11479:74;;11602:4;11594:6;11590:17;11584:24;11562:46;;11674:2;11662:9;11654:6;11650:22;11646:31;11639:4;11628:9;11624:20;11617:61;;11701:40;11734:6;11718:14;11701:40;:::i;:::-;11687:54;;;11797:4;11789:6;11785:17;11779:24;11772:4;11761:9;11757:20;11750:54;11821:6;11813:14;;;10265:1568;;;;:::o;11838:320::-;11906:6;11959:2;11947:9;11938:7;11934:23;11930:32;11927:52;;;11975:1;11972;11965:12;11927:52;12015:9;12002:23;12048:18;12040:6;12037:30;12034:50;;;12080:1;12077;12070:12;12034:50;12103:49;12144:7;12135:6;12124:9;12120:22;12103:49;:::i;:::-;12093:59;11838:320;-1:-1:-1;;;;11838:320:73:o;12394:184::-;12446:77;12443:1;12436:88;12543:4;12540:1;12533:15;12567:4;12564:1;12557:15;12583:875;12846:2;12835:9;12828:21;12809:4;12884:6;12878:13;12927:4;12922:2;12911:9;12907:18;12900:32;12955:51;13001:3;12990:9;12986:19;12972:12;12955:51;:::i;:::-;12941:65;;13055:4;13047:6;13043:17;13037:24;13126:66;13114:9;13106:6;13102:22;13098:95;13092:3;13081:9;13077:19;13070:124;13214:40;13247:6;13231:14;13214:40;:::i;:::-;13203:51;;;13304:42;13296:6;13292:55;13285:4;13274:9;13270:20;13263:85;13395:9;13390:3;13386:19;13379:4;13368:9;13364:20;13357:49;13423:29;13448:3;13440:6;13423:29;:::i;:::-;13415:37;12583:875;-1:-1:-1;;;;;;12583:875:73:o;13463:441::-;13516:5;13569:3;13562:4;13554:6;13550:17;13546:27;13536:55;;13587:1;13584;13577:12;13536:55;13616:6;13610:13;13647:48;13663:31;13691:2;13663:31;:::i;13647:48::-;13720:2;13711:7;13704:19;13766:3;13759:4;13754:2;13746:6;13742:15;13738:26;13735:35;13732:55;;;13783:1;13780;13773:12;13732:55;13796:77;13870:2;13863:4;13854:7;13850:18;13843:4;13835:6;13831:17;13796:77;:::i;13909:874::-;13976:5;14024:4;14012:9;14007:3;14003:19;13999:30;13996:50;;;14042:1;14039;14032:12;13996:50;14064:22;;:::i;:::-;14055:31;;14116:9;14110:16;14135:33;14160:7;14135:33;:::i;:::-;14177:22;;14244:2;14229:18;;14223:25;14257:33;14223:25;14257:33;:::i;:::-;14322:7;14317:2;14310:5;14306:14;14299:31;;14383:2;14372:9;14368:18;14362:25;14357:2;14350:5;14346:14;14339:49;14441:2;14430:9;14426:18;14420:25;14415:2;14408:5;14404:14;14397:49;14491:3;14480:9;14476:19;14470:26;14505:33;14530:7;14505:33;:::i;:::-;14565:3;14554:15;;14547:32;14623:3;14608:19;;14602:26;14651:18;14640:30;;14637:50;;;14683:1;14680;14673:12;14637:50;14720:56;14772:3;14763:6;14752:9;14748:22;14720:56;:::i;14788:413::-;14856:5;14904:4;14892:9;14887:3;14883:19;14879:30;14876:50;;;14922:1;14919;14912:12;14876:50;14944:22;;:::i;:::-;14935:31;;14996:9;14990:16;15015:33;15040:7;15015:33;:::i;:::-;15071:7;15064:5;15057:22;;15132:2;15121:9;15117:18;15111:25;15106:2;15099:5;15095:14;15088:49;15190:2;15179:9;15175:18;15169:25;15164:2;15157:5;15153:14;15146:49;14788:413;;;;:::o;15206:1351::-;15282:5;15335:3;15328:4;15320:6;15316:17;15312:27;15302:55;;15353:1;15350;15343:12;15302:55;15382:6;15376:13;15408:4;15432:73;15448:56;15501:2;15448:56;:::i;15432:73::-;15539:15;;;15625:1;15621:10;;;;15609:23;;15605:32;;;15570:12;;;;15649:15;;;15646:35;;;15677:1;15674;15667:12;15646:35;15713:2;15705:6;15701:15;15725:803;15741:6;15736:3;15733:15;15725:803;;;15819:4;15813:3;15808;15804:13;15800:24;15797:114;;;15865:1;15894:2;15890;15883:14;15797:114;15937:22;;:::i;:::-;15993:3;15987:10;16010:33;16035:7;16010:33;:::i;:::-;16056:22;;16120:12;;;16114:19;16098:14;;;16091:43;16157:2;16193:12;;;16187:19;16219:33;16187:19;16219:33;:::i;:::-;16272:14;;;16265:31;16319:2;16355:12;;;16349:19;16381:30;16349:19;16381:30;:::i;:::-;16431:14;;;16424:31;16468:18;;16506:12;;;;15767:4;15758:14;15725:803;;16562:1163;16664:6;16717:2;16705:9;16696:7;16692:23;16688:32;16685:52;;;16733:1;16730;16723:12;16685:52;16766:9;16760:16;16795:18;16836:2;16828:6;16825:14;16822:34;;;16852:1;16849;16842:12;16822:34;16875:22;;;;16931:4;16913:16;;;16909:27;16906:47;;;16949:1;16946;16939:12;16906:47;16975:22;;:::i;:::-;17028:2;17022:9;17056:2;17046:8;17043:16;17040:36;;;17072:1;17069;17062:12;17040:36;17099:66;17157:7;17146:8;17142:2;17138:17;17099:66;:::i;:::-;17092:5;17085:81;;17198:61;17251:7;17246:2;17242;17238:11;17198:61;:::i;:::-;17193:2;17186:5;17182:14;17175:85;17299:3;17295:2;17291:12;17285:19;17329:2;17319:8;17316:16;17313:36;;;17345:1;17342;17335:12;17313:36;17383:78;17453:7;17442:8;17438:2;17434:17;17383:78;:::i;:::-;17376:4;17369:5;17365:16;17358:104;;17501:4;17497:2;17493:13;17487:20;17532:2;17522:8;17519:16;17516:36;;;17548:1;17545;17538:12;17516:36;17586:55;17633:7;17622:8;17618:2;17614:17;17586:55;:::i;:::-;17579:4;17568:16;;17561:81;-1:-1:-1;17689:3:73;17681:12;;;;17675:19;17669:3;17658:15;;17651:44;-1:-1:-1;17572:5:73;16562:1163;-1:-1:-1;;;16562:1163:73:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getReactor(bytes)": "7671d07b",
    "quote(bytes,bytes)": "41d88d69",
    "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address,bool)[],bytes,bytes32)[],address,bytes)": "2213f3a9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"}],\"name\":\"getReactor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"reactor\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isFeeOutput\",\"type\":\"bool\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isFeeOutput\",\"type\":\"bool\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder[]\",\"name\":\"resolvedOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"reactorCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"note this is meant to be used as an off-chain lens contract to pre-validate generic orders\",\"kind\":\"dev\",\"methods\":{\"getReactor(bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\"},\"returns\":{\"reactor\":\"reactor\"}},\"quote(bytes,bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\",\"sig\":\"The order signature\"},\"returns\":{\"result\":\"The ResolvedOrder\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getReactor(bytes)\":{\"notice\":\"Return the reactor of a given order (abi.encoded bytes).\"},\"quote(bytes,bytes)\":{\"notice\":\"Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order\"}},\"notice\":\"Quoter contract for orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/OrderQuoter.sol\":\"OrderQuoter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd\",\"dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/base/IPSFees.sol\":{\"keccak256\":\"0xa609a9edc7fbd70af5e75ec99db5c0501760bb344aeaa3ff46b06a64fd2d9bb4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8fcc49c0fe9a7e67af626c534bd32872f579d6dd3569b3c0e771f88f369468fc\",\"dweb:/ipfs/QmXqfyAZJ4VGnKDnQPADBjfeKzt9YQLbV9ECEiQs5j2fP2\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x58599367f9c2bade01aad94c2400dc3e101d6012f5174ce58d493eab446ffecf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://70bbc851a87b83f08a7974da3739acbc04595cd9ac70c3bf1613cb497de4cfd0\",\"dweb:/ipfs/QmcfUrBcxffg2SFv9jTMY1ckFrMYktVFj1mvSBSysZrUXu\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0xed231914d27ab650995a2ed77fb590c733357ac7ac95d866432494c4894e0c65\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://321eeb78040cf5615129c5492782bb65d24b6ef72bed5d7626ae52299d16a311\",\"dweb:/ipfs/QmX46reJ8nm4StMjZ7crHM6gvF14ZLQ3gTHpMu2qz95VZ9\"]},\"src/external/ISignatureTransfer.sol\":{\"keccak256\":\"0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972\",\"dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x7d2b57839d50ba28d5086198d3bc5d51e03d46d4d49c1c3a6138fb57badfa9e1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7a7777bc509df4bcf6fac158386e2772bd5845eafb05ae3ac255d24bf01eb0b1\",\"dweb:/ipfs/QmNTU2AosapAVhYZ3Jt8cmRDtWz9TReNnvuw5cU9hTPYpN\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0x9e8a337d2714222c46e6f2d9483b076c608914cb53dcd7e62fdaf3ec0048ec14\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b38da9063cee714603f9f5fb7979455b5395a71e49458c6dcaff5b9f331cbc54\",\"dweb:/ipfs/QmQ6dM8svAhM358oZ8Z4zdB2d5uifxs5YzMbTdHGkLhXU4\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0x769f373729646b18931649277a6ee3e478d20082a4e4919cd421cf8bf46e9d97\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4f191c850320c5fed488cfcad50f48b262aed8337f9052e156504caf0d473259\",\"dweb:/ipfs/QmZConHaL8AR2YuZL3yvWrrVbzv7tEZNmsCaNYvqeoTBsA\"]},\"src/lens/OrderQuoter.sol\":{\"keccak256\":\"0xafc549e1d6912ae5c70f8b6c847b65f06ca927fb1e0bddcbb5410e75b7765752\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9a43f2b06d791ceae2ea8badf9b3469f72039333ad2b4addb3dd6a436ad5f05e\",\"dweb:/ipfs/QmcvJhAewXTPDR3QntHew97qygq3n2vfLY6YrsCBfuj6TM\"]},\"src/lib/ResolvedOrderLib.sol\":{\"keccak256\":\"0xcd72919824e41caaeb1c489dae7a02d342eb17f4cbe7b8afc9f11421f2c1cae8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c5cc0e2f8d002dc09f7c2fda2da5b924f02c307c7e83cc24b85d5833cefce9b8\",\"dweb:/ipfs/QmZSkXM4JveDdVmA9psJuBnjBp77RT3VGq7U5h9sv1Djbm\"]},\"src/reactors/BaseReactor.sol\":{\"keccak256\":\"0x2f23a2b43676131f69bdcca47e4fcf8b8be6ffa44f974c3737a14ab87eb5483f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0080d1ae5dcbb7f00a3f547d4192cdb2482e676f35e8f0a510d8cd856612b73b\",\"dweb:/ipfs/QmdKxnVPg15iktxfWT5au64AwCKRhz1GkKrW7b8z6V73ix\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getReactor",
          "outputs": [
            {
              "internalType": "address",
              "name": "reactor",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quote",
          "outputs": [
            {
              "internalType": "struct ResolvedOrder",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "validationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "validationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isFeeOutput",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResolvedOrder[]",
              "name": "resolvedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "validationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "validationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isFeeOutput",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reactorCallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getReactor(bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member"
            },
            "returns": {
              "reactor": "reactor"
            }
          },
          "quote(bytes,bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member",
              "sig": "The order signature"
            },
            "returns": {
              "result": "The ResolvedOrder"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getReactor(bytes)": {
            "notice": "Return the reactor of a given order (abi.encoded bytes)."
          },
          "quote(bytes,bytes)": {
            "notice": "Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/OrderQuoter.sol": "OrderQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169",
        "urls": [
          "bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd",
          "dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/IPSFees.sol": {
        "keccak256": "0xa609a9edc7fbd70af5e75ec99db5c0501760bb344aeaa3ff46b06a64fd2d9bb4",
        "urls": [
          "bzz-raw://8fcc49c0fe9a7e67af626c534bd32872f579d6dd3569b3c0e771f88f369468fc",
          "dweb:/ipfs/QmXqfyAZJ4VGnKDnQPADBjfeKzt9YQLbV9ECEiQs5j2fP2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x58599367f9c2bade01aad94c2400dc3e101d6012f5174ce58d493eab446ffecf",
        "urls": [
          "bzz-raw://70bbc851a87b83f08a7974da3739acbc04595cd9ac70c3bf1613cb497de4cfd0",
          "dweb:/ipfs/QmcfUrBcxffg2SFv9jTMY1ckFrMYktVFj1mvSBSysZrUXu"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0xed231914d27ab650995a2ed77fb590c733357ac7ac95d866432494c4894e0c65",
        "urls": [
          "bzz-raw://321eeb78040cf5615129c5492782bb65d24b6ef72bed5d7626ae52299d16a311",
          "dweb:/ipfs/QmX46reJ8nm4StMjZ7crHM6gvF14ZLQ3gTHpMu2qz95VZ9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/external/ISignatureTransfer.sol": {
        "keccak256": "0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c",
        "urls": [
          "bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972",
          "dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x7d2b57839d50ba28d5086198d3bc5d51e03d46d4d49c1c3a6138fb57badfa9e1",
        "urls": [
          "bzz-raw://7a7777bc509df4bcf6fac158386e2772bd5845eafb05ae3ac255d24bf01eb0b1",
          "dweb:/ipfs/QmNTU2AosapAVhYZ3Jt8cmRDtWz9TReNnvuw5cU9hTPYpN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0x9e8a337d2714222c46e6f2d9483b076c608914cb53dcd7e62fdaf3ec0048ec14",
        "urls": [
          "bzz-raw://b38da9063cee714603f9f5fb7979455b5395a71e49458c6dcaff5b9f331cbc54",
          "dweb:/ipfs/QmQ6dM8svAhM358oZ8Z4zdB2d5uifxs5YzMbTdHGkLhXU4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0x769f373729646b18931649277a6ee3e478d20082a4e4919cd421cf8bf46e9d97",
        "urls": [
          "bzz-raw://4f191c850320c5fed488cfcad50f48b262aed8337f9052e156504caf0d473259",
          "dweb:/ipfs/QmZConHaL8AR2YuZL3yvWrrVbzv7tEZNmsCaNYvqeoTBsA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lens/OrderQuoter.sol": {
        "keccak256": "0xafc549e1d6912ae5c70f8b6c847b65f06ca927fb1e0bddcbb5410e75b7765752",
        "urls": [
          "bzz-raw://9a43f2b06d791ceae2ea8badf9b3469f72039333ad2b4addb3dd6a436ad5f05e",
          "dweb:/ipfs/QmcvJhAewXTPDR3QntHew97qygq3n2vfLY6YrsCBfuj6TM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ResolvedOrderLib.sol": {
        "keccak256": "0xcd72919824e41caaeb1c489dae7a02d342eb17f4cbe7b8afc9f11421f2c1cae8",
        "urls": [
          "bzz-raw://c5cc0e2f8d002dc09f7c2fda2da5b924f02c307c7e83cc24b85d5833cefce9b8",
          "dweb:/ipfs/QmZSkXM4JveDdVmA9psJuBnjBp77RT3VGq7U5h9sv1Djbm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseReactor.sol": {
        "keccak256": "0x2f23a2b43676131f69bdcca47e4fcf8b8be6ffa44f974c3737a14ab87eb5483f",
        "urls": [
          "bzz-raw://0080d1ae5dcbb7f00a3f547d4192cdb2482e676f35e8f0a510d8cd856612b73b",
          "dweb:/ipfs/QmdKxnVPg15iktxfWT5au64AwCKRhz1GkKrW7b8z6V73ix"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/OrderQuoter.sol",
    "id": 28196,
    "exportedSymbols": {
      "BaseReactor": [
        29016
      ],
      "IReactorCallback": [
        28050
      ],
      "OrderInfo": [
        27811
      ],
      "OrderQuoter": [
        28195
      ],
      "ResolvedOrder": [
        27842
      ],
      "SignedOrder": [
        27847
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2298:36",
    "nodes": [
      {
        "id": 28070,
        "nodeType": "PragmaDirective",
        "src": "45:24:36",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 28072,
        "nodeType": "ImportDirective",
        "src": "71:68:36",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactorCallback.sol",
        "file": "../interfaces/IReactorCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28196,
        "sourceUnit": 28051,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28071,
              "name": "IReactorCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28050,
              "src": "79:16:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28074,
        "nodeType": "ImportDirective",
        "src": "140:56:36",
        "nodes": [],
        "absolutePath": "src/reactors/BaseReactor.sol",
        "file": "../reactors/BaseReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28196,
        "sourceUnit": 29017,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28073,
              "name": "BaseReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29016,
              "src": "148:11:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28078,
        "nodeType": "ImportDirective",
        "src": "197:81:36",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28196,
        "sourceUnit": 27848,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28075,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27811,
              "src": "205:9:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 28076,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27842,
              "src": "216:13:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 28077,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27847,
              "src": "231:11:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28195,
        "nodeType": "ContractDefinition",
        "src": "419:1923:36",
        "nodes": [
          {
            "id": 28084,
            "nodeType": "VariableDeclaration",
            "src": "466:39:36",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ORDER_INFO_OFFSET",
            "nameLocation": "483:17:36",
            "scope": 28195,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28082,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "466:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 28083,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "503:2:36",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "internal"
          },
          {
            "id": 28129,
            "nodeType": "FunctionDefinition",
            "src": "937:308:36",
            "nodes": [],
            "body": {
              "id": 28128,
              "nodeType": "Block",
              "src": "1037:208:36",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 28114,
                        "nodeType": "Block",
                        "src": "1141:2:36",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 28115,
                      "nodeType": "TryCatchClause",
                      "src": "1141:2:36"
                    },
                    {
                      "block": {
                        "id": 28125,
                        "nodeType": "Block",
                        "src": "1180:59:36",
                        "statements": [
                          {
                            "expression": {
                              "id": 28123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 28119,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28093,
                                "src": "1194:6:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$27842_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 28121,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28117,
                                    "src": "1221:6:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 28120,
                                  "name": "parseRevertReason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28163,
                                  "src": "1203:17:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$27842_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct ResolvedOrder memory)"
                                  }
                                },
                                "id": 28122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1203:25:36",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$27842_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "src": "1194:34:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResolvedOrder_$27842_memory_ptr",
                                "typeString": "struct ResolvedOrder memory"
                              }
                            },
                            "id": 28124,
                            "nodeType": "ExpressionStatement",
                            "src": "1194:34:36"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 28126,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 28118,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 28117,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1172:6:36",
                            "nodeType": "VariableDeclaration",
                            "scope": 28126,
                            "src": "1159:19:36",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 28116,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1159:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1158:21:36"
                      },
                      "src": "1152:87:36"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28102,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28087,
                            "src": "1102:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 28103,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28089,
                            "src": "1109:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 28101,
                          "name": "SignedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27847,
                          "src": "1090:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SignedOrder_$27847_storage_ptr_$",
                            "typeString": "type(struct SignedOrder storage pointer)"
                          }
                        },
                        "id": 28104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1090:23:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$27847_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28107,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1123:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OrderQuoter_$28195",
                              "typeString": "contract OrderQuoter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OrderQuoter_$28195",
                              "typeString": "contract OrderQuoter"
                            }
                          ],
                          "id": 28106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1115:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28105,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1115:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1115:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 28111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1136:2:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 28110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1130:5:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 28109,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1130:5:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1130:9:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$27847_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 28097,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28087,
                                "src": "1074:5:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 28096,
                              "name": "getReactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28139,
                              "src": "1063:10:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes memory) pure returns (address)"
                              }
                            },
                            "id": 28098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1063:17:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28095,
                          "name": "BaseReactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29016,
                          "src": "1051:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BaseReactor_$29016_$",
                            "typeString": "type(contract BaseReactor)"
                          }
                        },
                        "id": 28099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1051:30:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseReactor_$29016",
                          "typeString": "contract BaseReactor"
                        }
                      },
                      "id": 28100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1082:7:36",
                      "memberName": "execute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28809,
                      "src": "1051:38:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SignedOrder_$27847_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct SignedOrder memory,address,bytes memory) external"
                      }
                    },
                    "id": 28113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:89:36",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28127,
                  "nodeType": "TryStatement",
                  "src": "1047:192:36"
                }
              ]
            },
            "documentation": {
              "id": 28085,
              "nodeType": "StructuredDocumentation",
              "src": "512:420:36",
              "text": "@notice Quote the given order, returning the ResolvedOrder object which defines\n the current input and output token amounts required to satisfy it\n Also bubbles up any reverts that would occur during the processing of the order\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @param sig The order signature\n @return result The ResolvedOrder"
            },
            "functionSelector": "41d88d69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quote",
            "nameLocation": "946:5:36",
            "parameters": {
              "id": 28090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28087,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "965:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 28129,
                  "src": "952:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28086,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28089,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "985:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 28129,
                  "src": "972:16:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28088,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:38:36"
            },
            "returnParameters": {
              "id": 28094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28093,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1029:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 28129,
                  "src": "1008:27:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$27842_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 28092,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28091,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1008:13:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27842,
                      "src": "1008:13:36"
                    },
                    "referencedDeclaration": 27842,
                    "src": "1008:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$27842_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1007:29:36"
            },
            "scope": 28195,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28139,
            "nodeType": "FunctionDefinition",
            "src": "1443:275:36",
            "nodes": [],
            "body": {
              "id": 28138,
              "nodeType": "Block",
              "src": "1521:197:36",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1540:172:36",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1554:59:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "order",
                              "nodeType": "YulIdentifier",
                              "src": "1588:5:36"
                            },
                            {
                              "name": "ORDER_INFO_OFFSET",
                              "nodeType": "YulIdentifier",
                              "src": "1595:17:36"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1584:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1584:29:36"
                        },
                        "variables": [
                          {
                            "name": "orderInfoOffsetPointer",
                            "nodeType": "YulTypedName",
                            "src": "1558:22:36",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1626:76:36",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "orderInfoOffsetPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1647:22:36"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "orderInfoOffsetPointer",
                                      "nodeType": "YulIdentifier",
                                      "src": "1677:22:36"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1671:5:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1671:29:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1643:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1643:58:36"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1637:5:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1637:65:36"
                        },
                        "variableNames": [
                          {
                            "name": "reactor",
                            "nodeType": "YulIdentifier",
                            "src": "1626:7:36"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 28084,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1595:17:36",
                      "valueSize": 1
                    },
                    {
                      "declaration": 28132,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1588:5:36",
                      "valueSize": 1
                    },
                    {
                      "declaration": 28135,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1626:7:36",
                      "valueSize": 1
                    }
                  ],
                  "id": 28137,
                  "nodeType": "InlineAssembly",
                  "src": "1531:181:36"
                }
              ]
            },
            "documentation": {
              "id": 28130,
              "nodeType": "StructuredDocumentation",
              "src": "1251:187:36",
              "text": "@notice Return the reactor of a given order (abi.encoded bytes).\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @return reactor"
            },
            "functionSelector": "7671d07b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReactor",
            "nameLocation": "1452:10:36",
            "parameters": {
              "id": 28133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28132,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1476:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 28139,
                  "src": "1463:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28131,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:20:36"
            },
            "returnParameters": {
              "id": 28136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28135,
                  "mutability": "mutable",
                  "name": "reactor",
                  "nameLocation": "1512:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 28139,
                  "src": "1504:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1503:17:36"
            },
            "scope": 28195,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28163,
            "nodeType": "FunctionDefinition",
            "src": "1724:315:36",
            "nodes": [],
            "body": {
              "id": 28162,
              "nodeType": "Block",
              "src": "1822:217:36",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28147,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28141,
                        "src": "1836:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 28148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1843:6:36",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1836:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 28149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1852:3:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "1836:19:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 28160,
                    "nodeType": "Block",
                    "src": "1966:67:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28155,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28141,
                              "src": "1998:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 28156,
                                  "name": "ResolvedOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27842,
                                  "src": "2007:13:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$27842_storage_ptr_$",
                                    "typeString": "type(struct ResolvedOrder storage pointer)"
                                  }
                                }
                              ],
                              "id": 28157,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2006:15:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$27842_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$27842_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 28153,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1987:3:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 28154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1991:6:36",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "1987:10:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 28158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1987:35:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$27842_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "functionReturnParameters": 28146,
                        "id": 28159,
                        "nodeType": "Return",
                        "src": "1980:42:36"
                      }
                    ]
                  },
                  "id": 28161,
                  "nodeType": "IfStatement",
                  "src": "1832:201:36",
                  "trueBody": {
                    "id": 28152,
                    "nodeType": "Block",
                    "src": "1857:103:36",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1880:70:36",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1909:2:36",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1913:6:36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1905:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1905:15:36"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1928:6:36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1922:5:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1922:13:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1898:6:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1898:38:36"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1898:38:36"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 28141,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1913:6:36",
                            "valueSize": 1
                          },
                          {
                            "declaration": 28141,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1928:6:36",
                            "valueSize": 1
                          }
                        ],
                        "id": 28151,
                        "nodeType": "InlineAssembly",
                        "src": "1871:79:36"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parseRevertReason",
            "nameLocation": "1733:17:36",
            "parameters": {
              "id": 28142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28141,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "1764:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 28163,
                  "src": "1751:19:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28140,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1750:21:36"
            },
            "returnParameters": {
              "id": 28146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28145,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1815:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 28163,
                  "src": "1794:26:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$27842_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 28144,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28143,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1794:13:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27842,
                      "src": "1794:13:36"
                    },
                    "referencedDeclaration": 27842,
                    "src": "1794:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$27842_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:28:36"
            },
            "scope": 28195,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 28194,
            "nodeType": "FunctionDefinition",
            "src": "2045:295:36",
            "nodes": [],
            "body": {
              "id": 28193,
              "nodeType": "Block",
              "src": "2153:187:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 28180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28175,
                          "name": "filler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28169,
                          "src": "2171:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 28178,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2189:4:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OrderQuoter_$28195",
                                "typeString": "contract OrderQuoter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OrderQuoter_$28195",
                                "typeString": "contract OrderQuoter"
                              }
                            ],
                            "id": 28177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2181:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 28176,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2181:7:36",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2181:13:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2171:23:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 28174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2163:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 28181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:32:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28182,
                  "nodeType": "ExpressionStatement",
                  "src": "2163:32:36"
                },
                {
                  "assignments": [
                    28184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28184,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2218:5:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 28193,
                      "src": "2205:18:36",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 28183,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2205:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28191,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 28187,
                          "name": "resolvedOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28167,
                          "src": "2237:14:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$27842_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ResolvedOrder memory[] memory"
                          }
                        },
                        "id": 28189,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 28188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2252:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2237:17:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$27842_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$27842_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 28185,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2226:3:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 28186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2230:6:36",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2226:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 28190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2226:29:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2205:50:36"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2274:60:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2299:2:36",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2303:5:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2295:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2295:14:36"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2317:5:36"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2311:5:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2311:12:36"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2288:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2288:36:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2288:36:36"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 28184,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2303:5:36",
                      "valueSize": 1
                    },
                    {
                      "declaration": 28184,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2317:5:36",
                      "valueSize": 1
                    }
                  ],
                  "id": 28192,
                  "nodeType": "InlineAssembly",
                  "src": "2265:69:36"
                }
              ]
            },
            "baseFunctions": [
              28049
            ],
            "functionSelector": "2213f3a9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reactorCallback",
            "nameLocation": "2054:15:36",
            "parameters": {
              "id": 28172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28167,
                  "mutability": "mutable",
                  "name": "resolvedOrders",
                  "nameLocation": "2093:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 28194,
                  "src": "2070:37:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$27842_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ResolvedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28165,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 28164,
                        "name": "ResolvedOrder",
                        "nameLocations": [
                          "2070:13:36"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 27842,
                        "src": "2070:13:36"
                      },
                      "referencedDeclaration": 27842,
                      "src": "2070:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$27842_storage_ptr",
                        "typeString": "struct ResolvedOrder"
                      }
                    },
                    "id": 28166,
                    "nodeType": "ArrayTypeName",
                    "src": "2070:15:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$27842_storage_$dyn_storage_ptr",
                      "typeString": "struct ResolvedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28169,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "2117:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 28194,
                  "src": "2109:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28194,
                  "src": "2125:12:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28170,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2125:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2069:69:36"
            },
            "returnParameters": {
              "id": 28173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2153:0:36"
            },
            "scope": 28195,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28080,
              "name": "IReactorCallback",
              "nameLocations": [
                "443:16:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28050,
              "src": "443:16:36"
            },
            "id": 28081,
            "nodeType": "InheritanceSpecifier",
            "src": "443:16:36"
          }
        ],
        "canonicalName": "OrderQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28079,
          "nodeType": "StructuredDocumentation",
          "src": "280:139:36",
          "text": "@notice Quoter contract for orders\n @dev note this is meant to be used as an off-chain lens contract to pre-validate generic orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28195,
          28050
        ],
        "name": "OrderQuoter",
        "nameLocation": "428:11:36",
        "scope": 28196,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 36
}