{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        }
      ],
      "name": "getReactor",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "reactor",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "validationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder",
          "name": "result",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "validationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder[]",
          "name": "resolvedOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "reactorCallback",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610e37806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d69146100465780637671d07b1461006f5780639943fa89146100b0575b600080fd5b6100596100543660046104a7565b6100c5565b60405161006691906105e3565b60405180910390f35b61008b61007d36600461070d565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6100c36100be366004610920565b610221565b005b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040838101518401810151815180830183528581526020808201869052835190810184526000815292517f05afc97700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216926305afc977926101af92913091600401610ac0565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b5061021781610289565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216301461024357600080fd5b60008360008151811061025857610258610b52565b602002602001015160405160200161027091906105e3565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561030557815182602001fd5b8180602001905181019061021b9190610d2f565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103705761037061031e565b60405290565b6040516060810167ffffffffffffffff811182821017156103705761037061031e565b60405160a0810167ffffffffffffffff811182821017156103705761037061031e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156104035761040361031e565b604052919050565b600067ffffffffffffffff8211156104255761042561031e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261046257600080fd5b81356104756104708261040b565b6103bc565b81815284602083860101111561048a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104ba57600080fd5b823567ffffffffffffffff808211156104d257600080fd5b6104de86838701610451565b935060208501359150808211156104f457600080fd5b5061050185828601610451565b9150509250929050565b60005b8381101561052657818101518382015260200161050e565b50506000910152565b6000815180845261054781602086016020860161050b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156105d8578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a015260409182015116908801526060909601959082019060010161058d565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a084015261065f6101c084018261052f565b9050602084015161069d6040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a08601526106d88383610579565b925060608601519150808584030160c0860152506106f6828261052f565b915050608084015160e08401528091505092915050565b60006020828403121561071f57600080fd5b813567ffffffffffffffff81111561073657600080fd5b61074284828501610451565b949350505050565b600067ffffffffffffffff8211156107645761076461031e565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461079057600080fd5b50565b80356103198161076e565b600060c082840312156107b057600080fd5b6107b861034d565b905081356107c58161076e565b815260208201356107d58161076e565b80602083015250604082013560408201526060820135606082015260808201356107fe8161076e565b608082015260a082013567ffffffffffffffff81111561081d57600080fd5b61082984828501610451565b60a08301525092915050565b60006060828403121561084757600080fd5b61084f610376565b9050813561085c8161076e565b80825250602082013560208201526040820135604082015292915050565b600082601f83011261088b57600080fd5b8135602061089b6104708361074a565b828152606092830285018201928282019190878511156108ba57600080fd5b8387015b858110156109135781818a0312156108d65760008081fd5b6108de610376565b81356108e98161076e565b815281860135868201526040808301356109028161076e565b9082015284529284019281016108be565b5090979650505050505050565b60008060006060848603121561093557600080fd5b833567ffffffffffffffff8082111561094d57600080fd5b818601915086601f83011261096157600080fd5b813560206109716104708361074a565b82815260059290921b8401810191818101908a84111561099057600080fd5b8286015b84811015610a81578035868111156109ab57600080fd5b870160e0818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156109df57600080fd5b6109e7610399565b85820135888111156109f857600080fd5b610a068f888386010161079e565b825250610a168e60408401610835565b8682015260a082013588811115610a2d5760008081fd5b610a3b8f888386010161087a565b60408301525060c082013588811115610a545760008081fd5b610a628f8883860101610451565b60608301525060e0919091013560808201528352918301918301610994565b509750610a919050888201610793565b955050506040860135915080821115610aa957600080fd5b50610ab686828701610451565b9150509250925092565b606081526000845160406060840152610adc60a084018261052f565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b17828261052f565b91505073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610b48818561052f565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610b9257600080fd5b8151610ba06104708261040b565b818152846020838601011115610bb557600080fd5b61074282602083016020870161050b565b600060c08284031215610bd857600080fd5b610be061034d565b90508151610bed8161076e565b81526020820151610bfd8161076e565b8060208301525060408201516040820152606082015160608201526080820151610c268161076e565b608082015260a082015167ffffffffffffffff811115610c4557600080fd5b61082984828501610b81565b600060608284031215610c6357600080fd5b610c6b610376565b90508151610c788161076e565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610ca757600080fd5b81516020610cb76104708361074a565b82815260609283028501820192828201919087851115610cd657600080fd5b8387015b858110156109135781818a031215610cf25760008081fd5b610cfa610376565b8151610d058161076e565b81528186015186820152604080830151610d1e8161076e565b908201528452928401928101610cda565b600060208284031215610d4157600080fd5b815167ffffffffffffffff80821115610d5957600080fd5b9083019060e08286031215610d6d57600080fd5b610d75610399565b825182811115610d8457600080fd5b610d9087828601610bc6565b825250610da08660208501610c51565b6020820152608083015182811115610db757600080fd5b610dc387828601610c96565b60408301525060a083015182811115610ddb57600080fd5b610de787828601610b81565b60608301525060c09290920151608083015250939250505056fea2646970667358221220b5c1629166a8ce3b29961d91db9a15cb21258fac71b948ef87db6c76c54efe6f64736f6c63430008130033",
    "sourceMap": "419:1931:43:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d69146100465780637671d07b1461006f5780639943fa89146100b0575b600080fd5b6100596100543660046104a7565b6100c5565b60405161006691906105e3565b60405180910390f35b61008b61007d36600461070d565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6100c36100be366004610920565b610221565b005b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040838101518401810151815180830183528581526020808201869052835190810184526000815292517f05afc97700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216926305afc977926101af92913091600401610ac0565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b5061021781610289565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216301461024357600080fd5b60008360008151811061025857610258610b52565b602002602001015160405160200161027091906105e3565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561030557815182602001fd5b8180602001905181019061021b9190610d2f565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103705761037061031e565b60405290565b6040516060810167ffffffffffffffff811182821017156103705761037061031e565b60405160a0810167ffffffffffffffff811182821017156103705761037061031e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156104035761040361031e565b604052919050565b600067ffffffffffffffff8211156104255761042561031e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261046257600080fd5b81356104756104708261040b565b6103bc565b81815284602083860101111561048a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104ba57600080fd5b823567ffffffffffffffff808211156104d257600080fd5b6104de86838701610451565b935060208501359150808211156104f457600080fd5b5061050185828601610451565b9150509250929050565b60005b8381101561052657818101518382015260200161050e565b50506000910152565b6000815180845261054781602086016020860161050b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156105d8578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a015260409182015116908801526060909601959082019060010161058d565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a084015261065f6101c084018261052f565b9050602084015161069d6040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a08601526106d88383610579565b925060608601519150808584030160c0860152506106f6828261052f565b915050608084015160e08401528091505092915050565b60006020828403121561071f57600080fd5b813567ffffffffffffffff81111561073657600080fd5b61074284828501610451565b949350505050565b600067ffffffffffffffff8211156107645761076461031e565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461079057600080fd5b50565b80356103198161076e565b600060c082840312156107b057600080fd5b6107b861034d565b905081356107c58161076e565b815260208201356107d58161076e565b80602083015250604082013560408201526060820135606082015260808201356107fe8161076e565b608082015260a082013567ffffffffffffffff81111561081d57600080fd5b61082984828501610451565b60a08301525092915050565b60006060828403121561084757600080fd5b61084f610376565b9050813561085c8161076e565b80825250602082013560208201526040820135604082015292915050565b600082601f83011261088b57600080fd5b8135602061089b6104708361074a565b828152606092830285018201928282019190878511156108ba57600080fd5b8387015b858110156109135781818a0312156108d65760008081fd5b6108de610376565b81356108e98161076e565b815281860135868201526040808301356109028161076e565b9082015284529284019281016108be565b5090979650505050505050565b60008060006060848603121561093557600080fd5b833567ffffffffffffffff8082111561094d57600080fd5b818601915086601f83011261096157600080fd5b813560206109716104708361074a565b82815260059290921b8401810191818101908a84111561099057600080fd5b8286015b84811015610a81578035868111156109ab57600080fd5b870160e0818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156109df57600080fd5b6109e7610399565b85820135888111156109f857600080fd5b610a068f888386010161079e565b825250610a168e60408401610835565b8682015260a082013588811115610a2d5760008081fd5b610a3b8f888386010161087a565b60408301525060c082013588811115610a545760008081fd5b610a628f8883860101610451565b60608301525060e0919091013560808201528352918301918301610994565b509750610a919050888201610793565b955050506040860135915080821115610aa957600080fd5b50610ab686828701610451565b9150509250925092565b606081526000845160406060840152610adc60a084018261052f565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b17828261052f565b91505073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610b48818561052f565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610b9257600080fd5b8151610ba06104708261040b565b818152846020838601011115610bb557600080fd5b61074282602083016020870161050b565b600060c08284031215610bd857600080fd5b610be061034d565b90508151610bed8161076e565b81526020820151610bfd8161076e565b8060208301525060408201516040820152606082015160608201526080820151610c268161076e565b608082015260a082015167ffffffffffffffff811115610c4557600080fd5b61082984828501610b81565b600060608284031215610c6357600080fd5b610c6b610376565b90508151610c788161076e565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610ca757600080fd5b81516020610cb76104708361074a565b82815260609283028501820192828201919087851115610cd657600080fd5b8387015b858110156109135781818a031215610cf25760008081fd5b610cfa610376565b8151610d058161076e565b81528186015186820152604080830151610d1e8161076e565b908201528452928401928101610cda565b600060208284031215610d4157600080fd5b815167ffffffffffffffff80821115610d5957600080fd5b9083019060e08286031215610d6d57600080fd5b610d75610399565b825182811115610d8457600080fd5b610d9087828601610bc6565b825250610da08660208501610c51565b6020820152608083015182811115610db757600080fd5b610dc387828601610c96565b60408301525060a083015182811115610ddb57600080fd5b610de787828601610b81565b60608301525060c09290920151608083015250939250505056fea2646970667358221220b5c1629166a8ce3b29961d91db9a15cb21258fac71b948ef87db6c76c54efe6f64736f6c63430008130033",
    "sourceMap": "419:1931:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:308;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1443:283;;;;;;:::i;:::-;1603:17;1592:29;;;1679;1651:58;;;;1645:65;;1443:283;;;;6218:42:101;6206:55;;;6188:74;;6176:2;6161:18;1443:283:43;6026:242:101;2053:295:43;;;;;;:::i;:::-;;:::i;:::-;;937:308;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:17:43;1592:29;;;1679;1651:58;;;;1645:65;1090:23;;;;;;;;;;;;;;;;;1130:9;;;;;;;-1:-1:-1;1130:9:43;;1051:89;;;;;:38;;;;;;;:89;;1090:23;1123:4;;1051:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1047:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:25;1221:6;1203:17;:25::i;:::-;1194:34;;1152:87;1047:192;937:308;;;;:::o;2053:295::-;2179:23;;;2197:4;2179:23;2171:32;;;;;;2213:18;2245:14;2260:1;2245:17;;;;;;;;:::i;:::-;;;;;;;2234:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;2213:50;;2325:5;2319:12;2311:5;2307:2;2303:14;2296:36;1732:315;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:13:43;;-1:-1:-1;;;1840:201:43;;;1936:6;1930:13;1921:6;1917:2;1913:15;1906:38;1840:201;2006:6;1995:35;;;;;;;;;;;;:::i;1840:201::-;1732:315;;;:::o;14:184:101:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:253;275:2;269:9;317:4;305:17;;352:18;337:34;;373:22;;;334:62;331:88;;;399:18;;:::i;:::-;435:2;428:22;203:253;:::o;461:::-;533:2;527:9;575:4;563:17;;610:18;595:34;;631:22;;;592:62;589:88;;;657:18;;:::i;719:253::-;791:2;785:9;833:4;821:17;;868:18;853:34;;889:22;;;850:62;847:88;;;915:18;;:::i;977:334::-;1048:2;1042:9;1104:2;1094:13;;1109:66;1090:86;1078:99;;1207:18;1192:34;;1228:22;;;1189:62;1186:88;;;1254:18;;:::i;:::-;1290:2;1283:22;977:334;;-1:-1:-1;977:334:101:o;1316:245::-;1364:4;1397:18;1389:6;1386:30;1383:56;;;1419:18;;:::i;:::-;-1:-1:-1;1476:2:101;1464:15;1481:66;1460:88;1550:4;1456:99;;1316:245::o;1566:462::-;1608:5;1661:3;1654:4;1646:6;1642:17;1638:27;1628:55;;1679:1;1676;1669:12;1628:55;1715:6;1702:20;1746:48;1762:31;1790:2;1762:31;:::i;:::-;1746:48;:::i;:::-;1819:2;1810:7;1803:19;1865:3;1858:4;1853:2;1845:6;1841:15;1837:26;1834:35;1831:55;;;1882:1;1879;1872:12;1831:55;1947:2;1940:4;1932:6;1928:17;1921:4;1912:7;1908:18;1895:55;1995:1;1970:16;;;1988:4;1966:27;1959:38;;;;1974:7;1566:462;-1:-1:-1;;;1566:462:101:o;2033:539::-;2119:6;2127;2180:2;2168:9;2159:7;2155:23;2151:32;2148:52;;;2196:1;2193;2186:12;2148:52;2236:9;2223:23;2265:18;2306:2;2298:6;2295:14;2292:34;;;2322:1;2319;2312:12;2292:34;2345:49;2386:7;2377:6;2366:9;2362:22;2345:49;:::i;:::-;2335:59;;2447:2;2436:9;2432:18;2419:32;2403:48;;2476:2;2466:8;2463:16;2460:36;;;2492:1;2489;2482:12;2460:36;;2515:51;2558:7;2547:8;2536:9;2532:24;2515:51;:::i;:::-;2505:61;;;2033:539;;;;;:::o;2577:250::-;2662:1;2672:113;2686:6;2683:1;2680:13;2672:113;;;2762:11;;;2756:18;2743:11;;;2736:39;2708:2;2701:10;2672:113;;;-1:-1:-1;;2819:1:101;2801:16;;2794:27;2577:250::o;2832:329::-;2873:3;2911:5;2905:12;2938:6;2933:3;2926:19;2954:76;3023:6;3016:4;3011:3;3007:14;3000:4;2993:5;2989:16;2954:76;:::i;:::-;3075:2;3063:15;3080:66;3059:88;3050:98;;;;3150:4;3046:109;;2832:329;-1:-1:-1;;2832:329:101:o;3427:696::-;3491:3;3529:5;3523:12;3556:6;3551:3;3544:19;3582:4;3611:2;3606:3;3602:12;3595:19;;3648:2;3641:5;3637:14;3669:1;3679:419;3693:6;3690:1;3687:13;3679:419;;;3752:13;;3859:9;;3788:42;3855:18;;;3843:31;;3914:11;;;3908:18;3894:12;;;3887:40;3950:4;3998:11;;;3992:18;3988:27;3974:12;;;3967:49;4045:4;4036:14;;;;4073:15;;;;3715:1;3708:9;3679:419;;;-1:-1:-1;4114:3:101;;3427:696;-1:-1:-1;;;;;3427:696:101:o;4128:1568::-;4321:2;4310:9;4303:21;4284:4;4359:6;4353:13;4402:4;4397:2;4386:9;4382:18;4375:32;4426:42;4530:2;4515:12;4509:19;4505:28;4499:3;4488:9;4484:19;4477:57;4605:2;4599;4585:12;4581:21;4575:28;4571:37;4565:3;4554:9;4550:19;4543:66;4670:4;4656:12;4652:23;4646:30;4640:3;4629:9;4625:19;4618:59;4738:4;4724:12;4720:23;4714:30;4708:3;4697:9;4693:19;4686:59;4818:2;4810:4;4796:12;4792:23;4786:30;4782:39;4776:3;4765:9;4761:19;4754:68;;4877:4;4863:12;4859:23;4853:30;4831:52;;4920:4;4914:3;4903:9;4899:19;4892:33;4945:53;4993:3;4982:9;4978:19;4962:14;4945:53;:::i;:::-;4934:64;;5047:2;5039:6;5035:15;5029:22;5060:66;5120:4;5109:9;5105:20;5089:14;3246:12;;3260:42;3242:61;3230:74;;3353:4;3342:16;;;3336:23;3320:14;;;3313:47;3409:4;3398:16;;;3392:23;3376:14;;3369:47;3166:256;5060:66;;5175:4;5167:6;5163:17;5157:24;5200:66;5329:2;5317:9;5312:3;5308:19;5304:28;5297:4;5286:9;5282:20;5275:58;5356:60;5412:3;5396:14;5356:60;:::i;:::-;5342:74;;5465:4;5457:6;5453:17;5447:24;5425:46;;5537:2;5525:9;5517:6;5513:22;5509:31;5502:4;5491:9;5487:20;5480:61;;5564:40;5597:6;5581:14;5564:40;:::i;:::-;5550:54;;;5660:4;5652:6;5648:17;5642:24;5635:4;5624:9;5620:20;5613:54;5684:6;5676:14;;;4128:1568;;;;:::o;5701:320::-;5769:6;5822:2;5810:9;5801:7;5797:23;5793:32;5790:52;;;5838:1;5835;5828:12;5790:52;5878:9;5865:23;5911:18;5903:6;5900:30;5897:50;;;5943:1;5940;5933:12;5897:50;5966:49;6007:7;5998:6;5987:9;5983:22;5966:49;:::i;:::-;5956:59;5701:320;-1:-1:-1;;;;5701:320:101:o;6273:196::-;6346:4;6379:18;6371:6;6368:30;6365:56;;;6401:18;;:::i;:::-;-1:-1:-1;6446:1:101;6442:14;6458:4;6438:25;;6273:196::o;6474:154::-;6560:42;6553:5;6549:54;6542:5;6539:65;6529:93;;6618:1;6615;6608:12;6529:93;6474:154;:::o;6633:134::-;6701:20;;6730:31;6701:20;6730:31;:::i;6772:894::-;6828:5;6876:4;6864:9;6859:3;6855:19;6851:30;6848:50;;;6894:1;6891;6884:12;6848:50;6916:22;;:::i;:::-;6907:31;;6975:9;6962:23;6994:33;7019:7;6994:33;:::i;:::-;7036:22;;7110:2;7095:18;;7082:32;7123:33;7082:32;7123:33;:::i;:::-;7188:7;7183:2;7176:5;7172:14;7165:31;;7256:2;7245:9;7241:18;7228:32;7223:2;7216:5;7212:14;7205:56;7321:2;7310:9;7306:18;7293:32;7288:2;7281:5;7277:14;7270:56;7378:3;7367:9;7363:19;7350:33;7392;7417:7;7392:33;:::i;:::-;7452:3;7441:15;;7434:32;7517:3;7502:19;;7489:33;7545:18;7534:30;;7531:50;;;7577:1;7574;7567:12;7531:50;7614:45;7655:3;7646:6;7635:9;7631:22;7614:45;:::i;:::-;7608:3;7601:5;7597:15;7590:70;;6772:894;;;;:::o;7671:423::-;7728:5;7776:4;7764:9;7759:3;7755:19;7751:30;7748:50;;;7794:1;7791;7784:12;7748:50;7816:22;;:::i;:::-;7807:31;;7875:9;7862:23;7894:33;7919:7;7894:33;:::i;:::-;7950:7;7943:5;7936:22;;8018:2;8007:9;8003:18;7990:32;7985:2;7978:5;7974:14;7967:56;8083:2;8072:9;8068:18;8055:32;8050:2;8043:5;8039:14;8032:56;7671:423;;;;:::o;8099:1229::-;8164:5;8217:3;8210:4;8202:6;8198:17;8194:27;8184:55;;8235:1;8232;8225:12;8184:55;8271:6;8258:20;8297:4;8321:73;8337:56;8390:2;8337:56;:::i;8321:73::-;8428:15;;;8490:4;8533:11;;;8521:24;;8517:33;;;8459:12;;;;8416:3;8562:15;;;8559:35;;;8590:1;8587;8580:12;8559:35;8626:2;8618:6;8614:15;8638:661;8654:6;8649:3;8646:15;8638:661;;;8730:2;8724:3;8719;8715:13;8711:22;8708:112;;;8774:1;8803:2;8799;8792:14;8708:112;8846:22;;:::i;:::-;8909:3;8896:17;8926:33;8951:7;8926:33;:::i;:::-;8972:22;;9043:12;;;9030:26;9014:14;;;9007:50;9080:2;9123:12;;;9110:26;9149:33;9110:26;9149:33;:::i;:::-;9202:14;;;9195:31;9239:18;;9277:12;;;;8671;;8638:661;;;-1:-1:-1;9317:5:101;;8099:1229;-1:-1:-1;;;;;;;8099:1229:101:o;9333:2449::-;9476:6;9484;9492;9545:2;9533:9;9524:7;9520:23;9516:32;9513:52;;;9561:1;9558;9551:12;9513:52;9601:9;9588:23;9630:18;9671:2;9663:6;9660:14;9657:34;;;9687:1;9684;9677:12;9657:34;9725:6;9714:9;9710:22;9700:32;;9770:7;9763:4;9759:2;9755:13;9751:27;9741:55;;9792:1;9789;9782:12;9741:55;9828:2;9815:16;9850:4;9874:73;9890:56;9943:2;9890:56;:::i;9874:73::-;9981:15;;;10063:1;10059:10;;;;10051:19;;10047:28;;;10012:12;;;;10087:19;;;10084:39;;;10119:1;10116;10109:12;10084:39;10151:2;10147;10143:11;10163:1358;10179:6;10174:3;10171:15;10163:1358;;;10265:3;10252:17;10301:2;10288:11;10285:19;10282:39;;;10317:1;10314;10307:12;10282:39;10344:20;;10475:4;10388:16;;;10406:66;10384:89;10380:100;10377:120;;;10493:1;10490;10483:12;10377:120;10523:22;;:::i;:::-;10595:2;10591;10587:11;10574:25;10628:2;10618:8;10615:16;10612:36;;;10644:1;10641;10634:12;10612:36;10675:64;10731:7;10726:2;10715:8;10711:2;10707:17;10703:26;10675:64;:::i;:::-;10668:5;10661:79;;10776:52;10820:7;10813:4;10809:2;10805:13;10776:52;:::i;:::-;10771:2;10764:5;10760:14;10753:76;10879:4;10875:2;10871:13;10858:27;10914:2;10904:8;10901:16;10898:106;;;10958:1;10987:2;10983;10976:14;10898:106;11042:76;11110:7;11105:2;11094:8;11090:2;11086:17;11082:26;11042:76;:::i;:::-;11035:4;11028:5;11024:16;11017:102;;11169:3;11165:2;11161:12;11148:26;11203:2;11193:8;11190:16;11187:106;;;11247:1;11276:2;11272;11265:14;11187:106;11329:53;11374:7;11369:2;11358:8;11354:2;11350:17;11346:26;11329:53;:::i;:::-;11324:2;11313:14;;11306:77;-1:-1:-1;11441:4:101;11433:13;;;;11420:27;11414:3;11403:15;;11396:52;11461:18;;11499:12;;;;10196;;10163:1358;;;-1:-1:-1;11540:5:101;-1:-1:-1;11564:38:101;;-1:-1:-1;11583:18:101;;;11564:38;:::i;:::-;11554:48;;;;11655:4;11644:9;11640:20;11627:34;11611:50;;11686:2;11676:8;11673:16;11670:36;;;11702:1;11699;11692:12;11670:36;;11725:51;11768:7;11757:8;11746:9;11742:24;11725:51;:::i;:::-;11715:61;;;9333:2449;;;;;:::o;11787:875::-;12050:2;12039:9;12032:21;12013:4;12088:6;12082:13;12131:4;12126:2;12115:9;12111:18;12104:32;12159:51;12205:3;12194:9;12190:19;12176:12;12159:51;:::i;:::-;12145:65;;12259:4;12251:6;12247:17;12241:24;12330:66;12318:9;12310:6;12306:22;12302:95;12296:3;12285:9;12281:19;12274:124;12418:40;12451:6;12435:14;12418:40;:::i;:::-;12407:51;;;12508:42;12500:6;12496:55;12489:4;12478:9;12474:20;12467:85;12599:9;12594:3;12590:19;12583:4;12572:9;12568:20;12561:49;12627:29;12652:3;12644:6;12627:29;:::i;:::-;12619:37;11787:875;-1:-1:-1;;;;;;11787:875:101:o;12667:184::-;12719:77;12716:1;12709:88;12816:4;12813:1;12806:15;12840:4;12837:1;12830:15;12856:441;12909:5;12962:3;12955:4;12947:6;12943:17;12939:27;12929:55;;12980:1;12977;12970:12;12929:55;13009:6;13003:13;13040:48;13056:31;13084:2;13056:31;:::i;13040:48::-;13113:2;13104:7;13097:19;13159:3;13152:4;13147:2;13139:6;13135:15;13131:26;13128:35;13125:55;;;13176:1;13173;13166:12;13125:55;13189:77;13263:2;13256:4;13247:7;13243:18;13236:4;13228:6;13224:17;13189:77;:::i;13302:874::-;13369:5;13417:4;13405:9;13400:3;13396:19;13392:30;13389:50;;;13435:1;13432;13425:12;13389:50;13457:22;;:::i;:::-;13448:31;;13509:9;13503:16;13528:33;13553:7;13528:33;:::i;:::-;13570:22;;13637:2;13622:18;;13616:25;13650:33;13616:25;13650:33;:::i;:::-;13715:7;13710:2;13703:5;13699:14;13692:31;;13776:2;13765:9;13761:18;13755:25;13750:2;13743:5;13739:14;13732:49;13834:2;13823:9;13819:18;13813:25;13808:2;13801:5;13797:14;13790:49;13884:3;13873:9;13869:19;13863:26;13898:33;13923:7;13898:33;:::i;:::-;13958:3;13947:15;;13940:32;14016:3;14001:19;;13995:26;14044:18;14033:30;;14030:50;;;14076:1;14073;14066:12;14030:50;14113:56;14165:3;14156:6;14145:9;14141:22;14113:56;:::i;14181:413::-;14249:5;14297:4;14285:9;14280:3;14276:19;14272:30;14269:50;;;14315:1;14312;14305:12;14269:50;14337:22;;:::i;:::-;14328:31;;14389:9;14383:16;14408:33;14433:7;14408:33;:::i;:::-;14464:7;14457:5;14450:22;;14525:2;14514:9;14510:18;14504:25;14499:2;14492:5;14488:14;14481:49;14583:2;14572:9;14568:18;14562:25;14557:2;14550:5;14546:14;14539:49;14181:413;;;;:::o;14599:1212::-;14675:5;14728:3;14721:4;14713:6;14709:17;14705:27;14695:55;;14746:1;14743;14736:12;14695:55;14775:6;14769:13;14801:4;14825:73;14841:56;14894:2;14841:56;:::i;14825:73::-;14932:15;;;14994:4;15037:11;;;15025:24;;15021:33;;;14963:12;;;;14920:3;15066:15;;;15063:35;;;15094:1;15091;15084:12;15063:35;15130:2;15122:6;15118:15;15142:640;15158:6;15153:3;15150:15;15142:640;;;15234:2;15228:3;15223;15219:13;15215:22;15212:112;;;15278:1;15307:2;15303;15296:14;15212:112;15350:22;;:::i;:::-;15406:3;15400:10;15423:33;15448:7;15423:33;:::i;:::-;15469:22;;15533:12;;;15527:19;15511:14;;;15504:43;15570:2;15606:12;;;15600:19;15632:33;15600:19;15632:33;:::i;:::-;15685:14;;;15678:31;15722:18;;15760:12;;;;15175;;15142:640;;15816:1163;15918:6;15971:2;15959:9;15950:7;15946:23;15942:32;15939:52;;;15987:1;15984;15977:12;15939:52;16020:9;16014:16;16049:18;16090:2;16082:6;16079:14;16076:34;;;16106:1;16103;16096:12;16076:34;16129:22;;;;16185:4;16167:16;;;16163:27;16160:47;;;16203:1;16200;16193:12;16160:47;16229:22;;:::i;:::-;16282:2;16276:9;16310:2;16300:8;16297:16;16294:36;;;16326:1;16323;16316:12;16294:36;16353:66;16411:7;16400:8;16396:2;16392:17;16353:66;:::i;:::-;16346:5;16339:81;;16452:61;16505:7;16500:2;16496;16492:11;16452:61;:::i;:::-;16447:2;16440:5;16436:14;16429:85;16553:3;16549:2;16545:12;16539:19;16583:2;16573:8;16570:16;16567:36;;;16599:1;16596;16589:12;16567:36;16637:78;16707:7;16696:8;16692:2;16688:17;16637:78;:::i;:::-;16630:4;16623:5;16619:16;16612:104;;16755:4;16751:2;16747:13;16741:20;16786:2;16776:8;16773:16;16770:36;;;16802:1;16799;16792:12;16770:36;16840:55;16887:7;16876:8;16872:2;16868:17;16840:55;:::i;:::-;16833:4;16822:16;;16815:81;-1:-1:-1;16943:3:101;16935:12;;;;16929:19;16923:3;16912:15;;16905:44;-1:-1:-1;16826:5:101;15816:1163;-1:-1:-1;;;15816:1163:101:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getReactor(bytes)": "7671d07b",
    "quote(bytes,bytes)": "41d88d69",
    "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],address,bytes)": "9943fa89"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"}],\"name\":\"getReactor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"reactor\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder[]\",\"name\":\"resolvedOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"reactorCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"note this is meant to be used as an off-chain lens contract to pre-validate generic orders\",\"kind\":\"dev\",\"methods\":{\"getReactor(bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\"},\"returns\":{\"reactor\":\"reactor\"}},\"quote(bytes,bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\",\"sig\":\"The order signature\"},\"returns\":{\"result\":\"The ResolvedOrder\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getReactor(bytes)\":{\"notice\":\"Return the reactor of a given order (abi.encoded bytes).\"},\"quote(bytes,bytes)\":{\"notice\":\"Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order\"}},\"notice\":\"Quoter contract for orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/OrderQuoter.sol\":\"OrderQuoter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x4f2c7c1826779a4f444e5b36553102e4cff85ddb7d1ff65c15a6d6e978dcc8c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa48b04a7f9b986687fc4e6984db2fd5760b5827d537c019d351b95414f8394e\",\"dweb:/ipfs/QmeDbBY8M8dgeornLuB8m99gu915mRTZQ1Ggenio9BRHf2\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0x27255bf4fd142ba38ca6c9d5ef53ea50b8c91bf4fc51c4b14fe7b837d037619d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0a96479450525a0ab28deedcf18afe6ab9579fe1a4059a6e3d5d1b859132f84b\",\"dweb:/ipfs/QmZdofDthhjzyT7sLy2epjBCeeDny1qaKJPQewdCPyrFVn\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd\",\"dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/base/ProtocolFees.sol\":{\"keccak256\":\"0x5696d8db26d3f5c7fba819c2a0666baa21a83283d1d538c8c83ce7f090a59838\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3c1e1fc7bc0498df67e0153f15ad9922c40e58ec3e07b394118c1a6dffbe2192\",\"dweb:/ipfs/QmRys19jZCda3A1W8gbqo66pFLPVBXrDtPwFJf6eHx5t3E\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x41e8b045c135ed773f1407e8d2249bfe7bac2c2e1049eba82af20fd4cc3accec\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://84d96537b4a174a73888396a3cb259fcde86f2c596015139aaac13acd6547b4a\",\"dweb:/ipfs/QmcGVWvP2HB7LsGKu99UqgE4fqVkBupGj6t2habKXJFufC\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0x566ceb543cd08f5d0d0b78f7a8c424504ba6a6b91f80a5f993d7a1f0a51724da\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c9ab3d4a6ca1c6dc10f3fbce0c50bded494343d59f0cff4a775340b24b788e39\",\"dweb:/ipfs/QmcZtFY9411oi3hokGhWwbjQwRqF8Xq7ejxEjvTzkigNz9\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xa752f14482bb888d68f432790f0b25f1cd5cc8471b0eeded40629cfe82df8300\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e0ff1e31c752f2338c05de5a1af4b03757def72130f219670391a0c0500a362a\",\"dweb:/ipfs/QmZYdN9rvNGqAMXGQbxV88G5ejvnvb99sQ6zkPX3foRAeq\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0xf7a2c5458d0820f30dc54b14f069255f39e00844acea6d04dde6ca48a37aef6c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2e8385cd78aa47832b4e3bce1bf684a30891f73b8dba58824b11e974a8d8ea09\",\"dweb:/ipfs/Qmar6US9NhVvFwDMts9VsMWZDVrTVsiEUNeQwZe16afQjx\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0xb58a91ff95a68b581bbb5bae34a4802937c81fac0a242a4b0052940031f30284\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://20430a5e5128d5363be056c84b21a97f0b5faf7edf4096987d5b397c52135b8b\",\"dweb:/ipfs/QmebjfWnPANi64k4KyKxXhyhWW2LNhJ5muvBTBTPRFaXK9\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0x72c483d86f1ac3d9a96a9c1bc1fe90b732409b292a8095acc4739b4b5d2bddd4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e4cc579eb465fc00d09a46f11ea7cfb1d8bfc3e2513d0ef49ad0c576eaf88d09\",\"dweb:/ipfs/QmZ52PSbPzXFo6xkJc6Sg23jugpQ7x4w5VTQHdwjEicB7d\"]},\"src/lens/OrderQuoter.sol\":{\"keccak256\":\"0x04f8989d6865a458e8074de2a2da976330770b8dc7934fd3b3792a029b79a6a0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ad42738d48e78dfcd8d1aa39f9f8e2212d2302de7aaf27abcdf1cff57702c12e\",\"dweb:/ipfs/QmZPKVq9bT1LWdyEuqs25XVsrtsQvJdWDzg1KfJyAmzV3R\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0x8d6f545ba4767e681d173400d0533abf240950e9f741d33ebfb5ad3f8a01cb5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d817785b236c63344a28362688ff507a34591ac4a5f2a5a83437daf75a361fba\",\"dweb:/ipfs/QmQzRRcaG24SDp72sp9odRvigqHoLXvyHJagqqp3ZyYjAH\"]},\"src/lib/ExpectedBalanceLib.sol\":{\"keccak256\":\"0xf6a7850d72901cc13e7fea80cc03a5eeb6b6086685ad4022bb4c5ea5fcb2684f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://aae7b478be95f3b180b6cc3c26756880d8cba3a48615735de2009887c9cf4be6\",\"dweb:/ipfs/QmYi9ZJySFMEQqmoTrrU4ELGV7h9tXqiPQGimfPzMNzD9E\"]},\"src/lib/ResolvedOrderLib.sol\":{\"keccak256\":\"0x183bf96eb87b55b935ffc138d42346981c63b526a9a57c59233f7c8134884960\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c82814bd8a51df0bf2e11502db44e20aed39233e317cb0513119ae0759bb02d5\",\"dweb:/ipfs/QmPA4dRnHb8wg7VSbV4m4ktaQWYjWosaw1xF2wAgiFjbgs\"]},\"src/reactors/BaseReactor.sol\":{\"keccak256\":\"0x00d8192d1fcf6755eb7d4e1b0c9ffeaca62d19981b7cc76c7498a1f75eb138e8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ec49ba87d52932f5905f2f6291dc4ad61c2224e32580f9a1daae8ab8fad25d50\",\"dweb:/ipfs/QmaqFTbBn1u1qC2SvJU6QPvRx5NdAPaM5rLzx3Wzvpk2xt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getReactor",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "reactor",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quote",
          "outputs": [
            {
              "internalType": "struct ResolvedOrder",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "validationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "validationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResolvedOrder[]",
              "name": "resolvedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "validationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "validationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reactorCallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getReactor(bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member"
            },
            "returns": {
              "reactor": "reactor"
            }
          },
          "quote(bytes,bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member",
              "sig": "The order signature"
            },
            "returns": {
              "result": "The ResolvedOrder"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getReactor(bytes)": {
            "notice": "Return the reactor of a given order (abi.encoded bytes)."
          },
          "quote(bytes,bytes)": {
            "notice": "Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/OrderQuoter.sol": "OrderQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x4f2c7c1826779a4f444e5b36553102e4cff85ddb7d1ff65c15a6d6e978dcc8c8",
        "urls": [
          "bzz-raw://aa48b04a7f9b986687fc4e6984db2fd5760b5827d537c019d351b95414f8394e",
          "dweb:/ipfs/QmeDbBY8M8dgeornLuB8m99gu915mRTZQ1Ggenio9BRHf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e",
        "urls": [
          "bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d",
          "dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0x27255bf4fd142ba38ca6c9d5ef53ea50b8c91bf4fc51c4b14fe7b837d037619d",
        "urls": [
          "bzz-raw://0a96479450525a0ab28deedcf18afe6ab9579fe1a4059a6e3d5d1b859132f84b",
          "dweb:/ipfs/QmZdofDthhjzyT7sLy2epjBCeeDny1qaKJPQewdCPyrFVn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169",
        "urls": [
          "bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd",
          "dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ProtocolFees.sol": {
        "keccak256": "0x5696d8db26d3f5c7fba819c2a0666baa21a83283d1d538c8c83ce7f090a59838",
        "urls": [
          "bzz-raw://3c1e1fc7bc0498df67e0153f15ad9922c40e58ec3e07b394118c1a6dffbe2192",
          "dweb:/ipfs/QmRys19jZCda3A1W8gbqo66pFLPVBXrDtPwFJf6eHx5t3E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x41e8b045c135ed773f1407e8d2249bfe7bac2c2e1049eba82af20fd4cc3accec",
        "urls": [
          "bzz-raw://84d96537b4a174a73888396a3cb259fcde86f2c596015139aaac13acd6547b4a",
          "dweb:/ipfs/QmcGVWvP2HB7LsGKu99UqgE4fqVkBupGj6t2habKXJFufC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0x566ceb543cd08f5d0d0b78f7a8c424504ba6a6b91f80a5f993d7a1f0a51724da",
        "urls": [
          "bzz-raw://c9ab3d4a6ca1c6dc10f3fbce0c50bded494343d59f0cff4a775340b24b788e39",
          "dweb:/ipfs/QmcZtFY9411oi3hokGhWwbjQwRqF8Xq7ejxEjvTzkigNz9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0xa752f14482bb888d68f432790f0b25f1cd5cc8471b0eeded40629cfe82df8300",
        "urls": [
          "bzz-raw://e0ff1e31c752f2338c05de5a1af4b03757def72130f219670391a0c0500a362a",
          "dweb:/ipfs/QmZYdN9rvNGqAMXGQbxV88G5ejvnvb99sQ6zkPX3foRAeq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0xf7a2c5458d0820f30dc54b14f069255f39e00844acea6d04dde6ca48a37aef6c",
        "urls": [
          "bzz-raw://2e8385cd78aa47832b4e3bce1bf684a30891f73b8dba58824b11e974a8d8ea09",
          "dweb:/ipfs/Qmar6US9NhVvFwDMts9VsMWZDVrTVsiEUNeQwZe16afQjx"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0xb58a91ff95a68b581bbb5bae34a4802937c81fac0a242a4b0052940031f30284",
        "urls": [
          "bzz-raw://20430a5e5128d5363be056c84b21a97f0b5faf7edf4096987d5b397c52135b8b",
          "dweb:/ipfs/QmebjfWnPANi64k4KyKxXhyhWW2LNhJ5muvBTBTPRFaXK9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0x72c483d86f1ac3d9a96a9c1bc1fe90b732409b292a8095acc4739b4b5d2bddd4",
        "urls": [
          "bzz-raw://e4cc579eb465fc00d09a46f11ea7cfb1d8bfc3e2513d0ef49ad0c576eaf88d09",
          "dweb:/ipfs/QmZ52PSbPzXFo6xkJc6Sg23jugpQ7x4w5VTQHdwjEicB7d"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lens/OrderQuoter.sol": {
        "keccak256": "0x04f8989d6865a458e8074de2a2da976330770b8dc7934fd3b3792a029b79a6a0",
        "urls": [
          "bzz-raw://ad42738d48e78dfcd8d1aa39f9f8e2212d2302de7aaf27abcdf1cff57702c12e",
          "dweb:/ipfs/QmZPKVq9bT1LWdyEuqs25XVsrtsQvJdWDzg1KfJyAmzV3R"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0x8d6f545ba4767e681d173400d0533abf240950e9f741d33ebfb5ad3f8a01cb5b",
        "urls": [
          "bzz-raw://d817785b236c63344a28362688ff507a34591ac4a5f2a5a83437daf75a361fba",
          "dweb:/ipfs/QmQzRRcaG24SDp72sp9odRvigqHoLXvyHJagqqp3ZyYjAH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExpectedBalanceLib.sol": {
        "keccak256": "0xf6a7850d72901cc13e7fea80cc03a5eeb6b6086685ad4022bb4c5ea5fcb2684f",
        "urls": [
          "bzz-raw://aae7b478be95f3b180b6cc3c26756880d8cba3a48615735de2009887c9cf4be6",
          "dweb:/ipfs/QmYi9ZJySFMEQqmoTrrU4ELGV7h9tXqiPQGimfPzMNzD9E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ResolvedOrderLib.sol": {
        "keccak256": "0x183bf96eb87b55b935ffc138d42346981c63b526a9a57c59233f7c8134884960",
        "urls": [
          "bzz-raw://c82814bd8a51df0bf2e11502db44e20aed39233e317cb0513119ae0759bb02d5",
          "dweb:/ipfs/QmPA4dRnHb8wg7VSbV4m4ktaQWYjWosaw1xF2wAgiFjbgs"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseReactor.sol": {
        "keccak256": "0x00d8192d1fcf6755eb7d4e1b0c9ffeaca62d19981b7cc76c7498a1f75eb138e8",
        "urls": [
          "bzz-raw://ec49ba87d52932f5905f2f6291dc4ad61c2224e32580f9a1daae8ab8fad25d50",
          "dweb:/ipfs/QmaqFTbBn1u1qC2SvJU6QPvRx5NdAPaM5rLzx3Wzvpk2xt"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/OrderQuoter.sol",
    "id": 30489,
    "exportedSymbols": {
      "BaseReactor": [
        32383
      ],
      "IReactorCallback": [
        30343
      ],
      "OrderInfo": [
        30160
      ],
      "OrderQuoter": [
        30488
      ],
      "ResolvedOrder": [
        30189
      ],
      "SignedOrder": [
        30194
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2306:43",
    "nodes": [
      {
        "id": 30363,
        "nodeType": "PragmaDirective",
        "src": "45:24:43",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 30365,
        "nodeType": "ImportDirective",
        "src": "71:68:43",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactorCallback.sol",
        "file": "../interfaces/IReactorCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30489,
        "sourceUnit": 30344,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30364,
              "name": "IReactorCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30343,
              "src": "79:16:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30367,
        "nodeType": "ImportDirective",
        "src": "140:56:43",
        "nodes": [],
        "absolutePath": "src/reactors/BaseReactor.sol",
        "file": "../reactors/BaseReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30489,
        "sourceUnit": 32384,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30366,
              "name": "BaseReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32383,
              "src": "148:11:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30371,
        "nodeType": "ImportDirective",
        "src": "197:81:43",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30489,
        "sourceUnit": 30195,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30368,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30160,
              "src": "205:9:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 30369,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30189,
              "src": "216:13:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 30370,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30194,
              "src": "231:11:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30488,
        "nodeType": "ContractDefinition",
        "src": "419:1931:43",
        "nodes": [
          {
            "id": 30377,
            "nodeType": "VariableDeclaration",
            "src": "466:39:43",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ORDER_INFO_OFFSET",
            "nameLocation": "483:17:43",
            "scope": 30488,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30375,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "466:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 30376,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "503:2:43",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "internal"
          },
          {
            "id": 30422,
            "nodeType": "FunctionDefinition",
            "src": "937:308:43",
            "nodes": [],
            "body": {
              "id": 30421,
              "nodeType": "Block",
              "src": "1037:208:43",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 30407,
                        "nodeType": "Block",
                        "src": "1141:2:43",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 30408,
                      "nodeType": "TryCatchClause",
                      "src": "1141:2:43"
                    },
                    {
                      "block": {
                        "id": 30418,
                        "nodeType": "Block",
                        "src": "1180:59:43",
                        "statements": [
                          {
                            "expression": {
                              "id": 30416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 30412,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30386,
                                "src": "1194:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$30189_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 30414,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30410,
                                    "src": "1221:6:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 30413,
                                  "name": "parseRevertReason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30456,
                                  "src": "1203:17:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$30189_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct ResolvedOrder memory)"
                                  }
                                },
                                "id": 30415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1203:25:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$30189_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "src": "1194:34:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResolvedOrder_$30189_memory_ptr",
                                "typeString": "struct ResolvedOrder memory"
                              }
                            },
                            "id": 30417,
                            "nodeType": "ExpressionStatement",
                            "src": "1194:34:43"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 30419,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 30411,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 30410,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1172:6:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30419,
                            "src": "1159:19:43",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 30409,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1159:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1158:21:43"
                      },
                      "src": "1152:87:43"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30395,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30380,
                            "src": "1102:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 30396,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30382,
                            "src": "1109:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30394,
                          "name": "SignedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30194,
                          "src": "1090:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SignedOrder_$30194_storage_ptr_$",
                            "typeString": "type(struct SignedOrder storage pointer)"
                          }
                        },
                        "id": 30397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1090:23:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$30194_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30400,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1123:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OrderQuoter_$30488",
                              "typeString": "contract OrderQuoter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OrderQuoter_$30488",
                              "typeString": "contract OrderQuoter"
                            }
                          ],
                          "id": 30399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1115:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30398,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1115:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1115:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 30404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1136:2:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 30403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1130:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 30402,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1130:5:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1130:9:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$30194_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30390,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30380,
                                "src": "1074:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 30389,
                              "name": "getReactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30432,
                              "src": "1063:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_payable_$",
                                "typeString": "function (bytes memory) pure returns (address payable)"
                              }
                            },
                            "id": 30391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1063:17:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 30388,
                          "name": "BaseReactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32383,
                          "src": "1051:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BaseReactor_$32383_$",
                            "typeString": "type(contract BaseReactor)"
                          }
                        },
                        "id": 30392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1051:30:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseReactor_$32383",
                          "typeString": "contract BaseReactor"
                        }
                      },
                      "id": 30393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1082:7:43",
                      "memberName": "execute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32094,
                      "src": "1051:38:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_SignedOrder_$30194_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct SignedOrder memory,address,bytes memory) payable external"
                      }
                    },
                    "id": 30406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:89:43",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30420,
                  "nodeType": "TryStatement",
                  "src": "1047:192:43"
                }
              ]
            },
            "documentation": {
              "id": 30378,
              "nodeType": "StructuredDocumentation",
              "src": "512:420:43",
              "text": "@notice Quote the given order, returning the ResolvedOrder object which defines\n the current input and output token amounts required to satisfy it\n Also bubbles up any reverts that would occur during the processing of the order\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @param sig The order signature\n @return result The ResolvedOrder"
            },
            "functionSelector": "41d88d69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quote",
            "nameLocation": "946:5:43",
            "parameters": {
              "id": 30383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30380,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "965:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30422,
                  "src": "952:18:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30379,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30382,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "985:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30422,
                  "src": "972:16:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30381,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:38:43"
            },
            "returnParameters": {
              "id": 30387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30386,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1029:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30422,
                  "src": "1008:27:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$30189_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 30385,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30384,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1008:13:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30189,
                      "src": "1008:13:43"
                    },
                    "referencedDeclaration": 30189,
                    "src": "1008:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$30189_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1007:29:43"
            },
            "scope": 30488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30432,
            "nodeType": "FunctionDefinition",
            "src": "1443:283:43",
            "nodes": [],
            "body": {
              "id": 30431,
              "nodeType": "Block",
              "src": "1529:197:43",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1548:172:43",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1562:59:43",
                        "value": {
                          "arguments": [
                            {
                              "name": "order",
                              "nodeType": "YulIdentifier",
                              "src": "1596:5:43"
                            },
                            {
                              "name": "ORDER_INFO_OFFSET",
                              "nodeType": "YulIdentifier",
                              "src": "1603:17:43"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1592:3:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1592:29:43"
                        },
                        "variables": [
                          {
                            "name": "orderInfoOffsetPointer",
                            "nodeType": "YulTypedName",
                            "src": "1566:22:43",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1634:76:43",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "orderInfoOffsetPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1655:22:43"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "orderInfoOffsetPointer",
                                      "nodeType": "YulIdentifier",
                                      "src": "1685:22:43"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1679:5:43"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1679:29:43"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1651:3:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1651:58:43"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1645:5:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1645:65:43"
                        },
                        "variableNames": [
                          {
                            "name": "reactor",
                            "nodeType": "YulIdentifier",
                            "src": "1634:7:43"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 30377,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1603:17:43",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30425,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1596:5:43",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30428,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1634:7:43",
                      "valueSize": 1
                    }
                  ],
                  "id": 30430,
                  "nodeType": "InlineAssembly",
                  "src": "1539:181:43"
                }
              ]
            },
            "documentation": {
              "id": 30423,
              "nodeType": "StructuredDocumentation",
              "src": "1251:187:43",
              "text": "@notice Return the reactor of a given order (abi.encoded bytes).\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @return reactor"
            },
            "functionSelector": "7671d07b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReactor",
            "nameLocation": "1452:10:43",
            "parameters": {
              "id": 30426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30425,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1476:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30432,
                  "src": "1463:18:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30424,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:20:43"
            },
            "returnParameters": {
              "id": 30429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30428,
                  "mutability": "mutable",
                  "name": "reactor",
                  "nameLocation": "1520:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30432,
                  "src": "1504:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 30427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:15:43",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1503:25:43"
            },
            "scope": 30488,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30456,
            "nodeType": "FunctionDefinition",
            "src": "1732:315:43",
            "nodes": [],
            "body": {
              "id": 30455,
              "nodeType": "Block",
              "src": "1830:217:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 30440,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30434,
                        "src": "1844:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 30441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1851:6:43",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1844:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 30442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1860:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "1844:19:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 30453,
                    "nodeType": "Block",
                    "src": "1974:67:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30448,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30434,
                              "src": "2006:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 30449,
                                  "name": "ResolvedOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30189,
                                  "src": "2015:13:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$30189_storage_ptr_$",
                                    "typeString": "type(struct ResolvedOrder storage pointer)"
                                  }
                                }
                              ],
                              "id": 30450,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2014:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$30189_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$30189_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 30446,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1995:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 30447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1999:6:43",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "1995:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1995:35:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$30189_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "functionReturnParameters": 30439,
                        "id": 30452,
                        "nodeType": "Return",
                        "src": "1988:42:43"
                      }
                    ]
                  },
                  "id": 30454,
                  "nodeType": "IfStatement",
                  "src": "1840:201:43",
                  "trueBody": {
                    "id": 30445,
                    "nodeType": "Block",
                    "src": "1865:103:43",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1888:70:43",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1917:2:43",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1921:6:43"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1913:3:43"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1913:15:43"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1936:6:43"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1930:5:43"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1930:13:43"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1906:6:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1906:38:43"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1906:38:43"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 30434,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1921:6:43",
                            "valueSize": 1
                          },
                          {
                            "declaration": 30434,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1936:6:43",
                            "valueSize": 1
                          }
                        ],
                        "id": 30444,
                        "nodeType": "InlineAssembly",
                        "src": "1879:79:43"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parseRevertReason",
            "nameLocation": "1741:17:43",
            "parameters": {
              "id": 30435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30434,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "1772:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30456,
                  "src": "1759:19:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30433,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1758:21:43"
            },
            "returnParameters": {
              "id": 30439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30438,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1823:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30456,
                  "src": "1802:26:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$30189_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 30437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30436,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1802:13:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30189,
                      "src": "1802:13:43"
                    },
                    "referencedDeclaration": 30189,
                    "src": "1802:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$30189_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1801:28:43"
            },
            "scope": 30488,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 30487,
            "nodeType": "FunctionDefinition",
            "src": "2053:295:43",
            "nodes": [],
            "body": {
              "id": 30486,
              "nodeType": "Block",
              "src": "2161:187:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30468,
                          "name": "filler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30462,
                          "src": "2179:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 30471,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2197:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OrderQuoter_$30488",
                                "typeString": "contract OrderQuoter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OrderQuoter_$30488",
                                "typeString": "contract OrderQuoter"
                              }
                            ],
                            "id": 30470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2189:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30469,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2189:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2189:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2179:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2171:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 30474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:32:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30475,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:32:43"
                },
                {
                  "assignments": [
                    30477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30477,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2226:5:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30486,
                      "src": "2213:18:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 30476,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2213:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30484,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 30480,
                          "name": "resolvedOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30460,
                          "src": "2245:14:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$30189_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ResolvedOrder memory[] memory"
                          }
                        },
                        "id": 30482,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 30481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2260:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2245:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$30189_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$30189_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 30478,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2234:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 30479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2238:6:43",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2234:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 30483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2234:29:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2213:50:43"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2282:60:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2307:2:43",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2311:5:43"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2303:3:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2303:14:43"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2325:5:43"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2319:5:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2319:12:43"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2296:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2296:36:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2296:36:43"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 30477,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2311:5:43",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30477,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2325:5:43",
                      "valueSize": 1
                    }
                  ],
                  "id": 30485,
                  "nodeType": "InlineAssembly",
                  "src": "2273:69:43"
                }
              ]
            },
            "baseFunctions": [
              30342
            ],
            "functionSelector": "9943fa89",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reactorCallback",
            "nameLocation": "2062:15:43",
            "parameters": {
              "id": 30465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30460,
                  "mutability": "mutable",
                  "name": "resolvedOrders",
                  "nameLocation": "2101:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30487,
                  "src": "2078:37:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$30189_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ResolvedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30458,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30457,
                        "name": "ResolvedOrder",
                        "nameLocations": [
                          "2078:13:43"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 30189,
                        "src": "2078:13:43"
                      },
                      "referencedDeclaration": 30189,
                      "src": "2078:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$30189_storage_ptr",
                        "typeString": "struct ResolvedOrder"
                      }
                    },
                    "id": 30459,
                    "nodeType": "ArrayTypeName",
                    "src": "2078:15:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$30189_storage_$dyn_storage_ptr",
                      "typeString": "struct ResolvedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30462,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "2125:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30487,
                  "src": "2117:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30464,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30487,
                  "src": "2133:12:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30463,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2077:69:43"
            },
            "returnParameters": {
              "id": 30466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2161:0:43"
            },
            "scope": 30488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30373,
              "name": "IReactorCallback",
              "nameLocations": [
                "443:16:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30343,
              "src": "443:16:43"
            },
            "id": 30374,
            "nodeType": "InheritanceSpecifier",
            "src": "443:16:43"
          }
        ],
        "canonicalName": "OrderQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 30372,
          "nodeType": "StructuredDocumentation",
          "src": "280:139:43",
          "text": "@notice Quoter contract for orders\n @dev note this is meant to be used as an off-chain lens contract to pre-validate generic orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30488,
          30343
        ],
        "name": "OrderQuoter",
        "nameLocation": "428:11:43",
        "scope": 30489,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 43
}