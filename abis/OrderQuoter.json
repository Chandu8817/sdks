{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Signature",
          "name": "sig",
          "type": "tuple"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct ResolvedOrder",
          "name": "result",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct ResolvedOrder[]",
          "name": "resolvedOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "reactorCallback",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610b3d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b030bac31461003b578063ed33913214610064575b600080fd5b61004e610049366004610403565b610079565b60405161005b91906104ab565b60405180910390f35b6100776100723660046106af565b6101a9565b005b6040805160e081018252600060608083018281526080840183905260a0840183905260c084018390528352835180850185528281526020808201849052808501919091528385019190915285840151845180860186528781528083018790528551928301865292825293517f8bcaadbd000000000000000000000000000000000000000000000000000000008152929373ffffffffffffffffffffffffffffffffffffffff1692638bcaadbd926101379290913091906004016108b1565b600060405180830381600087803b15801561015157600080fd5b505af1925050508015610162575060015b6101a3573d808015610190576040519150601f19603f3d011682016040523d82523d6000602084013e610195565b606091505b5061019f81610211565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff821630146101cb57600080fd5b6000836000815181106101e0576101e061092b565b60200260200101516040516020016101f891906104ab565b6040516020818303038152906040529050805181602001fd5b6040805160e081018252600060608083018281526080840183905260a0840183905260c08401839052835283518085018552828152602080820193909352918301919091529181019190915260c08251101561026f57815182602001fd5b818060200190518101906101a39190610a2e565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156102da576102da610288565b60405290565b6040805190810167ffffffffffffffff811182821017156102da576102da610288565b6040516080810167ffffffffffffffff811182821017156102da576102da610288565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561036d5761036d610288565b604052919050565b600082601f83011261038657600080fd5b813567ffffffffffffffff8111156103a0576103a0610288565b6103d160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610326565b8181528460208386010111156103e657600080fd5b816020850160208301376000918101602001919091529392505050565b600080828403608081121561041757600080fd5b833567ffffffffffffffff81111561042e57600080fd5b61043a86828701610375565b93505060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561046d57600080fd5b506104766102b7565b602084013560ff8116811461048a57600080fd5b81526040848101356020830152606090940135938101939093525092909150565b60208082528251805173ffffffffffffffffffffffffffffffffffffffff9081168484015281830151811660408086019190915280830151606080870191909152928301516080860152858401518051831660a087015284015160c08601528086015160e080870152805161010087018190526000959491850193869390926101208901925b808610156105665786518051861685528881015189860152830151851683850152958701956001959095019492810192610531565b50919998505050505050505050565b600067ffffffffffffffff82111561058f5761058f610288565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff811681146105bb57600080fd5b50565b803561028381610599565b6000604082840312156105db57600080fd5b6105e36102e0565b905081356105f081610599565b808252506020820135602082015292915050565b600082601f83011261061557600080fd5b8135602061062a61062583610575565b610326565b8281526060928302850182019282820191908785111561064957600080fd5b8387015b858110156106a25781818a0312156106655760008081fd5b61066d6102b7565b813561067881610599565b8152818601358682015260408083013561069181610599565b90820152845292840192810161064d565b5090979650505050505050565b6000806000606084860312156106c457600080fd5b833567ffffffffffffffff808211156106dc57600080fd5b818601915086601f8301126106f057600080fd5b8135602061070061062583610575565b82815260059290921b8401810191818101908a84111561071f57600080fd5b8286015b8481101561080e5780358681111561073a57600080fd5b8701808d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160e081121561076f57600080fd5b6107776102b7565b608082121561078557600080fd5b61078d610303565b91508683013561079c81610599565b825260408301356107ac81610599565b8288015260608381013560408401526080840135908301528181526107d48f60a085016105c9565b8782015260e08301359150888211156107ec57600080fd5b6107fa8f8884860101610604565b604082015285525050918301918301610723565b50975061081e90508882016105be565b95505050604086013591508082111561083657600080fd5b5061084386828701610375565b9150509250925092565b6000815180845260005b8181101561087357602081850181015186830182015201610857565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6060815260008451608060608401526108cd60e084018261084d565b9050602086015160ff8151166080850152602081015160a0850152604081015160c08501525073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610921818561084d565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040828403121561096c57600080fd5b6109746102e0565b9050815161098181610599565b808252506020820151602082015292915050565b600082601f8301126109a657600080fd5b815160206109b661062583610575565b828152606092830285018201928282019190878511156109d557600080fd5b8387015b858110156106a25781818a0312156109f15760008081fd5b6109f96102b7565b8151610a0481610599565b81528186015186820152604080830151610a1d81610599565b9082015284529284019281016109d9565b600060208284031215610a4057600080fd5b815167ffffffffffffffff80821115610a5857600080fd5b9083019081850360e0811215610a6d57600080fd5b610a756102b7565b6080821215610a8357600080fd5b610a8b610303565b91508351610a9881610599565b82526020840151610aa881610599565b806020840152506040840151604083015260608401516060830152818152610ad3876080860161095a565b602082015260c0840151915082821115610aec57600080fd5b610af887838601610995565b6040820152969550505050505056fea2646970667358221220e9e37a889bee04115db8557d40315f386616595095179290fae34c1a44365f9b64736f6c63430008100033",
    "sourceMap": "484:1645:26:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063b030bac31461003b578063ed33913214610064575b600080fd5b61004e610049366004610403565b610079565b60405161005b91906104ab565b60405180910390f35b6100776100723660046106af565b6101a9565b005b6040805160e081018252600060608083018281526080840183905260a0840183905260c084018390528352835180850185528281526020808201849052808501919091528385019190915285840151845180860186528781528083018790528551928301865292825293517f8bcaadbd000000000000000000000000000000000000000000000000000000008152929373ffffffffffffffffffffffffffffffffffffffff1692638bcaadbd926101379290913091906004016108b1565b600060405180830381600087803b15801561015157600080fd5b505af1925050508015610162575060015b6101a3573d808015610190576040519150601f19603f3d011682016040523d82523d6000602084013e610195565b606091505b5061019f81610211565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff821630146101cb57600080fd5b6000836000815181106101e0576101e061092b565b60200260200101516040516020016101f891906104ab565b6040516020818303038152906040529050805181602001fd5b6040805160e081018252600060608083018281526080840183905260a0840183905260c08401839052835283518085018552828152602080820193909352918301919091529181019190915260c08251101561026f57815182602001fd5b818060200190518101906101a39190610a2e565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156102da576102da610288565b60405290565b6040805190810167ffffffffffffffff811182821017156102da576102da610288565b6040516080810167ffffffffffffffff811182821017156102da576102da610288565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561036d5761036d610288565b604052919050565b600082601f83011261038657600080fd5b813567ffffffffffffffff8111156103a0576103a0610288565b6103d160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610326565b8181528460208386010111156103e657600080fd5b816020850160208301376000918101602001919091529392505050565b600080828403608081121561041757600080fd5b833567ffffffffffffffff81111561042e57600080fd5b61043a86828701610375565b93505060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561046d57600080fd5b506104766102b7565b602084013560ff8116811461048a57600080fd5b81526040848101356020830152606090940135938101939093525092909150565b60208082528251805173ffffffffffffffffffffffffffffffffffffffff9081168484015281830151811660408086019190915280830151606080870191909152928301516080860152858401518051831660a087015284015160c08601528086015160e080870152805161010087018190526000959491850193869390926101208901925b808610156105665786518051861685528881015189860152830151851683850152958701956001959095019492810192610531565b50919998505050505050505050565b600067ffffffffffffffff82111561058f5761058f610288565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff811681146105bb57600080fd5b50565b803561028381610599565b6000604082840312156105db57600080fd5b6105e36102e0565b905081356105f081610599565b808252506020820135602082015292915050565b600082601f83011261061557600080fd5b8135602061062a61062583610575565b610326565b8281526060928302850182019282820191908785111561064957600080fd5b8387015b858110156106a25781818a0312156106655760008081fd5b61066d6102b7565b813561067881610599565b8152818601358682015260408083013561069181610599565b90820152845292840192810161064d565b5090979650505050505050565b6000806000606084860312156106c457600080fd5b833567ffffffffffffffff808211156106dc57600080fd5b818601915086601f8301126106f057600080fd5b8135602061070061062583610575565b82815260059290921b8401810191818101908a84111561071f57600080fd5b8286015b8481101561080e5780358681111561073a57600080fd5b8701808d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160e081121561076f57600080fd5b6107776102b7565b608082121561078557600080fd5b61078d610303565b91508683013561079c81610599565b825260408301356107ac81610599565b8288015260608381013560408401526080840135908301528181526107d48f60a085016105c9565b8782015260e08301359150888211156107ec57600080fd5b6107fa8f8884860101610604565b604082015285525050918301918301610723565b50975061081e90508882016105be565b95505050604086013591508082111561083657600080fd5b5061084386828701610375565b9150509250925092565b6000815180845260005b8181101561087357602081850181015186830182015201610857565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6060815260008451608060608401526108cd60e084018261084d565b9050602086015160ff8151166080850152602081015160a0850152604081015160c08501525073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610921818561084d565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040828403121561096c57600080fd5b6109746102e0565b9050815161098181610599565b808252506020820151602082015292915050565b600082601f8301126109a657600080fd5b815160206109b661062583610575565b828152606092830285018201928282019190878511156109d557600080fd5b8387015b858110156106a25781818a0312156109f15760008081fd5b6109f96102b7565b8151610a0481610599565b81528186015186820152604080830151610a1d81610599565b9082015284529284019281016109d9565b600060208284031215610a4057600080fd5b815167ffffffffffffffff80821115610a5857600080fd5b9083019081850360e0811215610a6d57600080fd5b610a756102b7565b6080821215610a8357600080fd5b610a8b610303565b91508351610a9881610599565b82526020840151610aa881610599565b806020840152506040840151604083015260608401516060830152818152610ad3876080860161095a565b602082015260c0840151915082821115610aec57600080fd5b610af887838601610995565b6040820152969550505050505056fea2646970667358221220e9e37a889bee04115db8557d40315f386616595095179290fae34c1a44365f9b64736f6c63430008100033",
    "sourceMap": "484:1645:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:312;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1832:295;;;;;;:::i;:::-;;:::i;:::-;;1007:312;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:34:26;;;1448:41;1164:23;;;;;;;;;;;;;;;;1204:9;;;;;;;;;;1125:89;;;;;-1:-1:-1;;1125:38:26;;;;;:89;;1164:23;;1197:4;;1204:9;1125:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1121:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1277:25;1295:6;1277:17;:25::i;:::-;1268:34;;1226:87;1121:192;1007:312;;;;:::o;1832:295::-;1958:23;;;1976:4;1958:23;1950:32;;;;;;1992:18;2024:14;2039:1;2024:17;;;;;;;;:::i;:::-;;;;;;;2013:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;1992:50;;2104:5;2098:12;2090:5;2086:2;2082:14;2075:36;1511:315;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1639:3:26;1623:6;:13;:19;1619:201;;;1715:6;1709:13;1700:6;1696:2;1692:15;1685:38;1619:201;1785:6;1774:35;;;;;;;;;;;;:::i;1619:201::-;1511:315;;;:::o;14:184:55:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:253;275:2;269:9;317:4;305:17;;352:18;337:34;;373:22;;;334:62;331:88;;;399:18;;:::i;:::-;435:2;428:22;203:253;:::o;461:257::-;533:4;527:11;;;565:17;;612:18;597:34;;633:22;;;594:62;591:88;;;659:18;;:::i;979:253::-;1051:2;1045:9;1093:4;1081:17;;1128:18;1113:34;;1149:22;;;1110:62;1107:88;;;1175:18;;:::i;1237:334::-;1308:2;1302:9;1364:2;1354:13;;1369:66;1350:86;1338:99;;1467:18;1452:34;;1488:22;;;1449:62;1446:88;;;1514:18;;:::i;:::-;1550:2;1543:22;1237:334;;-1:-1:-1;1237:334:55:o;1576:589::-;1618:5;1671:3;1664:4;1656:6;1652:17;1648:27;1638:55;;1689:1;1686;1679:12;1638:55;1725:6;1712:20;1751:18;1747:2;1744:26;1741:52;;;1773:18;;:::i;:::-;1817:114;1925:4;1856:66;1849:4;1845:2;1841:13;1837:86;1833:97;1817:114;:::i;:::-;1956:2;1947:7;1940:19;2002:3;1995:4;1990:2;1982:6;1978:15;1974:26;1971:35;1968:55;;;2019:1;2016;2009:12;1968:55;2084:2;2077:4;2069:6;2065:17;2058:4;2049:7;2045:18;2032:55;2132:1;2107:16;;;2125:4;2103:27;2096:38;;;;2111:7;1576:589;-1:-1:-1;;;1576:589:55:o;2170:857::-;2275:6;2283;2327:9;2318:7;2314:23;2357:3;2353:2;2349:12;2346:32;;;2374:1;2371;2364:12;2346:32;2414:9;2401:23;2447:18;2439:6;2436:30;2433:50;;;2479:1;2476;2469:12;2433:50;2502:49;2543:7;2534:6;2523:9;2519:22;2502:49;:::i;:::-;2492:59;;;2644:4;2575:66;2571:2;2567:75;2563:86;2560:106;;;2662:1;2659;2652:12;2560:106;;2688:22;;:::i;:::-;2762:2;2751:9;2747:18;2734:32;2810:4;2801:7;2797:18;2788:7;2785:31;2775:59;;2830:1;2827;2820:12;2775:59;2843:22;;2925:2;2910:18;;;2897:32;2892:2;2881:14;;2874:56;2990:4;2975:20;;;2962:34;2946:14;;;2939:58;;;;-1:-1:-1;2170:857:55;2850:5;;-1:-1:-1;2170:857:55:o;3032:1532::-;3217:2;3228:21;;;3310:13;;3424:9;;3342:42;3420:18;;;3400;;;3393:46;3474:11;;;3468:18;3543:21;;3505:2;3523:18;;;3516:49;;;;3590:11;;;3584:18;3621:2;3639:18;;;3632:30;;;;3705:11;;;3699:18;3693:3;3678:19;;3671:47;3755:15;;;3749:22;3812:21;;3808:30;;3802:3;3787:19;;3780:59;3882:23;;3876:30;3870:3;3855:19;;3848:59;3944:15;;;3938:22;3998:4;3976:20;;;3969:34;4052:21;;3287:3;3272:19;;4082:22;;;3188:4;;3217:2;4162:23;;;;3188:4;;3342:42;;4135:3;4120:19;;;4213:325;4227:6;4224:1;4221:13;4213:325;;;4286:13;;4328:9;;4324:18;;4312:31;;4383:11;;;4377:18;4363:12;;;4356:40;4440:11;;4434:18;4430:27;;4416:12;;;4409:49;4513:15;;;;4249:1;4242:9;;;;;4478:12;;;;4213:325;;;-1:-1:-1;4555:3:55;;3032:1532;-1:-1:-1;;;;;;;;;3032:1532:55:o;4569:196::-;4642:4;4675:18;4667:6;4664:30;4661:56;;;4697:18;;:::i;:::-;-1:-1:-1;4742:1:55;4738:14;4754:4;4734:25;;4569:196::o;4770:154::-;4856:42;4849:5;4845:54;4838:5;4835:65;4825:93;;4914:1;4911;4904:12;4825:93;4770:154;:::o;4929:134::-;4997:20;;5026:31;4997:20;5026:31;:::i;5068:358::-;5125:5;5173:4;5161:9;5156:3;5152:19;5148:30;5145:50;;;5191:1;5188;5181:12;5145:50;5213:22;;:::i;:::-;5204:31;;5272:9;5259:23;5291:33;5316:7;5291:33;:::i;:::-;5347:7;5340:5;5333:22;;5415:2;5404:9;5400:18;5387:32;5382:2;5375:5;5371:14;5364:56;5068:358;;;;:::o;5431:1229::-;5496:5;5549:3;5542:4;5534:6;5530:17;5526:27;5516:55;;5567:1;5564;5557:12;5516:55;5603:6;5590:20;5629:4;5653:73;5669:56;5722:2;5669:56;:::i;:::-;5653:73;:::i;:::-;5760:15;;;5822:4;5865:11;;;5853:24;;5849:33;;;5791:12;;;;5748:3;5894:15;;;5891:35;;;5922:1;5919;5912:12;5891:35;5958:2;5950:6;5946:15;5970:661;5986:6;5981:3;5978:15;5970:661;;;6062:2;6056:3;6051;6047:13;6043:22;6040:112;;;6106:1;6135:2;6131;6124:14;6040:112;6178:22;;:::i;:::-;6241:3;6228:17;6258:33;6283:7;6258:33;:::i;:::-;6304:22;;6375:12;;;6362:26;6346:14;;;6339:50;6412:2;6455:12;;;6442:26;6481:33;6442:26;6481:33;:::i;:::-;6534:14;;;6527:31;6571:18;;6609:12;;;;6003;;5970:661;;;-1:-1:-1;6649:5:55;;5431:1229;-1:-1:-1;;;;;;;5431:1229:55:o;6665:2417::-;6808:6;6816;6824;6877:2;6865:9;6856:7;6852:23;6848:32;6845:52;;;6893:1;6890;6883:12;6845:52;6933:9;6920:23;6962:18;7003:2;6995:6;6992:14;6989:34;;;7019:1;7016;7009:12;6989:34;7057:6;7046:9;7042:22;7032:32;;7102:7;7095:4;7091:2;7087:13;7083:27;7073:55;;7124:1;7121;7114:12;7073:55;7160:2;7147:16;7182:4;7206:73;7222:56;7275:2;7222:56;:::i;7206:73::-;7313:15;;;7395:1;7391:10;;;;7383:19;;7379:28;;;7344:12;;;;7419:19;;;7416:39;;;7451:1;7448;7441:12;7416:39;7483:2;7479;7475:11;7495:1328;7511:6;7506:3;7503:15;7495:1328;;;7597:3;7584:17;7633:2;7620:11;7617:19;7614:39;;;7649:1;7646;7639:12;7614:39;7676:20;;7723:16;;;7741:66;7719:89;7832:4;7824:13;;7821:33;;;7850:1;7847;7840:12;7821:33;7880:22;;:::i;:::-;7926:4;7922:2;7918:13;7915:33;;;7944:1;7941;7934:12;7915:33;7976:22;;:::i;:::-;7961:37;;8047:2;8043;8039:11;8026:25;8064:33;8089:7;8064:33;:::i;:::-;8110:24;;8183:2;8175:11;;8162:25;8200:33;8162:25;8200:33;:::i;:::-;8253:16;;;8246:33;8338:2;8330:11;;;8317:25;8312:2;8299:16;;8292:51;8402:4;8394:13;;8381:27;8363:16;;;8356:53;8422:22;;;8480:51;8523:7;8517:3;8509:12;;8480:51;:::i;:::-;8475:2;8468:5;8464:14;8457:75;8582:4;8578:2;8574:13;8561:27;8545:43;;8617:2;8607:8;8604:16;8601:36;;;8633:1;8630;8623:12;8601:36;8673:76;8741:7;8736:2;8725:8;8721:2;8717:17;8713:26;8673:76;:::i;:::-;8668:2;8657:14;;8650:100;8763:18;;-1:-1:-1;;8801:12:55;;;;7528;;7495:1328;;;-1:-1:-1;8842:5:55;-1:-1:-1;8866:38:55;;-1:-1:-1;8885:18:55;;;8866:38;:::i;:::-;8856:48;;;;8957:2;8946:9;8942:18;8929:32;8913:48;;8986:2;8976:8;8973:16;8970:36;;;9002:1;8999;8992:12;8970:36;;9025:51;9068:7;9057:8;9046:9;9042:24;9025:51;:::i;:::-;9015:61;;;6665:2417;;;;;:::o;9087:481::-;9128:3;9166:5;9160:12;9193:6;9188:3;9181:19;9218:1;9228:162;9242:6;9239:1;9236:13;9228:162;;;9304:4;9360:13;;;9356:22;;9350:29;9332:11;;;9328:20;;9321:59;9257:12;9228:162;;;9232:3;9435:1;9428:4;9419:6;9414:3;9410:16;9406:27;9399:38;9557:4;9487:66;9482:2;9474:6;9470:15;9466:88;9461:3;9457:98;9453:109;9446:116;;;9087:481;;;;:::o;9573:899::-;9836:2;9825:9;9818:21;9799:4;9874:6;9868:13;9917:4;9912:2;9901:9;9897:18;9890:32;9945:51;9991:3;9980:9;9976:19;9962:12;9945:51;:::i;:::-;9931:65;;10045:4;10037:6;10033:17;10027:24;10116:4;10099:14;10093:21;10089:32;10082:4;10071:9;10067:20;10060:62;10185:4;10169:14;10165:25;10159:32;10153:3;10142:9;10138:19;10131:61;10255:4;10239:14;10235:25;10229:32;10223:3;10212:9;10208:19;10201:61;;10312:42;10304:6;10300:55;10293:4;10282:9;10278:20;10271:85;10406:9;10398:6;10394:22;10387:4;10376:9;10372:20;10365:52;10434:32;10459:6;10451;10434:32;:::i;:::-;10426:40;9573:899;-1:-1:-1;;;;;;9573:899:55:o;10477:184::-;10529:77;10526:1;10519:88;10626:4;10623:1;10616:15;10650:4;10647:1;10640:15;10666:355;10734:5;10782:4;10770:9;10765:3;10761:19;10757:30;10754:50;;;10800:1;10797;10790:12;10754:50;10822:22;;:::i;:::-;10813:31;;10874:9;10868:16;10893:33;10918:7;10893:33;:::i;:::-;10949:7;10942:5;10935:22;;11010:2;10999:9;10995:18;10989:25;10984:2;10977:5;10973:14;10966:49;10666:355;;;;:::o;11026:1212::-;11102:5;11155:3;11148:4;11140:6;11136:17;11132:27;11122:55;;11173:1;11170;11163:12;11122:55;11202:6;11196:13;11228:4;11252:73;11268:56;11321:2;11268:56;:::i;11252:73::-;11359:15;;;11421:4;11464:11;;;11452:24;;11448:33;;;11390:12;;;;11347:3;11493:15;;;11490:35;;;11521:1;11518;11511:12;11490:35;11557:2;11549:6;11545:15;11569:640;11585:6;11580:3;11577:15;11569:640;;;11661:2;11655:3;11650;11646:13;11642:22;11639:112;;;11705:1;11734:2;11730;11723:14;11639:112;11777:22;;:::i;:::-;11833:3;11827:10;11850:33;11875:7;11850:33;:::i;:::-;11896:22;;11960:12;;;11954:19;11938:14;;;11931:43;11997:2;12033:12;;;12027:19;12059:33;12027:19;12059:33;:::i;:::-;12112:14;;;12105:31;12149:18;;12187:12;;;;11602;;11569:640;;12243:1245;12345:6;12398:2;12386:9;12377:7;12373:23;12369:32;12366:52;;;12414:1;12411;12404:12;12366:52;12447:9;12441:16;12476:18;12517:2;12509:6;12506:14;12503:34;;;12533:1;12530;12523:12;12503:34;12556:22;;;;12597:16;;;12633:4;12625:13;;12622:33;;;12651:1;12648;12641:12;12622:33;12677:22;;:::i;:::-;12719:4;12715:2;12711:13;12708:33;;;12737:1;12734;12727:12;12708:33;12765:22;;:::i;:::-;12750:37;;12817:2;12811:9;12829:33;12854:7;12829:33;:::i;:::-;12871:24;;12933:2;12925:11;;12919:18;12946:33;12919:18;12946:33;:::i;:::-;13013:7;13008:2;12999:7;12995:16;12988:33;;13069:2;13065;13061:11;13055:18;13050:2;13041:7;13037:16;13030:44;13124:4;13120:2;13116:13;13110:20;13103:4;13094:7;13090:18;13083:48;13154:7;13147:5;13140:22;13194:63;13249:7;13242:4;13238:2;13234:13;13194:63;:::i;:::-;13189:2;13182:5;13178:14;13171:87;13297:3;13293:2;13289:12;13283:19;13267:35;;13327:2;13317:8;13314:16;13311:36;;;13343:1;13340;13333:12;13311:36;13379:78;13449:7;13438:8;13434:2;13430:17;13379:78;:::i;:::-;13374:2;13363:14;;13356:102;13367:5;12243:1245;-1:-1:-1;;;;;;12243:1245:55:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "quote(bytes,(uint8,bytes32,bytes32))": "b030bac3",
    "reactorCallback(((address,address,uint256,uint256),(address,uint256),(address,uint256,address)[])[],address,bytes)": "ed339132"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ResolvedOrder\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ResolvedOrder[]\",\"name\":\"resolvedOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"reactorCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"note this is meant to be used as an off-chain lens contract to pre-validate generic orders\",\"kind\":\"dev\",\"methods\":{\"quote(bytes,(uint8,bytes32,bytes32))\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\",\"sig\":\"The order signature\"},\"returns\":{\"result\":\"The ResolvedOrder\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quote(bytes,(uint8,bytes32,bytes32))\":{\"notice\":\"Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order\"}},\"notice\":\"Quoter contract for orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/OrderQuoter.sol\":\"OrderQuoter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/permitpost/lib/openzeppelin-contracts/\",\":permitpost/=lib/permitpost/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/permitpost/src/interfaces/IPermitPost.sol\":{\"keccak256\":\"0xe6e246f3c56872e1c041e43b22988d6df39fa249eba1906d6f9fe32f81a633f0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5d0869b3e5330319b42252c66759a1e6b6a4132c71aa0e659ae3ebccd3fcb15f\",\"dweb:/ipfs/QmR9Z9d2dB5w5JKsezkybYQr33g5taUx25gM2AzFUXMARJ\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x72d9ce3815c53a0d9c047bc3d4375e654e4c0aa5b5dbb54deda5543e9d96c277\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://66e15c4c6d374694027f8b7548f063775ff00f0644ee481779415b3c7d41bb77\",\"dweb:/ipfs/QmXKEbvEMAbiXbPG21hSbER9MV2bZDvcG17Fp85sJ3gMiP\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0xf4514c6d592f4bcc4e862348758304d7e02991b402ac84f64b96d5e0b0213693\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3ccd245cac8addc53aae950ae47ce5c6d6489f80adbf3cbfc9c4a836baabd459\",\"dweb:/ipfs/QmdDMHXF8v5ajDVRmnBRLFg8uQVgYQgWwjTtSz8sVRx5ru\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x7d2b57839d50ba28d5086198d3bc5d51e03d46d4d49c1c3a6138fb57badfa9e1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7a7777bc509df4bcf6fac158386e2772bd5845eafb05ae3ac255d24bf01eb0b1\",\"dweb:/ipfs/QmNTU2AosapAVhYZ3Jt8cmRDtWz9TReNnvuw5cU9hTPYpN\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0x9e8a337d2714222c46e6f2d9483b076c608914cb53dcd7e62fdaf3ec0048ec14\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b38da9063cee714603f9f5fb7979455b5395a71e49458c6dcaff5b9f331cbc54\",\"dweb:/ipfs/QmQ6dM8svAhM358oZ8Z4zdB2d5uifxs5YzMbTdHGkLhXU4\"]},\"src/lens/OrderQuoter.sol\":{\"keccak256\":\"0xba09127ffe82d1e5a23d8716294cff952e21ea8a571634a1a67f0c522eeb4822\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://30dc4301b259810f84aacc9eba04380ae6acc54b9cc05d0a817e2ca9925e6444\",\"dweb:/ipfs/QmetZCuigT2nW1d82hBS2DyWMKF7sQiRPYaB3tjj3prPet\"]},\"src/lib/OrderInfoLib.sol\":{\"keccak256\":\"0x5e99fe22582b6d22667041807a29f42959a94a3fd7b811ddbd14668463d481df\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://985408b48806286d1e4831bb2be74843bb364b239142f79f71755fda30ce7254\",\"dweb:/ipfs/Qmf3daCHBKNbChaGo6HKwjkGtsYhgAGowgVDxzm1ZHx2vb\"]},\"src/lib/PermitPostLib.sol\":{\"keccak256\":\"0x3a61a3caf717f1ac32b4b6176ec8635a419bffb8de5d2cbd83940a8224386a08\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://65e54e104028bc3499e8cb0e8df42b1b41060abb291317d2bd0d70426c7d0083\",\"dweb:/ipfs/Qmcq7R1WRj64koFy2YzwSQZx8BuStmaYBeGyhTTMiVEEXR\"]},\"src/reactors/BaseReactor.sol\":{\"keccak256\":\"0x44d10501dc4413c731fe32069475040ee3952540102130b6902ff0ade42fe0e7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://06aff95f2e668fe4855df3b15390f8febb69ae034263ccc16751317a5d0140a6\",\"dweb:/ipfs/QmeVH4bkFp7NmsFNnaSCBsNRm3f9k9q3dPsvufhTr339Uy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "struct Signature",
              "name": "sig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quote",
          "outputs": [
            {
              "internalType": "struct ResolvedOrder",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResolvedOrder[]",
              "name": "resolvedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reactorCallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "quote(bytes,(uint8,bytes32,bytes32))": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member",
              "sig": "The order signature"
            },
            "returns": {
              "result": "The ResolvedOrder"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "quote(bytes,(uint8,bytes32,bytes32))": {
            "notice": "Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/permitpost/lib/openzeppelin-contracts/",
        ":permitpost/=lib/permitpost/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/OrderQuoter.sol": "OrderQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/permitpost/src/interfaces/IPermitPost.sol": {
        "keccak256": "0xe6e246f3c56872e1c041e43b22988d6df39fa249eba1906d6f9fe32f81a633f0",
        "urls": [
          "bzz-raw://5d0869b3e5330319b42252c66759a1e6b6a4132c71aa0e659ae3ebccd3fcb15f",
          "dweb:/ipfs/QmR9Z9d2dB5w5JKsezkybYQr33g5taUx25gM2AzFUXMARJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x72d9ce3815c53a0d9c047bc3d4375e654e4c0aa5b5dbb54deda5543e9d96c277",
        "urls": [
          "bzz-raw://66e15c4c6d374694027f8b7548f063775ff00f0644ee481779415b3c7d41bb77",
          "dweb:/ipfs/QmXKEbvEMAbiXbPG21hSbER9MV2bZDvcG17Fp85sJ3gMiP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0xf4514c6d592f4bcc4e862348758304d7e02991b402ac84f64b96d5e0b0213693",
        "urls": [
          "bzz-raw://3ccd245cac8addc53aae950ae47ce5c6d6489f80adbf3cbfc9c4a836baabd459",
          "dweb:/ipfs/QmdDMHXF8v5ajDVRmnBRLFg8uQVgYQgWwjTtSz8sVRx5ru"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x7d2b57839d50ba28d5086198d3bc5d51e03d46d4d49c1c3a6138fb57badfa9e1",
        "urls": [
          "bzz-raw://7a7777bc509df4bcf6fac158386e2772bd5845eafb05ae3ac255d24bf01eb0b1",
          "dweb:/ipfs/QmNTU2AosapAVhYZ3Jt8cmRDtWz9TReNnvuw5cU9hTPYpN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0x9e8a337d2714222c46e6f2d9483b076c608914cb53dcd7e62fdaf3ec0048ec14",
        "urls": [
          "bzz-raw://b38da9063cee714603f9f5fb7979455b5395a71e49458c6dcaff5b9f331cbc54",
          "dweb:/ipfs/QmQ6dM8svAhM358oZ8Z4zdB2d5uifxs5YzMbTdHGkLhXU4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lens/OrderQuoter.sol": {
        "keccak256": "0xba09127ffe82d1e5a23d8716294cff952e21ea8a571634a1a67f0c522eeb4822",
        "urls": [
          "bzz-raw://30dc4301b259810f84aacc9eba04380ae6acc54b9cc05d0a817e2ca9925e6444",
          "dweb:/ipfs/QmetZCuigT2nW1d82hBS2DyWMKF7sQiRPYaB3tjj3prPet"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/OrderInfoLib.sol": {
        "keccak256": "0x5e99fe22582b6d22667041807a29f42959a94a3fd7b811ddbd14668463d481df",
        "urls": [
          "bzz-raw://985408b48806286d1e4831bb2be74843bb364b239142f79f71755fda30ce7254",
          "dweb:/ipfs/Qmf3daCHBKNbChaGo6HKwjkGtsYhgAGowgVDxzm1ZHx2vb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/PermitPostLib.sol": {
        "keccak256": "0x3a61a3caf717f1ac32b4b6176ec8635a419bffb8de5d2cbd83940a8224386a08",
        "urls": [
          "bzz-raw://65e54e104028bc3499e8cb0e8df42b1b41060abb291317d2bd0d70426c7d0083",
          "dweb:/ipfs/Qmcq7R1WRj64koFy2YzwSQZx8BuStmaYBeGyhTTMiVEEXR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseReactor.sol": {
        "keccak256": "0x44d10501dc4413c731fe32069475040ee3952540102130b6902ff0ade42fe0e7",
        "urls": [
          "bzz-raw://06aff95f2e668fe4855df3b15390f8febb69ae034263ccc16751317a5d0140a6",
          "dweb:/ipfs/QmeVH4bkFp7NmsFNnaSCBsNRm3f9k9q3dPsvufhTr339Uy"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/OrderQuoter.sol",
    "id": 25772,
    "exportedSymbols": {
      "BaseReactor": [
        26314
      ],
      "IReactorCallback": [
        25642
      ],
      "OrderInfo": [
        25542
      ],
      "OrderQuoter": [
        25771
      ],
      "ResolvedOrder": [
        25565
      ],
      "Signature": [
        21586
      ],
      "SignedOrder": [
        25571
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2085:26",
    "nodes": [
      {
        "id": 25644,
        "nodeType": "PragmaDirective",
        "src": "45:24:26",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 25646,
        "nodeType": "ImportDirective",
        "src": "71:64:26",
        "absolutePath": "lib/permitpost/src/interfaces/IPermitPost.sol",
        "file": "permitpost/interfaces/IPermitPost.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25772,
        "sourceUnit": 21663,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25645,
              "name": "Signature",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21586,
              "src": "79:9:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25648,
        "nodeType": "ImportDirective",
        "src": "136:68:26",
        "absolutePath": "src/interfaces/IReactorCallback.sol",
        "file": "../interfaces/IReactorCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25772,
        "sourceUnit": 25643,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25647,
              "name": "IReactorCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25642,
              "src": "144:16:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25650,
        "nodeType": "ImportDirective",
        "src": "205:56:26",
        "absolutePath": "src/reactors/BaseReactor.sol",
        "file": "../reactors/BaseReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25772,
        "sourceUnit": 26315,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25649,
              "name": "BaseReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26314,
              "src": "213:11:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25654,
        "nodeType": "ImportDirective",
        "src": "262:81:26",
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25772,
        "sourceUnit": 25572,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25651,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25542,
              "src": "270:9:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 25652,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25565,
              "src": "281:13:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 25653,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25571,
              "src": "296:11:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25771,
        "nodeType": "ContractDefinition",
        "src": "484:1645:26",
        "nodes": [
          {
            "id": 25660,
            "nodeType": "VariableDeclaration",
            "src": "531:44:26",
            "constant": true,
            "mutability": "constant",
            "name": "REACTOR_ADDRESS_OFFSET",
            "nameLocation": "548:22:26",
            "scope": 25771,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25658,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "531:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 25659,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "573:2:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "internal"
          },
          {
            "id": 25706,
            "nodeType": "FunctionDefinition",
            "src": "1007:312:26",
            "body": {
              "id": 25705,
              "nodeType": "Block",
              "src": "1111:208:26",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 25691,
                        "nodeType": "Block",
                        "src": "1215:2:26",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 25692,
                      "nodeType": "TryCatchClause",
                      "src": "1215:2:26"
                    },
                    {
                      "block": {
                        "id": 25702,
                        "nodeType": "Block",
                        "src": "1254:59:26",
                        "statements": [
                          {
                            "expression": {
                              "id": 25700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 25696,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25670,
                                "src": "1268:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$25565_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 25698,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25694,
                                    "src": "1295:6:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 25697,
                                  "name": "parseRevertReason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25739,
                                  "src": "1277:17:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$25565_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct ResolvedOrder memory)"
                                  }
                                },
                                "id": 25699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1277:25:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$25565_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "src": "1268:34:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResolvedOrder_$25565_memory_ptr",
                                "typeString": "struct ResolvedOrder memory"
                              }
                            },
                            "id": 25701,
                            "nodeType": "ExpressionStatement",
                            "src": "1268:34:26"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 25703,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 25695,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 25694,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1246:6:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 25703,
                            "src": "1233:19:26",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 25693,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1233:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1232:21:26"
                      },
                      "src": "1226:87:26"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25679,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25663,
                            "src": "1176:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 25680,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25666,
                            "src": "1183:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Signature_$21586_memory_ptr",
                              "typeString": "struct Signature memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_Signature_$21586_memory_ptr",
                              "typeString": "struct Signature memory"
                            }
                          ],
                          "id": 25678,
                          "name": "SignedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25571,
                          "src": "1164:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SignedOrder_$25571_storage_ptr_$",
                            "typeString": "type(struct SignedOrder storage pointer)"
                          }
                        },
                        "id": 25681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1164:23:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$25571_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 25684,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1197:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OrderQuoter_$25771",
                              "typeString": "contract OrderQuoter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OrderQuoter_$25771",
                              "typeString": "contract OrderQuoter"
                            }
                          ],
                          "id": 25683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1189:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25682,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1189:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1189:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 25688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1210:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 25687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1204:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 25686,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1204:5:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1204:9:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$25571_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25674,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25663,
                                "src": "1148:5:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 25673,
                              "name": "getReactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25715,
                              "src": "1137:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes memory) pure returns (address)"
                              }
                            },
                            "id": 25675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1137:17:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25672,
                          "name": "BaseReactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26314,
                          "src": "1125:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BaseReactor_$26314_$",
                            "typeString": "type(contract BaseReactor)"
                          }
                        },
                        "id": 25676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1125:30:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseReactor_$26314",
                          "typeString": "contract BaseReactor"
                        }
                      },
                      "id": 25677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1156:7:26",
                      "memberName": "execute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25951,
                      "src": "1125:38:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SignedOrder_$25571_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct SignedOrder memory,address,bytes memory) external"
                      }
                    },
                    "id": 25690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1125:89:26",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25704,
                  "nodeType": "TryStatement",
                  "src": "1121:192:26"
                }
              ]
            },
            "documentation": {
              "id": 25661,
              "nodeType": "StructuredDocumentation",
              "src": "582:420:26",
              "text": "@notice Quote the given order, returning the ResolvedOrder object which defines\n the current input and output token amounts required to satisfy it\n Also bubbles up any reverts that would occur during the processing of the order\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @param sig The order signature\n @return result The ResolvedOrder"
            },
            "functionSelector": "b030bac3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quote",
            "nameLocation": "1016:5:26",
            "parameters": {
              "id": 25667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25663,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1035:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 25706,
                  "src": "1022:18:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25662,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25666,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1059:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 25706,
                  "src": "1042:20:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Signature_$21586_memory_ptr",
                    "typeString": "struct Signature"
                  },
                  "typeName": {
                    "id": 25665,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25664,
                      "name": "Signature",
                      "nameLocations": [
                        "1042:9:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21586,
                      "src": "1042:9:26"
                    },
                    "referencedDeclaration": 21586,
                    "src": "1042:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Signature_$21586_storage_ptr",
                      "typeString": "struct Signature"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1021:42:26"
            },
            "returnParameters": {
              "id": 25671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25670,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1103:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 25706,
                  "src": "1082:27:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$25565_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 25669,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25668,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1082:13:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25565,
                      "src": "1082:13:26"
                    },
                    "referencedDeclaration": 25565,
                    "src": "1082:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$25565_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1081:29:26"
            },
            "scope": 25771,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25715,
            "nodeType": "FunctionDefinition",
            "src": "1325:180:26",
            "body": {
              "id": 25714,
              "nodeType": "Block",
              "src": "1404:101:26",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1423:76:26",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1437:52:26",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "1458:5:26"
                                },
                                {
                                  "name": "REACTOR_ADDRESS_OFFSET",
                                  "nodeType": "YulIdentifier",
                                  "src": "1465:22:26"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1454:3:26"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1454:34:26"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1448:5:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1448:41:26"
                        },
                        "variableNames": [
                          {
                            "name": "reactor",
                            "nodeType": "YulIdentifier",
                            "src": "1437:7:26"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 25660,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1465:22:26",
                      "valueSize": 1
                    },
                    {
                      "declaration": 25708,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1458:5:26",
                      "valueSize": 1
                    },
                    {
                      "declaration": 25711,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1437:7:26",
                      "valueSize": 1
                    }
                  ],
                  "id": 25713,
                  "nodeType": "InlineAssembly",
                  "src": "1414:85:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReactor",
            "nameLocation": "1334:10:26",
            "parameters": {
              "id": 25709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25708,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1358:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 25715,
                  "src": "1345:18:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25707,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1344:20:26"
            },
            "returnParameters": {
              "id": 25712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25711,
                  "mutability": "mutable",
                  "name": "reactor",
                  "nameLocation": "1395:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 25715,
                  "src": "1387:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:17:26"
            },
            "scope": 25771,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 25739,
            "nodeType": "FunctionDefinition",
            "src": "1511:315:26",
            "body": {
              "id": 25738,
              "nodeType": "Block",
              "src": "1609:217:26",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 25723,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25717,
                        "src": "1623:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 25724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1630:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1623:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 25725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1639:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "1623:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 25736,
                    "nodeType": "Block",
                    "src": "1753:67:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25731,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25717,
                              "src": "1785:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 25732,
                                  "name": "ResolvedOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25565,
                                  "src": "1794:13:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$25565_storage_ptr_$",
                                    "typeString": "type(struct ResolvedOrder storage pointer)"
                                  }
                                }
                              ],
                              "id": 25733,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1793:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$25565_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$25565_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 25729,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1774:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 25730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1778:6:26",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "1774:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 25734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:35:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$25565_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "functionReturnParameters": 25722,
                        "id": 25735,
                        "nodeType": "Return",
                        "src": "1767:42:26"
                      }
                    ]
                  },
                  "id": 25737,
                  "nodeType": "IfStatement",
                  "src": "1619:201:26",
                  "trueBody": {
                    "id": 25728,
                    "nodeType": "Block",
                    "src": "1644:103:26",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1667:70:26",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1696:2:26",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1700:6:26"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1692:3:26"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1692:15:26"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1715:6:26"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1709:5:26"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1709:13:26"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1685:6:26"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1685:38:26"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1685:38:26"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 25717,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1700:6:26",
                            "valueSize": 1
                          },
                          {
                            "declaration": 25717,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1715:6:26",
                            "valueSize": 1
                          }
                        ],
                        "id": 25727,
                        "nodeType": "InlineAssembly",
                        "src": "1658:79:26"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parseRevertReason",
            "nameLocation": "1520:17:26",
            "parameters": {
              "id": 25718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25717,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "1551:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 25739,
                  "src": "1538:19:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25716,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1537:21:26"
            },
            "returnParameters": {
              "id": 25722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25721,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1602:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 25739,
                  "src": "1581:26:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$25565_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 25720,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25719,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1581:13:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25565,
                      "src": "1581:13:26"
                    },
                    "referencedDeclaration": 25565,
                    "src": "1581:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$25565_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1580:28:26"
            },
            "scope": 25771,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 25770,
            "nodeType": "FunctionDefinition",
            "src": "1832:295:26",
            "body": {
              "id": 25769,
              "nodeType": "Block",
              "src": "1940:187:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25751,
                          "name": "filler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25745,
                          "src": "1958:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 25754,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1976:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OrderQuoter_$25771",
                                "typeString": "contract OrderQuoter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OrderQuoter_$25771",
                                "typeString": "contract OrderQuoter"
                              }
                            ],
                            "id": 25753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1968:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25752,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1968:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1968:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1958:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1950:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1950:32:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25758,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:32:26"
                },
                {
                  "assignments": [
                    25760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25760,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2005:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 25769,
                      "src": "1992:18:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25759,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1992:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25767,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 25763,
                          "name": "resolvedOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25743,
                          "src": "2024:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$25565_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ResolvedOrder memory[] memory"
                          }
                        },
                        "id": 25765,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 25764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2039:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2024:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$25565_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$25565_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 25761,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2013:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 25762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2017:6:26",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2013:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 25766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:29:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1992:50:26"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2061:60:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2086:2:26",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2090:5:26"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2082:3:26"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2082:14:26"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2104:5:26"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2098:5:26"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2098:12:26"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2075:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2075:36:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2075:36:26"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 25760,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2090:5:26",
                      "valueSize": 1
                    },
                    {
                      "declaration": 25760,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2104:5:26",
                      "valueSize": 1
                    }
                  ],
                  "id": 25768,
                  "nodeType": "InlineAssembly",
                  "src": "2052:69:26"
                }
              ]
            },
            "baseFunctions": [
              25641
            ],
            "functionSelector": "ed339132",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reactorCallback",
            "nameLocation": "1841:15:26",
            "parameters": {
              "id": 25748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25743,
                  "mutability": "mutable",
                  "name": "resolvedOrders",
                  "nameLocation": "1880:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 25770,
                  "src": "1857:37:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$25565_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ResolvedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 25741,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 25740,
                        "name": "ResolvedOrder",
                        "nameLocations": [
                          "1857:13:26"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25565,
                        "src": "1857:13:26"
                      },
                      "referencedDeclaration": 25565,
                      "src": "1857:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$25565_storage_ptr",
                        "typeString": "struct ResolvedOrder"
                      }
                    },
                    "id": 25742,
                    "nodeType": "ArrayTypeName",
                    "src": "1857:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$25565_storage_$dyn_storage_ptr",
                      "typeString": "struct ResolvedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25745,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "1904:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 25770,
                  "src": "1896:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25770,
                  "src": "1912:12:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25746,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1856:69:26"
            },
            "returnParameters": {
              "id": 25749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1940:0:26"
            },
            "scope": 25771,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25656,
              "name": "IReactorCallback",
              "nameLocations": [
                "508:16:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25642,
              "src": "508:16:26"
            },
            "id": 25657,
            "nodeType": "InheritanceSpecifier",
            "src": "508:16:26"
          }
        ],
        "canonicalName": "OrderQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25655,
          "nodeType": "StructuredDocumentation",
          "src": "345:139:26",
          "text": "@notice Quoter contract for orders\n @dev note this is meant to be used as an off-chain lens contract to pre-validate generic orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25771,
          25642
        ],
        "name": "OrderQuoter",
        "nameLocation": "493:11:26",
        "scope": 25772,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 26
}