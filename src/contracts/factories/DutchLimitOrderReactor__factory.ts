/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DutchLimitOrderReactor,
  DutchLimitOrderReactorInterface,
} from "../DutchLimitOrderReactor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_permit2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_protocolFeeBps",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protocolFeeRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeadlineBeforeEndTime",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "EndTimeBeforeStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectAmounts",
    type: "error",
  },
  {
    inputs: [],
    name: "InputAndOutputDecay",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReactor",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSender",
    type: "error",
  },
  {
    inputs: [],
    name: "NoClaimableFees",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedFeeRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "ValidationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "filler",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "offerer",
        type: "address",
      },
    ],
    name: "Fill",
    type: "event",
  },
  {
    inputs: [],
    name: "PROTOCOL_FEE_BPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "claimFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "order",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
        ],
        internalType: "struct SignedOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "fillContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "fillData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "order",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
        ],
        internalType: "struct SignedOrder[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "fillContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "fillData",
        type: "bytes",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feesOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permit2",
    outputs: [
      {
        internalType: "contract ISignatureTransfer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolFeeRecipient",
        type: "address",
      },
    ],
    name: "setProtocolFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002592380380620025928339810160408190526200003491620000af565b82828281816127108211156200005d576040516358d620b360e01b815260040160405180910390fd5b608091909152600180546001600160a01b0319166001600160a01b039283161790559290921660a05250620000f09350505050565b80516001600160a01b0381168114620000aa57600080fd5b919050565b600080600060608486031215620000c557600080fd5b620000d08462000092565b925060208401519150620000e76040850162000092565b90509250925092565b60805160a05161246f620001236000396000818160a7015261112601526000818161013e0152610ec3015261246f6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636f1d5f511161005b5780636f1d5f5114610126578063be37822814610139578063e521cb921461016e578063ffecc0851461018157600080fd5b806305afc9771461008d57806312261ee7146100a257806315a0ea6a146100f357806364df049e14610106575b600080fd5b6100a061009b366004611804565b6101a9565b005b6100c97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100a061010136600461187f565b610299565b6001546100c99073ffffffffffffffffffffffffffffffffffffffff1681565b6100a06101343660046118c7565b61039b565b6101607f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100ea565b6100a061017c36600461187f565b6104d5565b61016061018f366004611998565b600060208181529281526040808220909352908152205481565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816101c05790505090506102688561056d565b8160008151811061027b5761027b6119d1565b602002602001018190525061029281858585610859565b5050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff1633146102c157336102c4565b60005b73ffffffffffffffffffffffffffffffffffffffff8084166000908152602081815260408083209385168352929052205490915060018111610332576040517f54a8917900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260408083209487168352939052919091206001905561039690337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8401610a5f565b505050565b6000845167ffffffffffffffff8111156103b7576103b7611599565b60405190808252806020026020018201604052801561047257816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816103d55790505b50905060005b85518110156104c8576104a3868281518110610496576104966119d1565b602002602001015161056d565b8282815181106104b5576104b56119d1565b6020908102919091010152600101610478565b5061029281858585610859565b60015473ffffffffffffffffffffffffffffffffffffffff163314610526576040517fcecea07500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040805161016081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905260606101408401819052908352835180820185528281526020808201849052818601849052840152928201839052828201929092526080810191909152600082600001518060200190518101906105f69190611ba1565b905061060181610b23565b600081608001515167ffffffffffffffff81111561062157610621611599565b60405190808252806020026020018201604052801561069157816020015b6040805160808101825260008082526020808301829052928201819052606082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161063f5790505b50905060005b81518110156107b1576000836080015182815181106106b8576106b86119d1565b60200260200101519050806040015181602001511015610704576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107228260200151836040015187602001518860400151610ca7565b90506040518060800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001836060015173ffffffffffffffffffffffffffffffffffffffff16815260200183608001511515815250848481518110610791576107916119d1565b6020026020010181905250505080806107a990611d04565b915050610697565b5060006107d883606001516020015184606001516040015185602001518660400151610ca7565b90506040518060a0016040528084600001518152602001604051806060016040528086606001516000015173ffffffffffffffffffffffffffffffffffffffff16815260200184815260200186606001516040015181525081526020018381526020018660200151815260200161084e85610d20565b905295945050505050565b60005b84518110156108a9576000858281518110610879576108796119d1565b6020026020010151905061088c81610e79565b6108968133610f9a565b6108a08186611124565b5060010161085c565b506040517f2213f3a900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690632213f3a990610902908790339087908790600401611ef9565b600060405180830381600087803b15801561091c57600080fd5b505af1158015610930573d6000803e3d6000fd5b5050505060005b8451811015610292576000858281518110610954576109546119d1565b6020026020010151905060005b8160400151518110156109d257600082604001518281518110610986576109866119d1565b602002602001015190506109c98782604001518360200151846000015173ffffffffffffffffffffffffffffffffffffffff1661131b909392919063ffffffff16565b50600101610961565b50805160400151865133908890859081106109ef576109ef6119d1565b6020026020010151608001517fb7425f63eb6d6633896fb37a17c56e098d84542b065fb929e1e65eac5d8c96ba846000015160200151604051610a4e919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60405180910390a450600101610937565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610b1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064015b60405180910390fd5b50505050565b60408101518151606001511015610b66576040517f773a618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806020015181604001511015610ba8576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151604081015160209091015114610ca457606081015160408101516020909101511115610c05576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b816080015151811015610ca25781608001518181518110610c2b57610c2b6119d1565b60200260200101516040015182608001518281518110610c4d57610c4d6119d1565b60200260200101516020015114610c90576040517fd303758b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80610c9a81611d04565b915050610c08565b505b50565b600042821480610cb657508385145b15610cc2575082610d18565b428310610cd0575083610d18565b814210610cde575082610d18565b4283900383830386861015610d0357610cfa86880383836113da565b87039250610d15565b610d1087870383836113da565b870192505b50505b949350505050565b60006040518060a00160405280606381526020016123d760639139604051602001610d4b9190611ff8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152815160209283012084518051818501518285015160608085015160808087015160a0909701518051908b01208c8b01518d8b0151948e015180519c8101519b0151928e0151999b979a969995989397939691959094939290610dda906113f9565b60408051602081019e909e5273ffffffffffffffffffffffffffffffffffffffff9c8d16908e0152998b1660608d015260808c019890985260a08b019690965293881660c08a015260e08901929092526101008801526101208701529093166101408501526101608401929092526101808301919091526101a08201526101c0015b604051602081830303815290604052805190602001209050919050565b60005b816040015151811015610ca257600082604001518281518110610ea157610ea16119d1565b60200260200101519050806060015115610f91576020810151600090610eea907f00000000000000000000000000000000000000000000000000000000000000006127106113da565b602080840151845173ffffffffffffffffffffffffffffffffffffffff166000908152808352604080822082805290935291822080549394509084900392849290610f369084906121f2565b9091555050825173ffffffffffffffffffffffffffffffffffffffff9081166000908152602081815260408083208188015190941683529290529081208054839290610f839084906121f2565b909155505030604084015250505b50600101610e7c565b81515173ffffffffffffffffffffffffffffffffffffffff163014610feb576040517f4ddf4a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516060015142111561102a576040517f70f65caa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516080015173ffffffffffffffffffffffffffffffffffffffff16158015906110ed57508151608001516040517f073523f900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063073523f9906110aa9084908690600401612205565b602060405180830381865afa1580156110c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110eb9190612234565b155b15610ca2576040517f0a0b0d7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe6111e4846040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a081018252602080840180515173ffffffffffffffffffffffffffffffffffffffff1660608085019182529151850151608085015283528451840151918301919091529251909201519082015290565b6111ee85856114cf565b85600001516020015186608001516040518060a00160405280606381526020016123d7606391396040516020016112259190611ff8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815260608301909152602e8083529091906123a9602083013960405160200161127892919061224f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260608a01517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b1683526112e596959493926004016122aa565b600060405180830381600087803b1580156112ff57600080fd5b505af1158015611313573d6000803e3d6000fd5b505050505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610b14565b8282028115158415858304851417166113f257600080fd5b0492915050565b600080825167ffffffffffffffff81111561141657611416611599565b60405190808252806020026020018201604052801561143f578160200160208202803683370190505b50905060005b835181101561149f57611470848281518110611463576114636119d1565b6020026020010151611516565b828281518110611482576114826119d1565b60209081029190910101528061149781611d04565b915050611445565b50806040516020016114b19190612372565b60405160208183030381529060405280519060200120915050919050565b6040805180820182526000808252602091820152815180830190925273ffffffffffffffffffffffffffffffffffffffff8316825283810151810151908201525b92915050565b60006040518060a00160405280606381526020016123d76063913980516020918201208351848301516040808701516060808901516080808b01518551998a019890985273ffffffffffffffffffffffffffffffffffffffff9687169489019490945290870193909352908501521660a0830152151560c082015260e001610e5c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156115eb576115eb611599565b60405290565b60405160c0810167ffffffffffffffff811182821017156115eb576115eb611599565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561165b5761165b611599565b604052919050565b600067ffffffffffffffff82111561167d5761167d611599565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126116ba57600080fd5b81356116cd6116c882611663565b611614565b8181528460208386010111156116e257600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561171157600080fd5b6040516040810167ffffffffffffffff828210818311171561173557611735611599565b81604052829350843591508082111561174d57600080fd5b611759868387016116a9565b8352602085013591508082111561176f57600080fd5b5061177c858286016116a9565b6020830152505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610ca457600080fd5b80356117b681611789565b919050565b60008083601f8401126117cd57600080fd5b50813567ffffffffffffffff8111156117e557600080fd5b6020830191508360208285010111156117fd57600080fd5b9250929050565b6000806000806060858703121561181a57600080fd5b843567ffffffffffffffff8082111561183257600080fd5b61183e888389016116ff565b95506020870135915061185082611789565b9093506040860135908082111561186657600080fd5b50611873878288016117bb565b95989497509550505050565b60006020828403121561189157600080fd5b813561189c81611789565b9392505050565b600067ffffffffffffffff8211156118bd576118bd611599565b5060051b60200190565b600080600080606085870312156118dd57600080fd5b843567ffffffffffffffff808211156118f557600080fd5b818701915087601f83011261190957600080fd5b813560206119196116c8836118a3565b82815260059290921b8401810191818101908b84111561193857600080fd5b8286015b84811015611970578035868111156119545760008081fd5b6119628e86838b01016116ff565b84525091830191830161193c565b50985061198090508982016117ab565b96505050604087013591508082111561186657600080fd5b600080604083850312156119ab57600080fd5b82356119b681611789565b915060208301356119c681611789565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b83811015611a1b578181015183820152602001611a03565b50506000910152565b600082601f830112611a3557600080fd5b8151611a436116c882611663565b818152846020838601011115611a5857600080fd5b610d18826020830160208701611a00565b600060608284031215611a7b57600080fd5b6040516060810181811067ffffffffffffffff82111715611a9e57611a9e611599565b80604052508091508251611ab181611789565b8082525060208301516020820152604083015160408201525092915050565b805180151581146117b657600080fd5b600082601f830112611af157600080fd5b81516020611b016116c8836118a3565b82815260a09283028501820192828201919087851115611b2057600080fd5b8387015b85811015611b945781818a031215611b3c5760008081fd5b611b446115c8565b8151611b4f81611789565b8152818601518682015260408083015190820152606080830151611b7281611789565b908201526080611b83838201611ad0565b908201528452928401928101611b24565b5090979650505050505050565b600060208284031215611bb357600080fd5b815167ffffffffffffffff80821115611bcb57600080fd5b9083019060e08286031215611bdf57600080fd5b611be76115c8565b825182811115611bf657600080fd5b830160c08188031215611c0857600080fd5b611c106115f1565b8151611c1b81611789565b81526020820151611c2b81611789565b8060208301525060408201516040820152606082015160608201526080820151611c5481611789565b608082015260a082015184811115611c6b57600080fd5b611c7789828501611a24565b60a08301525080835250506020830151602082015260408301516040820152611ca38660608501611a69565b606082015260c083015182811115611cba57600080fd5b611cc687828601611ae0565b60808301525095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d3557611d35611cd5565b5060010190565b60008151808452611d54816020860160208601611a00565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015611df3578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040808301519091169089015260609081015115159088015260809096019590820190600101611d9a565b509495945050505050565b6000815160e0845273ffffffffffffffffffffffffffffffffffffffff8082511660e08601528060208301511661010086015260408201516101208601526060820151610140860152806080830151166101608601525060a0810151905060c0610180850152611e726101a0850182611d3c565b90506020830151611eb06020860182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408301518482036080860152611ec88282611d86565b915050606083015184820360a0860152611ee28282611d3c565b915050608083015160c08501528091505092915050565b6000606082016060835280875180835260808501915060808160051b86010192506020808a0160005b83811015611f6e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888703018552611f5c868351611dfe565b95509382019390820190600101611f22565b505073ffffffffffffffffffffffffffffffffffffffff89168187015285840360408701528684528688828601376000848801820152601f9096017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909201909401979650505050505050565b60008151611fee818560208601611a00565b9290920192915050565b7f44757463684c696d69744f72646572280000000000000000000000000000000081527f616464726573732072656163746f722c0000000000000000000000000000000060108201527f61646472657373206f6666657265722c0000000000000000000000000000000060208201527f75696e74323536206e6f6e63652c00000000000000000000000000000000000060308201527f75696e7432353620646561646c696e652c000000000000000000000000000000603e8201527f616464726573732076616c69646174696f6e436f6e74726163742c0000000000604f8201527f62797465732076616c69646174696f6e446174612c0000000000000000000000606a8201527f75696e7432353620737461727454696d652c0000000000000000000000000000607f8201527f75696e7432353620656e6454696d652c0000000000000000000000000000000060918201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a18201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b48201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060cd8201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e4820152600061189c60fa830184611fdc565b8082018082111561151057611510611cd5565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610d186040830184611dfe565b60006020828403121561224657600080fd5b61189c82611ad0565b7f44757463684c696d69744f72646572207769746e657373290000000000000000815260008351612287816018850160208801611a00565b83519083019061229e816018840160208801611a00565b01601801949350505050565b60006101406122da838a51805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b602089015160408401526040890151606084015261231b6080840189805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b73ffffffffffffffffffffffffffffffffffffffff871660c08401528560e08401528061010084015261235081840186611d3c565b90508281036101208401526123658185611d3c565b9998505050505050505050565b815160009082906020808601845b8381101561239c57815185529382019390820190600101612380565b5092969550505050505056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e742944757463684f7574707574286164647265737320746f6b656e2c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e742c626f6f6c2069734665654f757470757429a26469706673582212206f2a85b7e5c380e8cb7e1c095640bb39c58df4b0261d7f8bcbbe7bc0ab8dddb064736f6c63430008110033";

type DutchLimitOrderReactorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DutchLimitOrderReactorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DutchLimitOrderReactor__factory extends ContractFactory {
  constructor(...args: DutchLimitOrderReactorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _permit2: PromiseOrValue<string>,
    _protocolFeeBps: PromiseOrValue<BigNumberish>,
    _protocolFeeRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DutchLimitOrderReactor> {
    return super.deploy(
      _permit2,
      _protocolFeeBps,
      _protocolFeeRecipient,
      overrides || {}
    ) as Promise<DutchLimitOrderReactor>;
  }
  override getDeployTransaction(
    _permit2: PromiseOrValue<string>,
    _protocolFeeBps: PromiseOrValue<BigNumberish>,
    _protocolFeeRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _permit2,
      _protocolFeeBps,
      _protocolFeeRecipient,
      overrides || {}
    );
  }
  override attach(address: string): DutchLimitOrderReactor {
    return super.attach(address) as DutchLimitOrderReactor;
  }
  override connect(signer: Signer): DutchLimitOrderReactor__factory {
    return super.connect(signer) as DutchLimitOrderReactor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DutchLimitOrderReactorInterface {
    return new utils.Interface(_abi) as DutchLimitOrderReactorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DutchLimitOrderReactor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DutchLimitOrderReactor;
  }
}
