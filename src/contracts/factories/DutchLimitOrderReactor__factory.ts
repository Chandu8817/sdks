/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DutchLimitOrderReactor,
  DutchLimitOrderReactorInterface,
} from "../DutchLimitOrderReactor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_permitPost",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeadlineBeforeEndTime",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "EndTimeBeforeStart",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReactor",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderAlreadyFilled",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderCancelled",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "filler",
        type: "address",
      },
    ],
    name: "Fill",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "order",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature",
            name: "sig",
            type: "tuple",
          },
        ],
        internalType: "struct SignedOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "fillContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "fillData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderStatus",
    outputs: [
      {
        internalType: "bool",
        name: "isCancelled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isFilled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permitPost",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "order",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "reactor",
                type: "address",
              },
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct TokenAmount",
            name: "input",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct Output[]",
            name: "outputs",
            type: "tuple[]",
          },
        ],
        internalType: "struct ResolvedOrder",
        name: "resolvedOrder",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516111cc3803806111cc83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161113b6100916000396000818160d301526107c7015261113b6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632dff692d146100515780638bcaadbd14610099578063e4056186146100ae578063f45d6b23146100ce575b600080fd5b61007d61005f366004610937565b60006020819052908152604090205460ff8082169161010090041682565b6040805192151583529015156020830152015b60405180910390f35b6100ac6100a73660046109b5565b61010d565b005b6100c16100bc366004610a35565b61014f565b6040516100909190610b2b565b6100f57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610090565b61014961011d6100bc8680610b45565b6020860161012b8780610b45565b604051610139929190610b8c565b604051809103902086868661033d565b50505050565b6101576108e6565b600061016583850185610d4c565b905061017081610529565b600081608001515167ffffffffffffffff81111561019057610190610b9c565b6040519080825280602002602001820160405280156101db57816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816101ae5790505b50905060005b81518110156103195760008360800151828151811061020257610202610e35565b602002602001015190506000428560400151111580610228575081604001518260200151145b15610238575060408101516102b2565b4285602001511061024e575060208101516102b2565b60008560200151426102609190610e61565b90506000866020015187604001516102789190610e61565b90506000846040015185602001516102909190610e61565b905061029d81848461057e565b85602001516102ac9190610e61565b93505050505b604051806060016040528083600001516001600160a01b0316815260200182815260200183606001516001600160a01b03168152508484815181106102f9576102f9610e35565b60200260200101819052505050808061031190610e7a565b9150506101e1565b50604080516060808201835284518252939093015160208401528201529392505050565b85516103489061059d565b610351846105ec565b61035d86858588610680565b604080516001808252818301909252600091816020015b61037c6108e6565b81526020019060019003908161037457905050905086816000815181106103a5576103a5610e35565b6020908102919091010152604051635f0b7d5560e01b81526001600160a01b03851690635f0b7d55906103e090849087908790600401610e93565b600060405180830381600087803b1580156103fa57600080fd5b505af115801561040e573d6000803e3d6000fd5b5050505060005b8760400151518110156104e75760008860400151828151811061043a5761043a610e35565b60209081029190910181015180516040808301519383015190516323b872dd60e01b81526001600160a01b038b811660048301529485166024820152604481019190915291935091909116906323b872dd906064016020604051808303816000875af11580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190610f1d565b505080806104df90610e7a565b915050610415565b50604080518681523360208201527fba7599121d7877246723714eb403e13928cdbebe980abf7c630c0f9bef83fce1910160405180910390a150505050505050565b806020015181604001511161055157604051630c0b96df60e21b815260040160405180910390fd5b6040810151815160600151101561057b5760405163773a618760e01b815260040160405180910390fd5b50565b82820281151584158583048514171661059657600080fd5b0492915050565b80516001600160a01b031630146105c757604051631377d29960e21b815260040160405180910390fd5b806060015142111561057b5760405163387b2e5560e11b815260040160405180910390fd5b6000818152602081815260409182902082518084019093525460ff80821615801585526101009092041615159183019190915261063f576040516001622a81af60e21b0319815260040160405180910390fd5b8060200151156106625760405163ee3b3d4b60e01b815260040160405180910390fd5b506000908152602081905260409020805461ff001916610100179055565b6000604051806080016040528061069a8760200151610840565b815230602082015286516060908101516040830152018590529050600060016040519080825280602002602001820160405280156106e2578160200160208202803683370190505b50905083816000815181106106f9576106f9610e35565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905060008160008151811061074b5761074b610e35565b60209081029190910101526040805160018082528183019092526000918160200160208202803683370190505090508760200151602001518160008151811061079657610796610e35565b602090810291909101810191909152885190810151604091820151915163b6f0d88f60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263b6f0d88f926108049289928991899189918e90600401610fdd565b600060405180830381600087803b15801561081e57600080fd5b505af1158015610832573d6000803e3d6000fd5b505050505050505050505050565b604080516001808252818301909252606091816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181610857579050506040805160808101909152909150806000815260200183600001516001600160a01b03168152602001836020015181526020016000815250816000815181106108d6576108d6610e35565b6020026020010181905250919050565b6040805160e0810182526000606082018181526080830182905260a0830182905260c08301829052825282518084019093528083526020838101919091529091908201908152602001606081525090565b60006020828403121561094957600080fd5b5035919050565b80356001600160a01b038116811461096757600080fd5b919050565b60008083601f84011261097e57600080fd5b50813567ffffffffffffffff81111561099657600080fd5b6020830191508360208285010111156109ae57600080fd5b9250929050565b600080600080606085870312156109cb57600080fd5b843567ffffffffffffffff808211156109e357600080fd5b90860190608082890312156109f757600080fd5b819550610a0660208801610950565b94506040870135915080821115610a1c57600080fd5b50610a298782880161096c565b95989497509550505050565b60008060208385031215610a4857600080fd5b823567ffffffffffffffff811115610a5f57600080fd5b610a6b8582860161096c565b90969095509350505050565b805180516001600160a01b03908116845260208083015182168186015260408084015181870152606093840151848701528185015180518416608088015282015160a08701528085015160e060c0880181905281519088018190526000959184019486949093909290916101008a01905b80871015610b1d5787518051871683528581015186840152840151861684830152968401966001969096019590820190610ae8565b509998505050505050505050565b602081526000610b3e6020830184610a77565b9392505050565b6000808335601e19843603018112610b5c57600080fd5b83018035915067ffffffffffffffff821115610b7757600080fd5b6020019150368190038213156109ae57600080fd5b8183823760009101908152919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610bd557610bd5610b9c565b60405290565b60405160a0810167ffffffffffffffff81118282101715610bd557610bd5610b9c565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c2757610c27610b9c565b604052919050565b600060408284031215610c4157600080fd5b6040516040810181811067ffffffffffffffff82111715610c6457610c64610b9c565b604052905080610c7383610950565b8152602083013560208201525092915050565b600082601f830112610c9757600080fd5b8135602067ffffffffffffffff821115610cb357610cb3610b9c565b610cc1818360051b01610bfe565b82815260079290921b84018101918181019086841115610ce057600080fd5b8286015b84811015610d415760808189031215610cfd5760008081fd5b610d05610bb2565b610d0e82610950565b81528185013585820152604080830135908201526060610d2f818401610950565b90820152835291830191608001610ce4565b509695505050505050565b600060208284031215610d5e57600080fd5b813567ffffffffffffffff80821115610d7657600080fd5b90830190818503610120811215610d8c57600080fd5b610d94610bdb565b6080821215610da257600080fd5b610daa610bb2565b9150610db584610950565b8252610dc360208501610950565b602083015260408401356040830152606084013560608301528181526080840135602082015260a08401356040820152610e008760c08601610c2f565b6060820152610100840135915082821115610e1a57600080fd5b610e2687838601610c86565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610e7457610e74610e4b565b92915050565b600060018201610e8c57610e8c610e4b565b5060010190565b6000604082016040835280865180835260608501915060608160051b8601019250602080890160005b83811015610eea57605f19888703018552610ed8868351610a77565b95509382019390820190600101610ebc565b5050858403818701528684528688828601376000848801820152601f909601601f19169092019094019695505050505050565b600060208284031215610f2f57600080fd5b81518015158114610b3e57600080fd5b600081518084526020808501945080840160005b83811015610f785781516001600160a01b031687529582019590820190600101610f53565b509495945050505050565b600081518084526020808501945080840160005b83811015610f7857815187529582019590820190600101610f97565b803560ff8116808214610fc557600080fd5b83525060208181013590830152604090810135910152565b6101208082528851608091830182905280516101a084018190526000926101c0850192602092908301919085805b8281101561106a57845180516003811061103357634e487b7160e01b84526021600452602484fd5b8852808701516001600160a01b0316878901526040808201519089015260609081015190880152958301959385019360010161100b565b5050508c8301516001600160a01b038116610140880152915060408d015161016087015260608d01516101808701526001600160a01b038c168387015285840360408701526110b9848c610f3f565b935085840360608701526110cd848b610f83565b9350858403818701525050506110e38187610f83565b9150508360a08301526110f960c0830184610fb3565b9897505050505050505056fea2646970667358221220836afb2d782910e844177a7818ef64fcd4f8c63475807b951c54e36b13e166da64736f6c63430008100033";

type DutchLimitOrderReactorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DutchLimitOrderReactorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DutchLimitOrderReactor__factory extends ContractFactory {
  constructor(...args: DutchLimitOrderReactorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _permitPost: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DutchLimitOrderReactor> {
    return super.deploy(
      _permitPost,
      overrides || {}
    ) as Promise<DutchLimitOrderReactor>;
  }
  override getDeployTransaction(
    _permitPost: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_permitPost, overrides || {});
  }
  override attach(address: string): DutchLimitOrderReactor {
    return super.attach(address) as DutchLimitOrderReactor;
  }
  override connect(signer: Signer): DutchLimitOrderReactor__factory {
    return super.connect(signer) as DutchLimitOrderReactor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DutchLimitOrderReactorInterface {
    return new utils.Interface(_abi) as DutchLimitOrderReactorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DutchLimitOrderReactor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DutchLimitOrderReactor;
  }
}
