/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DirectTakerExecutor,
  DirectTakerExecutorInterface,
} from "../DirectTakerExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "reactor",
                type: "address",
              },
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "validationContract",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "validationData",
                type: "bytes",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxAmount",
                type: "uint256",
              },
            ],
            internalType: "struct InputToken",
            name: "input",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "bool",
                name: "isFeeOutput",
                type: "bool",
              },
            ],
            internalType: "struct OutputToken[]",
            name: "outputs",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct ResolvedOrder[]",
        name: "resolvedOrders",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "reactorCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a60380380610a6083398101604081905261002f9161007e565b600080546001600160a01b0319166001600160a01b03831690811782556040518392907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350506100ae565b60006020828403121561009057600080fd5b81516001600160a01b03811681146100a757600080fd5b9392505050565b6109a3806100bd6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806313af4035146100465780632213f3a91461005b5780638da5cb5b1461006e575b600080fd5b61005961005436600461062e565b6100b7565b005b610059610069366004610699565b6101ad565b60005461008e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60005473ffffffffffffffffffffffffffffffffffffffff16331461013d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60018414610217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f7265736f6c7665644f72646572732e6c656e67746820213d20310000000000006044820152606401610134565b6000805b8686600081811061022e5761022e61074b565b9050602002810190610240919061077a565b61024e9060808101906107b8565b90508110156103055760008787600081811061026c5761026c61074b565b905060200281019061027e919061077a565b61028c9060808101906107b8565b8381811061029c5761029c61074b565b9050608002018036038101906102b29190610831565b602081015181519192506102e09173ffffffffffffffffffffffffffffffffffffffff169088903090610480565b60208101516102ef90846108ff565b92505080806102fd90610918565b91505061021b565b50858560008181106103195761031961074b565b905060200281019061032b919061077a565b6103399060808101906107b8565b600081811061034a5761034a61074b565b610360926020608090920201908101915061062e565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff919091169063095ea7b3906044016020604051808303816000875af11580156103d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f99190610950565b5061047884878760008181106104115761041161074b565b9050602002810190610423919061077a565b6040013588886000816104385761043861074b565b905060200281019061044a919061077a565b61045b90604081019060200161062e565b73ffffffffffffffffffffffffffffffffffffffff169190610546565b505050505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061053f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610134565b5050505050565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806105ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610134565b50505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461062957600080fd5b919050565b60006020828403121561064057600080fd5b61064982610605565b9392505050565b60008083601f84011261066257600080fd5b50813567ffffffffffffffff81111561067a57600080fd5b60208301915083602082850101111561069257600080fd5b9250929050565b6000806000806000606086880312156106b157600080fd5b853567ffffffffffffffff808211156106c957600080fd5b818801915088601f8301126106dd57600080fd5b8135818111156106ec57600080fd5b8960208260051b850101111561070157600080fd5b6020830197508096505061071760208901610605565b9450604088013591508082111561072d57600080fd5b5061073a88828901610650565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126107ae57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126107ed57600080fd5b83018035915067ffffffffffffffff82111561080857600080fd5b6020019150600781901b360382131561069257600080fd5b801515811461082e57600080fd5b50565b60006080828403121561084357600080fd5b6040516080810181811067ffffffffffffffff8211171561088d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405261089983610605565b8152602083013560208201526108b160408401610605565b604082015260608301356108c481610820565b60608201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610912576109126108d0565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610949576109496108d0565b5060010190565b60006020828403121561096257600080fd5b81516106498161082056fea264697066735822122089b9b7bfba7a6d9e1d8aa5c05a0beae447f65d9f4dd3931401a977495b14d46064736f6c63430008110033";

type DirectTakerExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DirectTakerExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DirectTakerExecutor__factory extends ContractFactory {
  constructor(...args: DirectTakerExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DirectTakerExecutor> {
    return super.deploy(
      _owner,
      overrides || {}
    ) as Promise<DirectTakerExecutor>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): DirectTakerExecutor {
    return super.attach(address) as DirectTakerExecutor;
  }
  override connect(signer: Signer): DirectTakerExecutor__factory {
    return super.connect(signer) as DirectTakerExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DirectTakerExecutorInterface {
    return new utils.Interface(_abi) as DirectTakerExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DirectTakerExecutor {
    return new Contract(address, _abi, signerOrProvider) as DirectTakerExecutor;
  }
}
