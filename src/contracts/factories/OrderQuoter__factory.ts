/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { OrderQuoter, OrderQuoterInterface } from "../OrderQuoter";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "order",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "reactor",
                type: "address",
              },
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct TokenAmount",
            name: "input",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct Output[]",
            name: "outputs",
            type: "tuple[]",
          },
        ],
        internalType: "struct ResolvedOrder",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "reactor",
                type: "address",
              },
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct TokenAmount",
            name: "input",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct Output[]",
            name: "outputs",
            type: "tuple[]",
          },
        ],
        internalType: "struct ResolvedOrder[]",
        name: "resolvedOrders",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "reactorCallback",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109b1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635f0b7d551461003b578063b030bac314610050575b600080fd5b61004e610049366004610450565b610079565b005b61006361005e3660046105bf565b6100bf565b6040516100709190610649565b60405180910390f35b60008260008151811061008e5761008e610706565b60200260200101516040516020016100a69190610649565b6040516020818303038152906040529050805181602001fd5b6100c76101b7565b60408381015181518083018352858152602080820186905283519081018452600081529251638bcaadbd60e01b81526001600160a01b0390921692638bcaadbd9261011792913091600401610762565b600060405180830381600087803b15801561013157600080fd5b505af1925050508015610142575060015b610183573d808015610170576040519150601f19603f3d011682016040523d82523d6000602084013e610175565b606091505b5061017f81610189565b9150505b92915050565b6101916101b7565b60c0825110156101a357815182602001fd5b8180602001905181019061018391906108a2565b6040805160e0810182526000606082018181526080830182905260a0830182905260c08301829052825282518084019093528083526020838101919091529091908201908152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561024157610241610208565b60405290565b6040516060810167ffffffffffffffff8111828210171561024157610241610208565b6040516080810167ffffffffffffffff8111828210171561024157610241610208565b604051601f8201601f1916810167ffffffffffffffff811182821017156102b6576102b6610208565b604052919050565b600067ffffffffffffffff8211156102d8576102d8610208565b5060051b60200190565b6001600160a01b03811681146102f757600080fd5b50565b60006040828403121561030c57600080fd5b61031461021e565b90508135610321816102e2565b808252506020820135602082015292915050565b600082601f83011261034657600080fd5b8135602061035b610356836102be565b61028d565b8281526060928302850182019282820191908785111561037a57600080fd5b8387015b858110156103d35781818a0312156103965760008081fd5b61039e610247565b81356103a9816102e2565b815281860135868201526040808301356103c2816102e2565b90820152845292840192810161037e565b5090979650505050505050565b600082601f8301126103f157600080fd5b813567ffffffffffffffff81111561040b5761040b610208565b61041e601f8201601f191660200161028d565b81815284602083860101111561043357600080fd5b816020850160208301376000918101602001919091529392505050565b600080604080848603121561046457600080fd5b833567ffffffffffffffff8082111561047c57600080fd5b818601915086601f83011261049057600080fd5b813560206104a0610356836102be565b82815260059290921b8401810191818101908a8411156104bf57600080fd5b8286015b84811015610590578035868111156104da57600080fd5b8701808d03601f190160e08112156104f25760008081fd5b6104fa610247565b60808083121561050a5760008081fd5b61051261026a565b925087840135610521816102e2565b8352838c0135610530816102e2565b838901526060848101358d85015290840135908301528181526105568f60a085016102fa565b8782015260e083013591508882111561056f5760008081fd5b61057d8f8884860101610335565b818c0152855250509183019183016104c3565b50975050870135935050808311156105a757600080fd5b50506105b5858286016103e0565b9150509250929050565b60008082840360808112156105d357600080fd5b833567ffffffffffffffff8111156105ea57600080fd5b6105f6868287016103e0565b9350506060601f198201121561060b57600080fd5b50610614610247565b602084013560ff8116811461062857600080fd5b81526040848101356020830152606090940135938101939093525092909150565b6020808252825180516001600160a01b039081168484015281830151811660408086019190915280830151606080870191909152928301516080860152858401518051831660a087015284015160c08601528086015160e080870152805161010087018190526000959491850193869390926101208901925b808610156106f757865180518616855288810151898601528301518516838501529587019560019590950194928101926106c2565b50919998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b8181101561074257602081850181015186830182015201610726565b506000602082860101526020601f19601f83011685010191505092915050565b60608152600084516080606084015261077e60e084018261071c565b9050602086015160ff8151166080850152602081015160a0850152604081015160c08501525060018060a01b038516602084015282810360408401526107c4818561071c565b9695505050505050565b6000604082840312156107e057600080fd5b6107e861021e565b905081516107f5816102e2565b808252506020820151602082015292915050565b600082601f83011261081a57600080fd5b8151602061082a610356836102be565b8281526060928302850182019282820191908785111561084957600080fd5b8387015b858110156103d35781818a0312156108655760008081fd5b61086d610247565b8151610878816102e2565b81528186015186820152604080830151610891816102e2565b90820152845292840192810161084d565b6000602082840312156108b457600080fd5b815167ffffffffffffffff808211156108cc57600080fd5b9083019081850360e08112156108e157600080fd5b6108e9610247565b60808212156108f757600080fd5b6108ff61026a565b9150835161090c816102e2565b8252602084015161091c816102e2565b80602084015250604084015160408301526060840151606083015281815261094787608086016107ce565b602082015260c084015191508282111561096057600080fd5b61096c87838601610809565b6040820152969550505050505056fea26469706673582212200b64c9e908231d4e7805b0f7ed6acf5ab6c22278d7d8eab009ed294791caeb2c64736f6c63430008100033";

type OrderQuoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderQuoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderQuoter__factory extends ContractFactory {
  constructor(...args: OrderQuoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderQuoter> {
    return super.deploy(overrides || {}) as Promise<OrderQuoter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrderQuoter {
    return super.attach(address) as OrderQuoter;
  }
  override connect(signer: Signer): OrderQuoter__factory {
    return super.connect(signer) as OrderQuoter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderQuoterInterface {
    return new utils.Interface(_abi) as OrderQuoterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderQuoter {
    return new Contract(address, _abi, signerOrProvider) as OrderQuoter;
  }
}
