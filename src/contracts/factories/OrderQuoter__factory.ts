/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { OrderQuoter, OrderQuoterInterface } from "../OrderQuoter";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "order",
        type: "bytes",
      },
    ],
    name: "getReactor",
    outputs: [
      {
        internalType: "address payable",
        name: "reactor",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "order",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "reactor",
                type: "address",
              },
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "validationContract",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "validationData",
                type: "bytes",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxAmount",
                type: "uint256",
              },
            ],
            internalType: "struct InputToken",
            name: "input",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct OutputToken[]",
            name: "outputs",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct ResolvedOrder",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "reactor",
                type: "address",
              },
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "validationContract",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "validationData",
                type: "bytes",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxAmount",
                type: "uint256",
              },
            ],
            internalType: "struct InputToken",
            name: "input",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct OutputToken[]",
            name: "outputs",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct ResolvedOrder[]",
        name: "resolvedOrders",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "filler",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "reactorCallback",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e37806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d69146100465780637671d07b1461006f5780639943fa89146100b0575b600080fd5b6100596100543660046104a7565b6100c5565b60405161006691906105e3565b60405180910390f35b61008b61007d36600461070d565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6100c36100be366004610920565b610221565b005b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528401529282018390528282019290925260808101919091526040838101518401810151815180830183528581526020808201869052835190810184526000815292517f05afc97700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216926305afc977926101af92913091600401610ac0565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b5061021781610289565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216301461024357600080fd5b60008360008151811061025857610258610b52565b602002602001015160405160200161027091906105e3565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561030557815182602001fd5b8180602001905181019061021b9190610d2f565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103705761037061031e565b60405290565b6040516060810167ffffffffffffffff811182821017156103705761037061031e565b60405160a0810167ffffffffffffffff811182821017156103705761037061031e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156104035761040361031e565b604052919050565b600067ffffffffffffffff8211156104255761042561031e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261046257600080fd5b81356104756104708261040b565b6103bc565b81815284602083860101111561048a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104ba57600080fd5b823567ffffffffffffffff808211156104d257600080fd5b6104de86838701610451565b935060208501359150808211156104f457600080fd5b5061050185828601610451565b9150509250929050565b60005b8381101561052657818101518382015260200161050e565b50506000910152565b6000815180845261054781602086016020860161050b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156105d8578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a015260409182015116908801526060909601959082019060010161058d565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a084015261065f6101c084018261052f565b9050602084015161069d6040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a08601526106d88383610579565b925060608601519150808584030160c0860152506106f6828261052f565b915050608084015160e08401528091505092915050565b60006020828403121561071f57600080fd5b813567ffffffffffffffff81111561073657600080fd5b61074284828501610451565b949350505050565b600067ffffffffffffffff8211156107645761076461031e565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461079057600080fd5b50565b80356103198161076e565b600060c082840312156107b057600080fd5b6107b861034d565b905081356107c58161076e565b815260208201356107d58161076e565b80602083015250604082013560408201526060820135606082015260808201356107fe8161076e565b608082015260a082013567ffffffffffffffff81111561081d57600080fd5b61082984828501610451565b60a08301525092915050565b60006060828403121561084757600080fd5b61084f610376565b9050813561085c8161076e565b80825250602082013560208201526040820135604082015292915050565b600082601f83011261088b57600080fd5b8135602061089b6104708361074a565b828152606092830285018201928282019190878511156108ba57600080fd5b8387015b858110156109135781818a0312156108d65760008081fd5b6108de610376565b81356108e98161076e565b815281860135868201526040808301356109028161076e565b9082015284529284019281016108be565b5090979650505050505050565b60008060006060848603121561093557600080fd5b833567ffffffffffffffff8082111561094d57600080fd5b818601915086601f83011261096157600080fd5b813560206109716104708361074a565b82815260059290921b8401810191818101908a84111561099057600080fd5b8286015b84811015610a81578035868111156109ab57600080fd5b870160e0818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156109df57600080fd5b6109e7610399565b85820135888111156109f857600080fd5b610a068f888386010161079e565b825250610a168e60408401610835565b8682015260a082013588811115610a2d5760008081fd5b610a3b8f888386010161087a565b60408301525060c082013588811115610a545760008081fd5b610a628f8883860101610451565b60608301525060e0919091013560808201528352918301918301610994565b509750610a919050888201610793565b955050506040860135915080821115610aa957600080fd5b50610ab686828701610451565b9150509250925092565b606081526000845160406060840152610adc60a084018261052f565b905060208601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0848303016080850152610b17828261052f565b91505073ffffffffffffffffffffffffffffffffffffffff851660208401528281036040840152610b48818561052f565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610b9257600080fd5b8151610ba06104708261040b565b818152846020838601011115610bb557600080fd5b61074282602083016020870161050b565b600060c08284031215610bd857600080fd5b610be061034d565b90508151610bed8161076e565b81526020820151610bfd8161076e565b8060208301525060408201516040820152606082015160608201526080820151610c268161076e565b608082015260a082015167ffffffffffffffff811115610c4557600080fd5b61082984828501610b81565b600060608284031215610c6357600080fd5b610c6b610376565b90508151610c788161076e565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610ca757600080fd5b81516020610cb76104708361074a565b82815260609283028501820192828201919087851115610cd657600080fd5b8387015b858110156109135781818a031215610cf25760008081fd5b610cfa610376565b8151610d058161076e565b81528186015186820152604080830151610d1e8161076e565b908201528452928401928101610cda565b600060208284031215610d4157600080fd5b815167ffffffffffffffff80821115610d5957600080fd5b9083019060e08286031215610d6d57600080fd5b610d75610399565b825182811115610d8457600080fd5b610d9087828601610bc6565b825250610da08660208501610c51565b6020820152608083015182811115610db757600080fd5b610dc387828601610c96565b60408301525060a083015182811115610ddb57600080fd5b610de787828601610b81565b60608301525060c09290920151608083015250939250505056fea2646970667358221220b5c1629166a8ce3b29961d91db9a15cb21258fac71b948ef87db6c76c54efe6f64736f6c63430008130033";

type OrderQuoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderQuoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderQuoter__factory extends ContractFactory {
  constructor(...args: OrderQuoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderQuoter> {
    return super.deploy(overrides || {}) as Promise<OrderQuoter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrderQuoter {
    return super.attach(address) as OrderQuoter;
  }
  override connect(signer: Signer): OrderQuoter__factory {
    return super.connect(signer) as OrderQuoter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderQuoterInterface {
    return new utils.Interface(_abi) as OrderQuoterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderQuoter {
    return new Contract(address, _abi, signerOrProvider) as OrderQuoter;
  }
}
